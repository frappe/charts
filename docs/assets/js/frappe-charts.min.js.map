{"version":3,"file":"frappe-charts.min.js","sources":["../../../src/js/utils/dom.js","../../../src/js/utils/draw-utils.js","../../../src/js/utils/draw.js","../../../src/js/utils/animation.js","../../../src/js/utils/intervals.js","../../../src/js/utils/helpers.js","../../../src/js/utils/colors.js","../../../src/js/utils/date-utils.js","../../../src/js/charts.js","../../../src/js/utils/animate.js","../../../src/js/objects/SvgTip.js","../../../src/js/charts/BaseChart.js","../../../src/js/charts/AxisChart.js","../../../src/js/charts/BarChart.js","../../../src/js/charts/LineChart.js","../../../src/js/charts/ScatterChart.js","../../../src/js/charts/PercentageChart.js","../../../src/js/charts/PieChart.js","../../../src/js/charts/Heatmap.js"],"sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function offset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\n$.bind = (element, o) => {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n};\n\n$.unbind = (element, o) => {\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n};\n\n$.fire = (target, type, properties) => {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n};\n","export function getBarHeightAndYAttr(yTop, zeroLine, totalHeight) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\n\t\t// In case of invisible bars\n\t\tif(height === 0) {\n\t\t\theight = totalHeight * 0.01;\n\t\t\ty -= height;\n\t\t}\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\n\t\t// In case of invisible bars\n\t\tif(height === 0) {\n\t\t\theight = totalHeight * 0.01;\n\t\t}\n\t}\n\n\treturn [height, y];\n}\n","import { getBarHeightAndYAttr } from './draw-utils';\n\n// Constants used\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nfunction createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(parent, className, transform='') {\n\treturn createSVG('g', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\ttransform: transform\n\t});\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none') {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill\n\t\t}\n\t});\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color;\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function makeHeatSquare(className, x, y, size, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function makeText(className, x, y, content) {\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: '.32em',\n\t\tinnerHTML: content\n\t});\n}\n\nexport function makeXLine(height, textStartAt, point, labelClass, axisLineClass, xPos) {\n\tlet line = createSVG('line', {\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: height\n\t});\n\n\tlet text = createSVG('text', {\n\t\tclassName: labelClass,\n\t\tx: 0,\n\t\ty: textStartAt,\n\t\tdy: '.71em',\n\t\tinnerHTML: point\n\t});\n\n\tlet xLine = createSVG('g', {\n\t\tclassName: `tick ${axisLineClass}`,\n\t\ttransform: `translate(${ xPos }, 0)`\n\t});\n\n\txLine.appendChild(line);\n\txLine.appendChild(text);\n\n\treturn xLine;\n}\n\nexport function makeYLine(startAt, width, textEndAt, point, labelClass, axisLineClass, yPos, darker=false, lineType=\"\") {\n\tlet line = createSVG('line', {\n\t\tclassName: lineType === \"dashed\" ? \"dashed\": \"\",\n\t\tx1: startAt,\n\t\tx2: width,\n\t\ty1: 0,\n\t\ty2: 0\n\t});\n\n\tlet text = createSVG('text', {\n\t\tclassName: labelClass,\n\t\tx: textEndAt,\n\t\ty: 0,\n\t\tdy: '.32em',\n\t\tinnerHTML: point+\"\"\n\t});\n\n\tlet yLine = createSVG('g', {\n\t\tclassName: `tick ${axisLineClass}`,\n\t\ttransform: `translate(0, ${yPos})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(darker) {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tyLine.appendChild(line);\n\tyLine.appendChild(text);\n\n\treturn yLine;\n}\n\nexport var UnitRenderer = (function() {\n\tvar UnitRenderer = function(totalHeight, zeroLine, avgUnitWidth) {\n\t\tthis.totalHeight = totalHeight;\n\t\tthis.zeroLine = zeroLine;\n\t\tthis.avgUnitWidth = avgUnitWidth;\n\t};\n\n\tUnitRenderer.prototype = {\n\t\tbar: function (x, yTop, args, color, index, datasetIndex, noOfDatasets) {\n\t\t\tlet totalWidth = this.avgUnitWidth - args.spaceWidth;\n\t\t\tlet startX = x - totalWidth/2;\n\n\t\t\tlet width = totalWidth / noOfDatasets;\n\t\t\tlet currentX = startX + width * datasetIndex;\n\n\t\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.zeroLine, this.totalHeight);\n\n\t\t\treturn createSVG('rect', {\n\t\t\t\tclassName: `bar mini`,\n\t\t\t\tstyle: `fill: ${color}`,\n\t\t\t\t'data-point-index': index,\n\t\t\t\tx: currentX,\n\t\t\t\ty: y,\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t});\n\t\t},\n\n\t\tdot: function(x, y, args, color, index) {\n\t\t\treturn createSVG('circle', {\n\t\t\t\tstyle: `fill: ${color}`,\n\t\t\t\t'data-point-index': index,\n\t\t\t\tcx: x,\n\t\t\t\tcy: y,\n\t\t\t\tr: args.radius\n\t\t\t});\n\t\t}\n\t};\n\n\treturn UnitRenderer;\n})();\n","// Leveraging SMIL Animations\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVG(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nexport function runSVGAnimation(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet obj = element[0];\n\t\tlet parent = obj.unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = obj.unit;\n\t\t[animElement, newElement] = animateSVG(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, obj.unit);\n\n\t\tif(obj.array) {\n\t\t\tobj.array[obj.index] = newElement;\n\t\t} else {\n\t\t\tobj.object[obj.key] = newElement;\n\t\t}\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n","function normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nexport const DEFAULT_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta'];\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/8027444/6495043\n\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n}\n\nexport const getColor = (color) => {\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","// Playing around with dates\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(dateStr) {\n\tlet result = new Date(dateStr);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getDdMmYyyy(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\t(dd>9 ? '' : '0') + dd,\n\t\t(mm>9 ? '' : '0') + mm,\n\t\tdate.getFullYear()\n\t].join('-');\n}\n\nexport function getWeeksBetween(startDateStr, endDateStr) {\n\treturn Math.ceil(getDaysBetween(startDateStr, endDateStr) / 7);\n}\n\nexport function getDaysBetween(startDateStr, endDateStr) {\n\tlet millisecondsPerDay = 24 * 60 * 60 * 1000;\n\treturn (treatAsUtc(endDateStr) - treatAsUtc(startDateStr)) / millisecondsPerDay;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n\n// export function getMonthName() {}\n","import '../scss/charts.scss';\n\nimport BarChart from './charts/BarChart';\nimport LineChart from './charts/LineChart';\nimport ScatterChart from './charts/ScatterChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\n\n// if (ENV !== 'production') {\n// \t// Enable LiveReload\n// \tdocument.write(\n// \t\t'<script src=\"http://' + (location.host || 'localhost').split(':')[0] +\n// \t\t':35729/livereload.js?snipver=1\"></' + 'script>'\n// \t);\n// }\n\nconst chartTypes = {\n\tline: LineChart,\n\tbar: BarChart,\n\tscatter: ScatterChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart\n};\n\nfunction getChartByType(chartType = 'line', options) {\n\tif (!chartTypes[chartType]) {\n\t\treturn new LineChart(options);\n\t}\n\n\treturn new chartTypes[chartType](options);\n}\n\nexport default class Chart {\n\tconstructor(args) {\n\t\treturn getChartByType(args.type, arguments[0]);\n\t}\n}\n","import { getBarHeightAndYAttr } from './draw-utils';\n\nexport function getAnimXLine() {}\n\nexport function getAnimYLine() {}\n\nexport var Animator = (function() {\n\tvar Animator = function(totalHeight, totalWidth, zeroLine, avgUnitWidth) {\n\t\t// constants\n\t\tthis.totalHeight = totalHeight;\n\t\tthis.totalWidth = totalWidth;\n\n\t\t// changeables\n\t\tthis.avgUnitWidth = avgUnitWidth;\n\t\tthis.zeroLine = zeroLine;\n\t};\n\n\tAnimator.prototype = {\n\t\tbar: function(barObj, x, yTop, index, noOfDatasets) {\n\t\t\tlet start = x - this.avgUnitWidth/4;\n\t\t\tlet width = (this.avgUnitWidth/2)/noOfDatasets;\n\t\t\tlet [height, y] = getBarHeightAndYAttr(yTop, this.zeroLine, this.totalHeight);\n\n\t\t\tx = start + (width * index);\n\n\t\t\treturn [barObj, {width: width, height: height, x: x, y: y}, 350, \"easein\"];\n\t\t\t// bar.animate({height: args.newHeight, y: yTop}, 350, mina.easein);\n\t\t},\n\n\t\tdot: function(dotObj, x, yTop) {\n\t\t\treturn [dotObj, {cx: x, cy: yTop}, 350, \"easein\"];\n\t\t\t// dot.animate({cy: yTop}, 350, mina.easein);\n\t\t},\n\n\t\tpath: function(d, pathStr) {\n\t\t\tlet pathComponents = [];\n\t\t\tconst animPath = [{unit: d.path, object: d, key: 'path'}, {d:\"M\"+pathStr}, 350, \"easein\"];\n\t\t\tpathComponents.push(animPath);\n\n\t\t\tif(d.regionPath) {\n\t\t\t\tlet regStartPt = `0,${this.zeroLine}L`;\n\t\t\t\tlet regEndPt = `L${this.totalWidth}, ${this.zeroLine}`;\n\n\t\t\t\tconst animRegion = [\n\t\t\t\t\t{unit: d.regionPath, object: d, key: 'regionPath'},\n\t\t\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\t\t\t350,\n\t\t\t\t\t\"easein\"\n\t\t\t\t];\n\t\t\t\tpathComponents.push(animRegion);\n\t\t\t}\n\n\t\t\treturn pathComponents;\n\t\t},\n\t};\n\n\treturn Animator;\n})();\n","import { $ } from '../utils/dom';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.title_name = '';\n\t\tthis.title_value = '';\n\t\tthis.list_values = [];\n\t\tthis.title_value_first = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.make_tooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calc_position();\n\t\t// this.show_tip();\n\t}\n\n\tmake_tooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hide_tip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.data_point_list = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hide_tip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.title_value_first) {\n\t\t\ttitle = `<strong>${this.title_value}</strong>${this.title_name}`;\n\t\t} else {\n\t\t\ttitle = `${this.title_name}<strong>${this.title_value}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.data_point_list.innerHTML = '';\n\n\t\tthis.list_values.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ set.value === 0 || set.value ? set.value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.data_point_list.appendChild(li);\n\t\t});\n\t}\n\n\tcalc_position() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight;\n\t\tthis.left = this.x - width/2;\n\t\tlet max_left = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > max_left) {\n\t\t\tlet delta = this.left - max_left;\n\t\t\tlet pointer_offset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointer_offset;\n\n\t\t\tthis.left = max_left;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tset_values(x, y, title_name = '', title_value = '', list_values = [], title_value_first = 0) {\n\t\tthis.title_name = title_name;\n\t\tthis.title_value = title_value;\n\t\tthis.list_values = list_values;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.title_value_first = title_value_first;\n\t\tthis.refresh();\n\t}\n\n\thide_tip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshow_tip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup } from '../utils/draw';\nimport { getStringWidth } from '../utils/helpers';\nimport { getColor, DEFAULT_COLORS } from '../utils/colors';\nimport Chart from '../charts';\n\nconst ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nconst COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tscatter: ['line', 'bar', 'percentage', 'pie'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\n// TODO: Needs structure as per only labels/datasets\nconst COLOR_COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter'],\n\tline: ['scatter', 'bar'],\n\tpie: ['percentage'],\n\tscatter: ['line', 'bar'],\n\tpercentage: ['pie'],\n\theatmap: []\n};\n\nexport default class BaseChart {\n\tconstructor({\n\t\theight = 240,\n\n\t\ttitle = '',\n\t\tsubtitle = '',\n\t\tcolors = [],\n\t\tsummary = [],\n\n\t\tis_navigable = 0,\n\t\thas_legend = 0,\n\n\t\ttype = '',\n\n\t\tparent,\n\t\tdata\n\t}) {\n\t\tthis.raw_chart_args = arguments[0];\n\n\t\tthis.parent = typeof parent === 'string' ? document.querySelector(parent) : parent;\n\t\tthis.title = title;\n\t\tthis.subtitle = subtitle;\n\n\t\tthis.data = data;\n\n\t\tthis.specific_values = data.specific_values || [];\n\t\tthis.summary = summary;\n\n\t\tthis.is_navigable = is_navigable;\n\t\tif(this.is_navigable) {\n\t\t\tthis.current_index = 0;\n\t\t}\n\t\tthis.has_legend = has_legend;\n\n\t\tthis.setColors(colors, type);\n\t\tthis.set_margins(height);\n\t}\n\n\tget_different_chart(type) {\n\t\tif(type === this.type) return;\n\n\t\tif(!ALL_CHART_TYPES.includes(type)) {\n\t\t\tconsole.error(`'${type}' is not a valid chart type.`);\n\t\t}\n\n\t\tif(!COMPATIBLE_CHARTS[this.type].includes(type)) {\n\t\t\tconsole.error(`'${this.type}' chart cannot be converted to a '${type}' chart.`);\n\t\t}\n\n\t\t// whether the new chart can use the existing colors\n\t\tconst use_color = COLOR_COMPATIBLE_CHARTS[this.type].includes(type);\n\n\t\t// Okay, this is anticlimactic\n\t\t// this function will need to actually be 'change_chart_type(type)'\n\t\t// that will update only the required elements, but for now ...\n\t\treturn new Chart({\n\t\t\tparent: this.raw_chart_args.parent,\n\t\t\ttitle: this.title,\n\t\t\tdata: this.raw_chart_args.data,\n\t\t\ttype: type,\n\t\t\theight: this.raw_chart_args.height,\n\t\t\tcolors: use_color ? this.colors : undefined\n\t\t});\n\t}\n\n\tsetColors(colors, type) {\n\t\tthis.colors = colors;\n\n\t\t// TODO: Needs structure as per only labels/datasets\n\t\tconst list = type === 'percentage' || type === 'pie'\n\t\t\t? this.data.labels\n\t\t\t: this.data.datasets;\n\n\t\tif(!this.colors || (list && this.colors.length < list.length)) {\n\t\t\tthis.colors = DEFAULT_COLORS;\n\t\t}\n\n\t\tthis.colors = this.colors.map(color => getColor(color));\n\t}\n\n\tset_margins(height) {\n\t\tthis.base_height = height;\n\t\tthis.height = height - 40;\n\t\tthis.translate_x = 60;\n\t\tthis.translate_y = 10;\n\t}\n\n\tsetup() {\n\t\tif(!this.parent) {\n\t\t\tconsole.error(\"No parent element to render on was provided.\");\n\t\t\treturn;\n\t\t}\n\t\tif(this.validate_and_prepare_data()) {\n\t\t\tthis.bind_window_events();\n\t\t\tthis.refresh(true);\n\t\t}\n\t}\n\n\tvalidate_and_prepare_data() {\n\t\treturn true;\n\t}\n\n\tbind_window_events() {\n\t\twindow.addEventListener('resize', () => this.refresh());\n\t\twindow.addEventListener('orientationchange', () => this.refresh());\n\t}\n\n\trefresh(init=false) {\n\t\tthis.setup_base_values();\n\t\tthis.set_width();\n\n\t\tthis.setup_container();\n\t\tthis.setup_components();\n\n\t\tthis.setup_values();\n\t\tthis.setup_utils();\n\n\t\tthis.make_graph_components(init);\n\t\tthis.make_tooltip();\n\n\t\tif(this.summary.length > 0) {\n\t\t\tthis.show_custom_summary();\n\t\t} else {\n\t\t\tthis.show_summary();\n\t\t}\n\n\t\tif(this.is_navigable) {\n\t\t\tthis.setup_navigation(init);\n\t\t}\n\t}\n\n\tset_width() {\n\t\tlet special_values_width = 0;\n\t\tlet char_width = 8;\n\t\tthis.specific_values.map(val => {\n\t\t\tlet str_width = getStringWidth((val.title + \"\"), char_width);\n\t\t\tif(str_width > special_values_width) {\n\t\t\t\tspecial_values_width = str_width - 40;\n\t\t\t}\n\t\t});\n\t\tthis.base_width = getElementContentWidth(this.parent) - special_values_width;\n\t\tthis.width = this.base_width - this.translate_x * 2;\n\t}\n\n\tsetup_base_values() {}\n\n\tsetup_container() {\n\t\tthis.container = $.create('div', {\n\t\t\tclassName: 'chart-container',\n\t\t\tinnerHTML: `<h6 class=\"title\">${this.title}</h6>\n\t\t\t\t<h6 class=\"sub-title uppercase\">${this.subtitle}</h6>\n\t\t\t\t<div class=\"frappe-chart graphics\"></div>\n\t\t\t\t<div class=\"graph-stats-container\"></div>`\n\t\t});\n\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\t\tthis.parent.appendChild(this.container);\n\n\t\tthis.chart_wrapper = this.container.querySelector('.frappe-chart');\n\t\tthis.stats_wrapper = this.container.querySelector('.graph-stats-container');\n\n\t\tthis.make_chart_area();\n\t\tthis.make_draw_area();\n\t}\n\n\tmake_chart_area() {\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.chart_wrapper,\n\t\t\t'chart',\n\t\t\tthis.base_width,\n\t\t\tthis.base_height\n\t\t);\n\t\tthis.svg_defs = makeSVGDefs(this.svg);\n\t\treturn this.svg;\n\t}\n\n\tmake_draw_area() {\n\t\tthis.draw_area = makeSVGGroup(\n\t\t\tthis.svg,\n\t\t\tthis.type + '-chart',\n\t\t\t`translate(${this.translate_x}, ${this.translate_y})`\n\t\t);\n\t}\n\n\tsetup_components() { }\n\n\tmake_tooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.chart_wrapper,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bind_tooltip();\n\t}\n\n\n\tshow_summary() {}\n\tshow_custom_summary() {\n\t\tthis.summary.map(d => {\n\t\t\tlet stats = $.create('div', {\n\t\t\t\tclassName: 'stats',\n\t\t\t\tinnerHTML: `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background:${d.color}\"></i>\n\t\t\t\t\t${d.title}: ${d.value}\n\t\t\t\t</span>`\n\t\t\t});\n\t\t\tthis.stats_wrapper.appendChild(stats);\n\t\t});\n\t}\n\n\tsetup_navigation(init=false) {\n\t\tthis.make_overlay();\n\n\t\tif(init) {\n\t\t\tthis.bind_overlay();\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.chart_wrapper)) {\n\t\t\t\t\te = e || window.event;\n\n\t\t\t\t\tif (e.keyCode == '37') {\n\t\t\t\t\t\tthis.on_left_arrow();\n\t\t\t\t\t} else if (e.keyCode == '39') {\n\t\t\t\t\t\tthis.on_right_arrow();\n\t\t\t\t\t} else if (e.keyCode == '38') {\n\t\t\t\t\t\tthis.on_up_arrow();\n\t\t\t\t\t} else if (e.keyCode == '40') {\n\t\t\t\t\t\tthis.on_down_arrow();\n\t\t\t\t\t} else if (e.keyCode == '13') {\n\t\t\t\t\t\tthis.on_enter_key();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmake_overlay() {}\n\tbind_overlay() {}\n\tbind_units() {}\n\n\ton_left_arrow() {}\n\ton_right_arrow() {}\n\ton_up_arrow() {}\n\ton_down_arrow() {}\n\ton_enter_key() {}\n\n\tget_data_point(index=this.current_index) {\n\t\t// check for length\n\t\tlet data_point = {\n\t\t\tindex: index\n\t\t};\n\t\tlet y = this.y[0];\n\t\t['svg_units', 'y_tops', 'values'].map(key => {\n\t\t\tlet data_key = key.slice(0, key.length-1);\n\t\t\tdata_point[data_key] = y[key][index];\n\t\t});\n\t\tdata_point.label = this.x[index];\n\t\treturn data_point;\n\t}\n\n\tupdate_current_data_point(index) {\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= this.x.length) index = this.x.length - 1;\n\t\tif(index === this.current_index) return;\n\t\tthis.current_index = index;\n\t\t$.fire(this.parent, \"data-select\", this.get_data_point());\n\t}\n\n\t// Objects\n\tsetup_utils() { }\n\n\tmakeDrawAreaComponent(className, transform='') {\n\t\treturn makeSVGGroup(this.draw_area, className, transform);\n\t}\n}\n","import { offset } from '../utils/dom';\nimport { UnitRenderer, makeXLine, makeYLine } from '../utils/draw';\nimport { Animator } from '../utils/animate';\nimport { runSVGAnimation } from '../utils/animation';\nimport { calcIntervals } from '../utils/intervals';\nimport { floatTwo, arraysEqual, getStringWidth } from '../utils/helpers';\nimport BaseChart from './BaseChart';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.x = this.data.labels || [];\n\t\tthis.y = this.data.datasets || [];\n\n\t\tthis.is_series = args.is_series;\n\n\t\tthis.format_tooltip_y = args.format_tooltip_y;\n\t\tthis.format_tooltip_x = args.format_tooltip_x;\n\n\t\tthis.zero_line = this.height;\n\n\t\t// this.old_values = {};\n\t}\n\n\tvalidate_and_prepare_data() {\n\t\treturn true;\n\t}\n\n\tsetup_values() {\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values = d.values.map(val => (!isNaN(val) ? val : 0));\n\t\t});\n\t\tthis.setup_x();\n\t\tthis.setup_y();\n\t}\n\n\tsetup_x() {\n\t\tthis.set_avg_unit_width_and_x_offset();\n\n\t\tif(this.x_axis_positions) {\n\t\t\tthis.x_old_axis_positions =  this.x_axis_positions.slice();\n\t\t}\n\t\tthis.x_axis_positions = this.x.map((d, i) =>\n\t\t\tfloatTwo(this.x_offset + i * this.avg_unit_width));\n\n\t\tif(!this.x_old_axis_positions) {\n\t\t\tthis.x_old_axis_positions = this.x_axis_positions.slice();\n\t\t}\n\t}\n\n\tsetup_y() {\n\t\tif(this.y_axis_values) {\n\t\t\tthis.y_old_axis_values =  this.y_axis_values.slice();\n\t\t}\n\n\t\tlet values = this.get_all_y_values();\n\n\t\tif(this.y_sums && this.y_sums.length > 0) {\n\t\t\tvalues = values.concat(this.y_sums);\n\t\t}\n\n\t\tthis.y_axis_values = calcIntervals(values, this.type === 'line');\n\n\t\tif(!this.y_old_axis_values) {\n\t\t\tthis.y_old_axis_values = this.y_axis_values.slice();\n\t\t}\n\n\t\tconst y_pts = this.y_axis_values;\n\t\tconst value_range = y_pts[y_pts.length-1] - y_pts[0];\n\n\t\tif(this.multiplier) this.old_multiplier = this.multiplier;\n\t\tthis.multiplier = this.height / value_range;\n\t\tif(!this.old_multiplier) this.old_multiplier = this.multiplier;\n\n\t\tconst interval = y_pts[1] - y_pts[0];\n\t\tconst interval_height = interval * this.multiplier;\n\n\t\tlet zero_index;\n\n\t\tif(y_pts.indexOf(0) >= 0) {\n\t\t\t// the range has a given zero\n\t\t\t// zero-line on the chart\n\t\t\tzero_index = y_pts.indexOf(0);\n\t\t} else if(y_pts[0] > 0) {\n\t\t\t// Minimum value is positive\n\t\t\t// zero-line is off the chart: below\n\t\t\tlet min = y_pts[0];\n\t\t\tzero_index = (-1) * min / interval;\n\t\t} else {\n\t\t\t// Maximum value is negative\n\t\t\t// zero-line is off the chart: above\n\t\t\tlet max = y_pts[y_pts.length - 1];\n\t\t\tzero_index = (-1) * max / interval + (y_pts.length - 1);\n\t\t}\n\n\t\tif(this.zero_line) this.old_zero_line = this.zero_line;\n\t\tthis.zero_line = this.height - (zero_index * interval_height);\n\t\tif(!this.old_zero_line) this.old_zero_line = this.zero_line;\n\t}\n\n\tsetup_components() {\n\t\tsuper.setup_components();\n\t\tthis.setup_marker_components();\n\t\tthis.setup_aggregation_components();\n\t\tthis.setup_graph_components();\n\t}\n\n\tsetup_marker_components() {\n\t\tthis.y_axis_group = this.makeDrawAreaComponent('y axis');\n\t\tthis.x_axis_group = this.makeDrawAreaComponent('x axis');\n\t\tthis.specific_y_group = this.makeDrawAreaComponent('specific axis');\n\t}\n\n\tsetup_aggregation_components() {\n\t\tthis.sum_group = this.makeDrawAreaComponent('data-points');\n\t\tthis.average_group = this.makeDrawAreaComponent('chart-area');\n\t}\n\n\tsetup_graph_components() {\n\t\tthis.svg_units_groups = [];\n\t\tthis.y.map((d, i) => {\n\t\t\tthis.svg_units_groups[i] = this.makeDrawAreaComponent(\n\t\t\t\t'data-points data-points-' + i);\n\t\t});\n\t}\n\n\tmake_graph_components(init=false) {\n\t\tthis.make_y_axis();\n\t\tthis.make_x_axis();\n\t\tthis.draw_graph(init);\n\t\tthis.make_y_specifics();\n\t}\n\n\t// make VERTICAL lines for x values\n\tmake_x_axis(animate=false) {\n\t\tlet char_width = 8;\n\t\tlet start_at, height, text_start_at, axis_line_class = '';\n\t\tif(this.x_axis_mode === 'span') {\t\t// long spanning lines\n\t\t\tstart_at = -7;\n\t\t\theight = this.height + 15;\n\t\t\ttext_start_at = this.height + 25;\n\t\t} else if(this.x_axis_mode === 'tick'){\t// short label lines\n\t\t\tstart_at = this.height;\n\t\t\theight = 6;\n\t\t\ttext_start_at = 9;\n\t\t\taxis_line_class = 'x-axis-label';\n\t\t}\n\n\t\tthis.x_axis_group.setAttribute('transform', `translate(0,${start_at})`);\n\n\t\tif(animate) {\n\t\t\tthis.make_anim_x_axis(height, text_start_at, axis_line_class);\n\t\t\treturn;\n\t\t}\n\n\t\tlet allowed_space = this.avg_unit_width * 1.5;\n\t\tlet allowed_letters = allowed_space / 8;\n\n\t\tthis.x_axis_group.textContent = '';\n\t\tthis.x.map((point, i) => {\n\t\t\tlet space_taken = getStringWidth(point, char_width) + 2;\n\t\t\tif(space_taken > allowed_space) {\n\t\t\t\tif(this.is_series) {\n\t\t\t\t\t// Skip some axis lines if X axis is a series\n\t\t\t\t\tlet skips = 1;\n\t\t\t\t\twhile((space_taken/skips)*2 > allowed_space) {\n\t\t\t\t\t\tskips++;\n\t\t\t\t\t}\n\t\t\t\t\tif(i % skips !== 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpoint = point.slice(0, allowed_letters-3) + \" ...\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.x_axis_group.appendChild(\n\t\t\t\tmakeXLine(\n\t\t\t\t\theight,\n\t\t\t\t\ttext_start_at,\n\t\t\t\t\tpoint,\n\t\t\t\t\t'x-value-text',\n\t\t\t\t\taxis_line_class,\n\t\t\t\t\tthis.x_axis_positions[i]\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\t// make HORIZONTAL lines for y values\n\tmake_y_axis(animate=false) {\n\t\tif(animate) {\n\t\t\tthis.make_anim_y_axis();\n\t\t\tthis.make_anim_y_specifics();\n\t\t\treturn;\n\t\t}\n\n\t\tlet [width, text_end_at, axis_line_class, start_at] = this.get_y_axis_line_props();\n\n\t\tthis.y_axis_group.textContent = '';\n\t\tthis.y_axis_values.map((value, i) => {\n\t\t\tthis.y_axis_group.appendChild(\n\t\t\t\tmakeYLine(\n\t\t\t\t\tstart_at,\n\t\t\t\t\twidth,\n\t\t\t\t\ttext_end_at,\n\t\t\t\t\tvalue,\n\t\t\t\t\t'y-value-text',\n\t\t\t\t\taxis_line_class,\n\t\t\t\t\tthis.zero_line - value * this.multiplier,\n\t\t\t\t\t(value === 0 && i !== 0) // Non-first Zero line\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\tget_y_axis_line_props(specific=false) {\n\t\tif(specific) {\n\t\t\treturn[this.width, this.width + 5, 'specific-value', 0];\n\t\t}\n\t\tlet width, text_end_at = -9, axis_line_class = '', start_at = 0;\n\t\tif(this.y_axis_mode === 'span') {\t\t// long spanning lines\n\t\t\twidth = this.width + 6;\n\t\t\tstart_at = -6;\n\t\t} else if(this.y_axis_mode === 'tick'){\t// short label lines\n\t\t\twidth = -6;\n\t\t\taxis_line_class = 'y-axis-label';\n\t\t}\n\n\t\treturn [width, text_end_at, axis_line_class, start_at];\n\t}\n\n\tdraw_graph(init=false) {\n\t\tif(this.raw_chart_args.hasOwnProperty(\"init\") && !this.raw_chart_args.init) {\n\t\t\tthis.y.map((d, i) => {\n\t\t\t\td.svg_units = [];\n\t\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, this.colors[i]);\n\t\t\t\tthis.make_new_units(d, i);\n\t\t\t\tthis.calc_y_dependencies();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tif(init) {\n\t\t\tthis.draw_new_graph_and_animate();\n\t\t\treturn;\n\t\t}\n\t\tthis.y.map((d, i) => {\n\t\t\td.svg_units = [];\n\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, this.colors[i]);\n\t\t\tthis.make_new_units(d, i);\n\t\t});\n\t}\n\n\tdraw_new_graph_and_animate() {\n\t\tlet data = [];\n\t\tthis.y.map((d, i) => {\n\t\t\t// Anim: Don't draw initial values, store them and update later\n\t\t\td.y_tops = new Array(d.values.length).fill(this.zero_line); // no value\n\t\t\tdata.push({values: d.values});\n\t\t\td.svg_units = [];\n\n\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, this.colors[i]);\n\t\t\tthis.make_new_units(d, i);\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\tthis.update_values(data);\n\t\t}, 350);\n\t}\n\n\tsetup_navigation(init) {\n\t\tif(init) {\n\t\t\t// Hack: defer nav till initial update_values\n\t\t\tsetTimeout(() => {\n\t\t\t\tsuper.setup_navigation(init);\n\t\t\t}, 500);\n\t\t} else {\n\t\t\tsuper.setup_navigation(init);\n\t\t}\n\t}\n\n\tmake_new_units(d, i) {\n\t\tthis.make_new_units_for_dataset(\n\t\t\tthis.x_axis_positions,\n\t\t\td.y_tops,\n\t\t\tthis.colors[i],\n\t\t\ti,\n\t\t\tthis.y.length\n\t\t);\n\t}\n\n\tmake_new_units_for_dataset(x_values, y_values, color, dataset_index,\n\t\tno_of_datasets, units_group, units_array, unit) {\n\n\t\tif(!units_group) units_group = this.svg_units_groups[dataset_index];\n\t\tif(!units_array) units_array = this.y[dataset_index].svg_units;\n\t\tif(!unit) unit = this.unit_args;\n\n\t\tunits_group.textContent = '';\n\t\tunits_array.length = 0;\n\n\t\tlet unit_renderer = new UnitRenderer(this.height, this.zero_line, this.avg_unit_width);\n\n\t\ty_values.map((y, i) => {\n\t\t\tlet data_unit = unit_renderer[unit.type](\n\t\t\t\tx_values[i],\n\t\t\t\ty,\n\t\t\t\tunit.args,\n\t\t\t\tcolor,\n\t\t\t\ti,\n\t\t\t\tdataset_index,\n\t\t\t\tno_of_datasets\n\t\t\t);\n\t\t\tunits_group.appendChild(data_unit);\n\t\t\tunits_array.push(data_unit);\n\t\t});\n\n\t\tif(this.is_navigable) {\n\t\t\tthis.bind_units(units_array);\n\t\t}\n\t}\n\n\tmake_y_specifics() {\n\t\tthis.specific_y_group.textContent = '';\n\t\tthis.specific_values.map(d => {\n\t\t\tthis.specific_y_group.appendChild(\n\t\t\t\tmakeYLine(\n\t\t\t\t\t0,\n\t\t\t\t\tthis.width,\n\t\t\t\t\tthis.width + 5,\n\t\t\t\t\td.title.toUpperCase(),\n\t\t\t\t\t'specific-value',\n\t\t\t\t\t'specific-value',\n\t\t\t\t\tthis.zero_line - d.value * this.multiplier,\n\t\t\t\t\tfalse,\n\t\t\t\t\td.line_type\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\tbind_tooltip() {\n\t\t// TODO: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.chart_wrapper.addEventListener('mousemove', (e) => {\n\t\t\tlet o = offset(this.chart_wrapper);\n\t\t\tlet relX = e.pageX - o.left - this.translate_x;\n\t\t\tlet relY = e.pageY - o.top - this.translate_y;\n\n\t\t\tif(relY < this.height + this.translate_y * 2) {\n\t\t\t\tthis.map_tooltip_x_position_and_show(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hide_tip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmap_tooltip_x_position_and_show(relX) {\n\t\tif(!this.y_min_tops) return;\n\n\t\tlet titles = this.x;\n\t\tif(this.format_tooltip_x && this.format_tooltip_x(this.x[0])) {\n\t\t\ttitles = this.x.map(d=>this.format_tooltip_x(d));\n\t\t}\n\n\t\tlet y_format = this.format_tooltip_y && this.format_tooltip_y(this.y[0].values[0]);\n\n\t\tfor(var i=this.x_axis_positions.length - 1; i >= 0 ; i--) {\n\t\t\tlet x_val = this.x_axis_positions[i];\n\t\t\t// let delta = i === 0 ? this.avg_unit_width : x_val - this.x_axis_positions[i-1];\n\t\t\tif(relX > x_val - this.avg_unit_width/2) {\n\t\t\t\tlet x = x_val + this.translate_x;\n\t\t\t\tlet y = this.y_min_tops[i] + this.translate_y;\n\n\t\t\t\tlet title = titles[i];\n\t\t\t\tlet values = this.y.map((set, j) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: set.title,\n\t\t\t\t\t\tvalue: y_format ? this.format_tooltip_y(set.values[i]) : set.values[i],\n\t\t\t\t\t\tcolor: this.colors[j],\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tthis.tip.set_values(x, y, title, '', values);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// API\n\tshow_sums() {\n\t\tthis.updating = true;\n\n\t\tthis.y_sums = new Array(this.x_axis_positions.length).fill(0);\n\t\tthis.y.map(d => {\n\t\t\td.values.map( (value, i) => {\n\t\t\t\tthis.y_sums[i] += value;\n\t\t\t});\n\t\t});\n\n\t\t// Remake y axis, animate\n\t\tthis.update_values();\n\n\t\t// Then make sum units, don't animate\n\t\tthis.sum_units = [];\n\n\t\tthis.make_new_units_for_dataset(\n\t\t\tthis.x_axis_positions,\n\t\t\tthis.y_sums.map( val => floatTwo(this.zero_line - val * this.multiplier)),\n\t\t\t'#f0f4f7',\n\t\t\t0,\n\t\t\t1,\n\t\t\tthis.sum_group,\n\t\t\tthis.sum_units\n\t\t);\n\n\t\t// this.make_path && this.make_path(d, i, old_x, old_y, this.colors[i]);\n\n\t\tthis.updating = false;\n\t}\n\n\thide_sums() {\n\t\tif(this.updating) return;\n\t\tthis.y_sums = [];\n\t\tthis.sum_group.textContent = '';\n\t\tthis.sum_units = [];\n\t\tthis.update_values();\n\t}\n\n\tshow_averages() {\n\t\tthis.old_specific_values = this.specific_values.slice();\n\t\tthis.y.map((d, i) => {\n\t\t\tlet sum = 0;\n\t\t\td.values.map(e => {sum+=e;});\n\t\t\tlet average = sum/d.values.length;\n\n\t\t\tthis.specific_values.push({\n\t\t\t\ttitle: \"AVG\" + \" \" + (i+1),\n\t\t\t\tline_type: \"dashed\",\n\t\t\t\tvalue: average,\n\t\t\t\tauto: 1\n\t\t\t});\n\t\t});\n\n\t\tthis.update_values();\n\t}\n\n\thide_averages() {\n\t\tthis.old_specific_values = this.specific_values.slice();\n\n\t\tlet indices_to_remove = [];\n\t\tthis.specific_values.map((d, i) => {\n\t\t\tif(d.auto) indices_to_remove.unshift(i);\n\t\t});\n\n\t\tindices_to_remove.map(index => {\n\t\t\tthis.specific_values.splice(index, 1);\n\t\t});\n\n\t\tthis.update_values();\n\t}\n\n\tupdate_values(new_y, new_x) {\n\t\tif(!new_x) {\n\t\t\tnew_x = this.x;\n\t\t}\n\t\tthis.elements_to_animate = [];\n\t\tthis.updating = true;\n\n\t\tthis.old_x_values = this.x.slice();\n\t\tthis.old_y_axis_tops = this.y.map(d => d.y_tops.slice());\n\n\t\tthis.old_y_values = this.y.map(d => d.values);\n\n\t\tthis.no_of_extra_pts = new_x.length - this.x.length;\n\n\t\t// Just update values prop, setup_x/y() will do the rest\n\t\tif(new_y) this.y.map((d, i) => {d.values = new_y[i].values;});\n\t\tif(new_x) this.x = new_x;\n\n\t\tthis.setup_x();\n\t\tthis.setup_y();\n\n\t\t// Change in data, so calculate dependencies\n\t\tthis.calc_y_dependencies();\n\n\t\t// Got the values? Now begin drawing\n\t\tthis.animator = new Animator(this.height, this.width, this.zero_line, this.avg_unit_width);\n\n\t\t// Animate only if positions have changed\n\t\tif(!arraysEqual(this.x_old_axis_positions, this.x_axis_positions)) {\n\t\t\tthis.make_x_axis(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tif(!this.updating) this.make_x_axis();\n\t\t\t}, 350);\n\t\t}\n\n\t\tif(!arraysEqual(this.y_old_axis_values, this.y_axis_values) ||\n\t\t\t(this.old_specific_values &&\n\t\t\t!arraysEqual(this.old_specific_values, this.specific_values))) {\n\n\t\t\tthis.make_y_axis(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tif(!this.updating) {\n\t\t\t\t\tthis.make_y_axis();\n\t\t\t\t\tthis.make_y_specifics();\n\t\t\t\t}\n\t\t\t}, 350);\n\t\t}\n\n\t\tthis.animate_graphs();\n\n\t\t// Trigger animation with the animatable elements in this.elements_to_animate\n\t\tthis.run_animation();\n\n\t\tthis.updating = false;\n\t}\n\n\tadd_data_point(y_point, x_point, index=this.x.length) {\n\t\tlet new_y = this.y.map(data_set => { return {values:data_set.values}; });\n\t\tnew_y.map((d, i) => { d.values.splice(index, 0, y_point[i]); });\n\t\tlet new_x = this.x.slice();\n\t\tnew_x.splice(index, 0, x_point);\n\n\t\tthis.update_values(new_y, new_x);\n\t}\n\n\tremove_data_point(index = this.x.length-1) {\n\t\tif(this.x.length < 3) return;\n\n\t\tlet new_y = this.y.map(data_set => { return {values:data_set.values}; });\n\t\tnew_y.map((d) => { d.values.splice(index, 1); });\n\t\tlet new_x = this.x.slice();\n\t\tnew_x.splice(index, 1);\n\n\t\tthis.update_values(new_y, new_x);\n\t}\n\n\trun_animation() {\n\t\tlet anim_svg = runSVGAnimation(this.svg, this.elements_to_animate);\n\n\t\tif(this.svg.parentNode == this.chart_wrapper) {\n\t\t\tthis.chart_wrapper.removeChild(this.svg);\n\t\t\tthis.chart_wrapper.appendChild(anim_svg);\n\n\t\t}\n\n\t\t// Replace the new svg (data has long been replaced)\n\t\tsetTimeout(() => {\n\t\t\tif(anim_svg.parentNode == this.chart_wrapper) {\n\t\t\t\tthis.chart_wrapper.removeChild(anim_svg);\n\t\t\t\tthis.chart_wrapper.appendChild(this.svg);\n\t\t\t}\n\t\t}, 250);\n\t}\n\n\tanimate_graphs() {\n\t\tthis.y.map((d, i) => {\n\t\t\t// Pre-prep, equilize no of positions between old and new\n\t\t\tlet [old_x, old_y, new_x, new_y] = this.calc_old_and_new_postions(d, i);\n\t\t\tif(this.no_of_extra_pts >= 0) {\n\t\t\t\tthis.make_path && this.make_path(d, i, old_x, old_y, this.colors[i]);\n\t\t\t\tthis.make_new_units_for_dataset(old_x, old_y, this.colors[i], i, this.y.length);\n\t\t\t}\n\t\t\td.path && this.animate_path(d, i, old_x, old_y, new_x, new_y);\n\t\t\tthis.animate_units(d, i, old_x, old_y, new_x, new_y);\n\t\t});\n\n\t\t// TODO: replace with real units\n\t\tsetTimeout(() => {\n\t\t\tthis.y.map((d, i) => {\n\t\t\t\tthis.make_path && this.make_path(d, i, this.x_axis_positions, d.y_tops, this.colors[i]);\n\t\t\t\tthis.make_new_units(d, i);\n\t\t\t});\n\t\t}, 400);\n\t}\n\n\tanimate_path(d, i, old_x, old_y, new_x, new_y) {\n\t\tconst newPointsList = new_y.map((y, i) => (new_x[i] + ',' + y));\n\t\tconst newPathStr = newPointsList.join(\"L\");\n\t\tthis.elements_to_animate = this.elements_to_animate\n\t\t\t.concat(this.animator['path'](d, newPathStr));\n\t}\n\n\tanimate_units(d, index, old_x, old_y, new_x, new_y) {\n\t\tlet type = this.unit_args.type;\n\n\t\td.svg_units.map((unit, i) => {\n\t\t\tif(new_x[i] === undefined || new_y[i] === undefined) return;\n\t\t\tthis.elements_to_animate.push(this.animator[type](\n\t\t\t\t{unit:unit, array:d.svg_units, index: i}, // unit, with info to replace where it came from in the data\n\t\t\t\tnew_x[i],\n\t\t\t\tnew_y[i],\n\t\t\t\tindex,\n\t\t\t\tthis.y.length\n\t\t\t));\n\t\t});\n\t}\n\n\tcalc_old_and_new_postions(d, i) {\n\t\tlet old_x = this.x_old_axis_positions.slice();\n\t\tlet new_x = this.x_axis_positions.slice();\n\n\t\tlet old_y = this.old_y_axis_tops[i].slice();\n\t\tlet new_y = d.y_tops.slice();\n\n\t\tconst last_old_x_pos = old_x[old_x.length - 1];\n\t\tconst last_old_y_pos = old_y[old_y.length - 1];\n\n\t\tconst last_new_x_pos = new_x[new_x.length - 1];\n\t\tconst last_new_y_pos = new_y[new_y.length - 1];\n\n\t\tif(this.no_of_extra_pts >= 0) {\n\t\t\t// First substitute current path with a squiggled one\n\t\t\t// (that looks the same but has more points at end),\n\t\t\t// then animate to stretch it later to new points\n\t\t\t// (new points already have more points)\n\n\t\t\t// Hence, the extra end points will correspond to current(old) positions\n\t\t\tlet filler_x = new Array(Math.abs(this.no_of_extra_pts)).fill(last_old_x_pos);\n\t\t\tlet filler_y = new Array(Math.abs(this.no_of_extra_pts)).fill(last_old_y_pos);\n\n\t\t\told_x = old_x.concat(filler_x);\n\t\t\told_y = old_y.concat(filler_y);\n\n\t\t} else {\n\t\t\t// Just modify the new points to have extra points\n\t\t\t// with the same position at end\n\t\t\tlet filler_x = new Array(Math.abs(this.no_of_extra_pts)).fill(last_new_x_pos);\n\t\t\tlet filler_y = new Array(Math.abs(this.no_of_extra_pts)).fill(last_new_y_pos);\n\n\t\t\tnew_x = new_x.concat(filler_x);\n\t\t\tnew_y = new_y.concat(filler_y);\n\t\t}\n\n\t\treturn [old_x, old_y, new_x, new_y];\n\t}\n\n\tmake_anim_x_axis(height, text_start_at, axis_line_class) {\n\t\t// Animate X AXIS to account for more or less axis lines\n\n\t\tconst old_pos = this.x_old_axis_positions;\n\t\tconst new_pos = this.x_axis_positions;\n\n\t\tconst old_vals = this.old_x_values;\n\t\tconst new_vals = this.x;\n\n\t\tconst last_line_pos = old_pos[old_pos.length - 1];\n\n\t\tlet add_and_animate_line = (value, old_pos, new_pos) => {\n\t\t\tif(typeof new_pos === 'string') {\n\t\t\t\tnew_pos = parseInt(new_pos.substring(0, new_pos.length-1));\n\t\t\t}\n\t\t\tconst x_line = makeXLine(\n\t\t\t\theight,\n\t\t\t\ttext_start_at,\n\t\t\t\tvalue, // new value\n\t\t\t\t'x-value-text',\n\t\t\t\taxis_line_class,\n\t\t\t\told_pos // old position\n\t\t\t);\n\t\t\tthis.x_axis_group.appendChild(x_line);\n\n\t\t\tthis.elements_to_animate && this.elements_to_animate.push([\n\t\t\t\t{unit: x_line, array: [0], index: 0},\n\t\t\t\t{transform: `${ new_pos }, 0`},\n\t\t\t\t350,\n\t\t\t\t\"easein\",\n\t\t\t\t\"translate\",\n\t\t\t\t{transform: `${ old_pos }, 0`}\n\t\t\t]);\n\t\t};\n\n\t\tthis.x_axis_group.textContent = '';\n\n\t\tthis.make_new_axis_anim_lines(\n\t\t\told_pos,\n\t\t\tnew_pos,\n\t\t\told_vals,\n\t\t\tnew_vals,\n\t\t\tlast_line_pos,\n\t\t\tadd_and_animate_line\n\t\t);\n\t}\n\n\tmake_anim_y_axis() {\n\t\t// Animate Y AXIS to account for more or less axis lines\n\n\t\tconst old_pos = this.y_old_axis_values.map(value =>\n\t\t\tthis.zero_line - value * this.multiplier);\n\t\tconst new_pos = this.y_axis_values.map(value =>\n\t\t\tthis.zero_line - value * this.multiplier);\n\n\t\tconst old_vals = this.y_old_axis_values;\n\t\tconst new_vals = this.y_axis_values;\n\n\t\tconst last_line_pos = old_pos[old_pos.length - 1];\n\n\t\tthis.y_axis_group.textContent = '';\n\n\t\tthis.make_new_axis_anim_lines(\n\t\t\told_pos,\n\t\t\tnew_pos,\n\t\t\told_vals,\n\t\t\tnew_vals,\n\t\t\tlast_line_pos,\n\t\t\tthis.add_and_animate_y_line.bind(this),\n\t\t\tthis.y_axis_group\n\t\t);\n\t}\n\n\tmake_anim_y_specifics() {\n\t\tthis.specific_y_group.textContent = '';\n\t\tthis.specific_values.map((d) => {\n\t\t\tthis.add_and_animate_y_line(\n\t\t\t\td.title,\n\t\t\t\tthis.old_zero_line - d.value * this.old_multiplier,\n\t\t\t\tthis.zero_line - d.value * this.multiplier,\n\t\t\t\t0,\n\t\t\t\tthis.specific_y_group,\n\t\t\t\td.line_type,\n\t\t\t\ttrue\n\t\t\t);\n\t\t});\n\t}\n\n\tmake_new_axis_anim_lines(old_pos, new_pos, old_vals, new_vals, last_line_pos, add_and_animate_line, group) {\n\t\tlet superimposed_positions, superimposed_values;\n\t\tlet no_of_extras = new_vals.length - old_vals.length;\n\t\tif(no_of_extras > 0) {\n\t\t\t// More axis are needed\n\t\t\t// First make only the superimposed (same position) ones\n\t\t\t// Add in the extras at the end later\n\t\t\tsuperimposed_positions = new_pos.slice(0, old_pos.length);\n\t\t\tsuperimposed_values = new_vals.slice(0, old_vals.length);\n\t\t} else {\n\t\t\t// Axis have to be reduced\n\t\t\t// Fake it by moving all current extra axis to the last position\n\t\t\t// You'll need filler positions and values in the new arrays\n\t\t\tconst filler_vals = new Array(Math.abs(no_of_extras)).fill(\"\");\n\t\t\tsuperimposed_values = new_vals.concat(filler_vals);\n\n\t\t\tconst filler_pos = new Array(Math.abs(no_of_extras)).fill(last_line_pos + \"F\");\n\t\t\tsuperimposed_positions = new_pos.concat(filler_pos);\n\t\t}\n\n\t\tsuperimposed_values.map((value, i) => {\n\t\t\tadd_and_animate_line(value, old_pos[i], superimposed_positions[i], i, group);\n\t\t});\n\n\t\tif(no_of_extras > 0) {\n\t\t\t// Add in extra axis in the end\n\t\t\t// and then animate to new positions\n\t\t\tconst extra_values = new_vals.slice(old_vals.length);\n\t\t\tconst extra_positions = new_pos.slice(old_pos.length);\n\n\t\t\textra_values.map((value, i) => {\n\t\t\t\tadd_and_animate_line(value, last_line_pos, extra_positions[i], i, group);\n\t\t\t});\n\t\t}\n\t}\n\n\tadd_and_animate_y_line(value, old_pos, new_pos, i, group, type, specific=false) {\n\t\tlet filler = false;\n\t\tif(typeof new_pos === 'string') {\n\t\t\tnew_pos = parseInt(new_pos.substring(0, new_pos.length-1));\n\t\t\tfiller = true;\n\t\t}\n\t\tlet new_props = {transform: `0, ${ new_pos }`};\n\t\tlet old_props = {transform: `0, ${ old_pos }`};\n\n\t\tif(filler) {\n\t\t\tnew_props['stroke-opacity'] = 0;\n\t\t\t// old_props['stroke-opacity'] = 1;\n\t\t}\n\n\t\tlet [width, text_end_at, axis_line_class, start_at] = this.get_y_axis_line_props(specific);\n\t\tlet axis_label_class = !specific ? 'y-value-text' : 'specific-value';\n\t\tvalue = !specific ? value : (value+\"\").toUpperCase();\n\t\tconst y_line = makeYLine(\n\t\t\tstart_at,\n\t\t\twidth,\n\t\t\ttext_end_at,\n\t\t\tvalue,\n\t\t\taxis_label_class,\n\t\t\taxis_line_class,\n\t\t\told_pos,  // old position\n\t\t\t(value === 0 && i !== 0), // Non-first Zero line\n\t\t\ttype\n\t\t);\n\n\t\tgroup.appendChild(y_line);\n\n\t\tthis.elements_to_animate && this.elements_to_animate.push([\n\t\t\t{unit: y_line, array: [0], index: 0},\n\t\t\tnew_props,\n\t\t\t350,\n\t\t\t\"easein\",\n\t\t\t\"translate\",\n\t\t\told_props\n\t\t]);\n\t}\n\n\tset_avg_unit_width_and_x_offset() {\n\t\t// Set the ... you get it\n\t\tthis.avg_unit_width = this.width/(this.x.length - 1);\n\t\tthis.x_offset = 0;\n\t}\n\n\tget_all_y_values() {\n\t\tlet all_values = [];\n\n\t\t// Add in all the y values in the datasets\n\t\tthis.y.map(d => {\n\t\t\tall_values = all_values.concat(d.values);\n\t\t});\n\n\t\t// Add in all the specific values\n\t\treturn all_values.concat(this.specific_values.map(d => d.value));\n\t}\n\n\tcalc_y_dependencies() {\n\t\tthis.y_min_tops = new Array(this.x_axis_positions.length).fill(9999);\n\t\tthis.y.map(d => {\n\t\t\td.y_tops = d.values.map( val => floatTwo(this.zero_line - val * this.multiplier));\n\t\t\td.y_tops.map( (y_top, i) => {\n\t\t\t\tif(y_top < this.y_min_tops[i]) {\n\t\t\t\t\tthis.y_min_tops[i] = y_top;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t// this.chart_wrapper.removeChild(this.tip.container);\n\t\t// this.make_tooltip();\n\t}\n}\n","import AxisChart from './AxisChart';\n\nexport default class BarChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.type = 'bar';\n\t\tthis.x_axis_mode = args.x_axis_mode || 'tick';\n\t\tthis.y_axis_mode = args.y_axis_mode || 'span';\n\t\tthis.setup();\n\t}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.x_offset = this.avg_unit_width;\n\t\tthis.unit_args = {\n\t\t\ttype: 'bar',\n\t\t\targs: {\n\t\t\t\tspaceWidth: this.avg_unit_width/2,\n\t\t\t}\n\t\t};\n\t}\n\n\tmake_overlay() {\n\t\t// Just make one out of the first element\n\t\tlet index = this.x.length - 1;\n\t\tlet unit = this.y[0].svg_units[index];\n\t\tthis.update_current_data_point(index);\n\n\t\tif(this.overlay) {\n\t\t\tthis.overlay.parentNode.removeChild(this.overlay);\n\t\t}\n\t\tthis.overlay = unit.cloneNode();\n\t\tthis.overlay.style.fill = '#000000';\n\t\tthis.overlay.style.opacity = '0.4';\n\t\tthis.draw_area.appendChild(this.overlay);\n\t}\n\n\tbind_overlay() {\n\t\t// on event, update overlay\n\t\tthis.parent.addEventListener('data-select', (e) => {\n\t\t\tthis.update_overlay(e.svg_unit);\n\t\t});\n\t}\n\n\tbind_units(units_array) {\n\t\tunits_array.map(unit => {\n\t\t\tunit.addEventListener('click', () => {\n\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\tthis.update_current_data_point(index);\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate_overlay(unit) {\n\t\tlet attributes = [];\n\t\tObject.keys(unit.attributes).map(index => {\n\t\t\tattributes.push(unit.attributes[index]);\n\t\t});\n\n\t\tattributes.filter(attr => attr.specified).map(attr => {\n\t\t\tthis.overlay.setAttribute(attr.name, attr.nodeValue);\n\t\t});\n\n\t\tthis.overlay.style.fill = '#000000';\n\t\tthis.overlay.style.opacity = '0.4';\n\t}\n\n\ton_left_arrow() {\n\t\tthis.update_current_data_point(this.current_index - 1);\n\t}\n\n\ton_right_arrow() {\n\t\tthis.update_current_data_point(this.current_index + 1);\n\t}\n\n\tset_avg_unit_width_and_x_offset() {\n\t\tthis.avg_unit_width = this.width/(this.x.length + 1);\n\t\tthis.x_offset = this.avg_unit_width;\n\t}\n}\n","import AxisChart from './AxisChart';\nimport { makeSVGGroup, makePath, makeGradient } from '../utils/draw';\n\nexport default class LineChart extends AxisChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.x_axis_mode = args.x_axis_mode || 'span';\n\t\tthis.y_axis_mode = args.y_axis_mode || 'span';\n\n\t\tif(args.hasOwnProperty('show_dots')) {\n\t\t\tthis.show_dots = args.show_dots;\n\t\t} else {\n\t\t\tthis.show_dots = 1;\n\t\t}\n\t\tthis.region_fill = args.region_fill;\n\n\t\tif(Object.getPrototypeOf(this) !== LineChart.prototype) {\n\t\t\treturn;\n\t\t}\n\t\tthis.dot_radius = args.dot_radius || 4;\n\t\tthis.heatline = args.heatline;\n\t\tthis.type = 'line';\n\n\t\tthis.setup();\n\t}\n\n\tsetup_graph_components() {\n\t\tthis.setup_path_groups();\n\t\tsuper.setup_graph_components();\n\t}\n\n\tsetup_path_groups() {\n\t\tthis.paths_groups = [];\n\t\tthis.y.map((d, i) => {\n\t\t\tthis.paths_groups[i] = makeSVGGroup(\n\t\t\t\tthis.draw_area,\n\t\t\t\t'path-group path-group-' + i\n\t\t\t);\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.unit_args = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.dot_radius }\n\t\t};\n\t}\n\n\tmake_new_units_for_dataset(x_values, y_values, color, dataset_index,\n\t\tno_of_datasets, units_group, units_array, unit) {\n\t\tif(this.show_dots) {\n\t\t\tsuper.make_new_units_for_dataset(x_values, y_values, color, dataset_index,\n\t\t\t\tno_of_datasets, units_group, units_array, unit);\n\t\t}\n\t}\n\n\tmake_paths() {\n\t\tthis.y.map((d, i) => {\n\t\t\tthis.make_path(d, i, this.x_axis_positions, d.y_tops, d.color || this.colors[i]);\n\t\t});\n\t}\n\n\tmake_path(d, i, x_positions, y_positions, color) {\n\t\tlet points_list = y_positions.map((y, i) => (x_positions[i] + ',' + y));\n\t\tlet points_str = points_list.join(\"L\");\n\n\t\tthis.paths_groups[i].textContent = '';\n\n\t\td.path = makePath(\"M\"+points_str, 'line-graph-path', color);\n\t\tthis.paths_groups[i].appendChild(d.path);\n\n\t\tif(this.heatline) {\n\t\t\tlet gradient_id = makeGradient(this.svg_defs, color);\n\t\t\td.path.style.stroke = `url(#${gradient_id})`;\n\t\t}\n\n\t\tif(this.region_fill) {\n\t\t\tthis.fill_region_for_dataset(d, i, color, points_str);\n\t\t}\n\t}\n\n\tfill_region_for_dataset(d, i, color, points_str) {\n\t\tlet gradient_id = makeGradient(this.svg_defs, color, true);\n\t\tlet pathStr = \"M\" + `0,${this.zero_line}L` + points_str + `L${this.width},${this.zero_line}`;\n\n\t\td.regionPath = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id})`);\n\t\tthis.paths_groups[i].appendChild(d.regionPath);\n\t}\n}\n","import LineChart from './LineChart';\n\nexport default class ScatterChart extends LineChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\n\t\tthis.type = 'scatter';\n\n\t\tif(!args.dot_radius) {\n\t\t\tthis.dot_radius = 8;\n\t\t} else {\n\t\t\tthis.dot_radius = args.dot_radius;\n\t\t}\n\n\t\tthis.setup();\n\t}\n\n\tsetup_graph_components() {\n\t\tthis.setup_path_groups();\n\t\tsuper.setup_graph_components();\n\t}\n\n\tsetup_path_groups() {}\n\n\tsetup_values() {\n\t\tsuper.setup_values();\n\t\tthis.unit_args = {\n\t\t\ttype: 'dot',\n\t\t\targs: { radius: this.dot_radius }\n\t\t};\n\t}\n\n\tmake_paths() {}\n\tmake_path() {}\n}\n","import BaseChart from './BaseChart';\nimport { $, offset } from '../utils/dom';\n\nexport default class PercentageChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'percentage';\n\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\n\t\tthis.setup();\n\t}\n\n\tmake_chart_area() {\n\t\tthis.chart_wrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.chart_wrapper.style.marginTop = '45px';\n\n\t\tthis.stats_wrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.stats_wrapper.style.marginBottom = '30px';\n\t\tthis.stats_wrapper.style.paddingTop = '0px';\n\t}\n\n\tmake_draw_area() {\n\t\tthis.chart_div = $.create('div', {\n\t\t\tclassName: 'div',\n\t\t\tinside: this.chart_wrapper\n\t\t});\n\n\t\tthis.chart = $.create('div', {\n\t\t\tclassName: 'progress-chart',\n\t\t\tinside: this.chart_div\n\t\t});\n\t}\n\n\tsetup_components() {\n\t\tthis.percentage_bar = $.create('div', {\n\t\t\tclassName: 'progress',\n\t\t\tinside: this.chart\n\t\t});\n\t}\n\n\tsetup_values() {\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\tmake_graph_components() {\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tthis.slices = [];\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tlet slice = $.create('div', {\n\t\t\t\tclassName: `progress-bar`,\n\t\t\t\tinside: this.percentage_bar,\n\t\t\t\tstyles: {\n\t\t\t\t\tbackground: this.colors[i],\n\t\t\t\t\twidth: total*100/this.grand_total + \"%\"\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.slices.push(slice);\n\t\t});\n\t}\n\n\tbind_tooltip() {\n\t\tthis.slices.map((slice, i) => {\n\t\t\tslice.addEventListener('mouseenter', () => {\n\t\t\t\tlet g_off = offset(this.chart_wrapper), p_off = offset(slice);\n\n\t\t\t\tlet x = p_off.left - g_off.left + slice.offsetWidth/2;\n\t\t\t\tlet y = p_off.top - g_off.top - 6;\n\t\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\n\t\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tshow_summary() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.stats_wrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background: ${this.colors[i]}\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $, offset } from '../utils/dom';\nimport { makePath } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { runSVGAnimation, transform } from '../utils/animation';\nconst ANGLE_RATIO = Math.PI / 180;\nconst FULL_ANGLE = 360;\n\nexport default class PieChart extends BaseChart {\n\tconstructor(args) {\n\t\tsuper(args);\n\t\tthis.type = 'pie';\n\t\tthis.elements_to_animate = null;\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.max_slices = 10;\n\t\tthis.max_legend_points = 6;\n\t\tthis.isAnimate = false;\n\t\tthis.startAngle = args.startAngle || 0;\n\t\tthis.clockWise = args.clockWise || false;\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\t\tthis.setup();\n\t}\n\tsetup_values() {\n\t\tthis.centerX = this.width / 2;\n\t\tthis.centerY = this.height / 2;\n\t\tthis.radius = (this.height > this.width ? this.centerX : this.centerY);\n\t\tthis.slice_totals = [];\n\t\tlet all_totals = this.data.labels.map((d, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, d];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = all_totals;\n\n\t\tif(all_totals.length > this.max_slices) {\n\t\t\tall_totals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = all_totals.slice(0, this.max_slices-1);\n\t\t\tlet others = all_totals.slice(this.max_slices-1);\n\n\t\t\tlet sum_of_others = 0;\n\t\t\tothers.map(d => {sum_of_others += d[0];});\n\n\t\t\ttotals.push([sum_of_others, 'Rest']);\n\n\t\t\tthis.colors[this.max_slices-1] = 'grey';\n\t\t}\n\n\t\tthis.labels = [];\n\t\ttotals.map(d => {\n\t\t\tthis.slice_totals.push(d[0]);\n\t\t\tthis.labels.push(d[1]);\n\t\t});\n\n\t\tthis.legend_totals = this.slice_totals.slice(0, this.max_legend_points);\n\t}\n\n\tstatic getPositionByAngle(angle,radius){\n\t\treturn {\n\t\t\tx:Math.sin(angle * ANGLE_RATIO) * radius,\n\t\t\ty:Math.cos(angle * ANGLE_RATIO) * radius,\n\t\t};\n\t}\n\tmakeArcPath(startPosition,endPosition){\n\t\tconst{centerX,centerY,radius,clockWise} = this;\n\t\treturn `M${centerX} ${centerY} L${centerX+startPosition.x} ${centerY+startPosition.y} A ${radius} ${radius} 0 0 ${clockWise ? 1 : 0} ${centerX+endPosition.x} ${centerY+endPosition.y} z`;\n\t}\n\tmake_graph_components(init){\n\t\tconst{radius,clockWise} = this;\n\t\tthis.grand_total = this.slice_totals.reduce((a, b) => a + b, 0);\n\t\tconst prevSlicesProperties = this.slicesProperties || [];\n\t\tthis.slices = [];\n\t\tthis.elements_to_animate = [];\n\t\tthis.slicesProperties = [];\n\t\tlet curAngle = 180 - this.startAngle;\n\t\tthis.slice_totals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / this.grand_total) * FULL_ANGLE;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = PieChart.getPositionByAngle(startAngle,radius);\n\t\t\tconst endPosition = PieChart.getPositionByAngle(endAngle,radius);\n\t\t\tconst prevProperty = init && prevSlicesProperties[i];\n\t\t\tlet curStart,curEnd;\n\t\t\tif(init){\n\t\t\t\tcurStart = prevProperty?prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty? prevProperty.endPosition : startPosition;\n\t\t\t}else{\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath = this.makeArcPath(curStart,curEnd);\n\t\t\tlet slice = makePath(curPath, 'pie-path', 'none', this.colors[i]);\n\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\tthis.draw_area.appendChild(slice);\n\n\t\t\tthis.slices.push(slice);\n\t\t\tthis.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: this.grand_total,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle:diffAngle\n\t\t\t});\n\t\t\tif(init){\n\t\t\t\tthis.elements_to_animate.push([{unit: slice, array: this.slices, index: this.slices.length - 1},\n\t\t\t\t\t{d:this.makeArcPath(startPosition,endPosition)},\n\t\t\t\t\t650, \"easein\",null,{\n\t\t\t\t\t\td:curPath\n\t\t\t\t\t}]);\n\t\t\t}\n\n\t\t});\n\t\tif(init){\n\t\t\tthis.run_animation();\n\t\t}\n\t}\n\trun_animation() {\n\t\t// if(this.isAnimate) return ;\n\t\t// this.isAnimate = true;\n\t\tif(!this.elements_to_animate || this.elements_to_animate.length === 0) return;\n\t\tlet anim_svg = runSVGAnimation(this.svg, this.elements_to_animate);\n\n\t\tif(this.svg.parentNode == this.chart_wrapper) {\n\t\t\tthis.chart_wrapper.removeChild(this.svg);\n\t\t\tthis.chart_wrapper.appendChild(anim_svg);\n\n\t\t}\n\n\t\t// Replace the new svg (data has long been replaced)\n\t\tsetTimeout(() => {\n\t\t\t// this.isAnimate = false;\n\t\t\tif(anim_svg.parentNode == this.chart_wrapper) {\n\t\t\t\tthis.chart_wrapper.removeChild(anim_svg);\n\t\t\t\tthis.chart_wrapper.appendChild(this.svg);\n\t\t\t}\n\t\t}, 650);\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = PieChart.getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag){\n\t\t\ttransform(path,this.calTranslateByAngle(this.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color,50);\n\t\t\tlet g_off = offset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length>0\n\t\t\t\t? this.formatted_labels[i] : this.labels[i]) + ': ';\n\t\t\tlet percent = (this.slice_totals[i]*100/this.grand_total).toFixed(1);\n\t\t\tthis.tip.set_values(x, y, title, percent + \"%\");\n\t\t\tthis.tip.show_tip();\n\t\t}else{\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hide_tip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tfor(let i = 0; i < this.slices.length; i++){\n\t\t\tif(target === this.slices[i]){\n\t\t\t\tthis.hoverSlice(prevAcitve,prevIndex,false);\n\t\t\t\tthis.curActiveSlice = target;\n\t\t\t\tthis.curActiveSliceIndex = i;\n\t\t\t\tthis.hoverSlice(target,i,true,e);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n\tbind_tooltip() {\n\t\tthis.draw_area.addEventListener('mousemove',this.mouseMove);\n\t\tthis.draw_area.addEventListener('mouseleave',this.mouseLeave);\n\t}\n\n\tshow_summary() {\n\t\tlet x_values = this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t? this.formatted_labels : this.labels;\n\t\tthis.legend_totals.map((d, i) => {\n\t\t\tconst color = this.colors[i];\n\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.stats_wrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background-color:${color};\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${x_values[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { makeSVGGroup, makeHeatSquare, makeText } from '../utils/draw';\nimport { addDays, getDdMmYyyy, getWeeksBetween } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { isValidColor } from '../utils/colors';\n\nexport default class Heatmap extends BaseChart {\n\tconstructor({\n\t\tstart = '',\n\t\tdomain = '',\n\t\tsubdomain = '',\n\t\tdata = {},\n\t\tdiscrete_domains = 0,\n\t\tcount_label = '',\n\t\tlegend_colors = []\n\t}) {\n\t\tsuper(arguments[0]);\n\n\t\tthis.type = 'heatmap';\n\n\t\tthis.domain = domain;\n\t\tthis.subdomain = subdomain;\n\t\tthis.data = data;\n\t\tthis.discrete_domains = discrete_domains;\n\t\tthis.count_label = count_label;\n\n\t\tlet today = new Date();\n\t\tthis.start = start || addDays(today, 365);\n\n\t\tlegend_colors = legend_colors.slice(0, 5);\n\t\tthis.legend_colors = this.validate_colors(legend_colors)\n\t\t\t? legend_colors\n\t\t\t: ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\t\t// Fixed 5-color theme,\n\t\t// More colors are difficult to parse visually\n\t\tthis.distribution_size = 5;\n\n\t\tthis.translate_x = 0;\n\t\tthis.setup();\n\t}\n\n\tvalidate_colors(colors) {\n\t\tif(colors.length < 5) return 0;\n\n\t\tlet valid = 1;\n\t\tcolors.forEach(function(string) {\n\t\t\tif(!isValidColor(string)) {\n\t\t\t\tvalid = 0;\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t}\n\t\t}, this);\n\n\t\treturn valid;\n\t}\n\n\tsetup_base_values() {\n\t\tthis.today = new Date();\n\n\t\tif(!this.start) {\n\t\t\tthis.start = new Date();\n\t\t\tthis.start.setFullYear( this.start.getFullYear() - 1 );\n\t\t}\n\t\tthis.first_week_start = new Date(this.start.toDateString());\n\t\tthis.last_week_start = new Date(this.today.toDateString());\n\t\tif(this.first_week_start.getDay() !== 7) {\n\t\t\taddDays(this.first_week_start, (-1) * this.first_week_start.getDay());\n\t\t}\n\t\tif(this.last_week_start.getDay() !== 7) {\n\t\t\taddDays(this.last_week_start, (-1) * this.last_week_start.getDay());\n\t\t}\n\t\tthis.no_of_cols = getWeeksBetween(this.first_week_start + '', this.last_week_start + '') + 1;\n\t}\n\n\tset_width() {\n\t\tthis.base_width = (this.no_of_cols + 3) * 12 ;\n\n\t\tif(this.discrete_domains) {\n\t\t\tthis.base_width += (12 * 12);\n\t\t}\n\t}\n\n\tsetup_components() {\n\t\tthis.domain_label_group = this.makeDrawAreaComponent(\n\t\t\t'domain-label-group chart-label');\n\n\t\tthis.data_groups = this.makeDrawAreaComponent(\n\t\t\t'data-groups',\n\t\t\t`translate(0, 20)`\n\t\t);\n\t}\n\n\tsetup_values() {\n\t\tthis.domain_label_group.textContent = '';\n\t\tthis.data_groups.textContent = '';\n\n\t\tlet data_values = Object.keys(this.data).map(key => this.data[key]);\n\t\tthis.distribution = calcDistribution(data_values, this.distribution_size);\n\n\t\tthis.month_names = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t\t];\n\n\t\tthis.render_all_weeks_and_store_x_values(this.no_of_cols);\n\t}\n\n\trender_all_weeks_and_store_x_values(no_of_weeks) {\n\t\tlet current_week_sunday = new Date(this.first_week_start);\n\t\tthis.week_col = 0;\n\t\tthis.current_month = current_week_sunday.getMonth();\n\n\t\tthis.months = [this.current_month + ''];\n\t\tthis.month_weeks = {}, this.month_start_points = [];\n\t\tthis.month_weeks[this.current_month] = 0;\n\t\tthis.month_start_points.push(13);\n\n\t\tfor(var i = 0; i < no_of_weeks; i++) {\n\t\t\tlet data_group, month_change = 0;\n\t\t\tlet day = new Date(current_week_sunday);\n\n\t\t\t[data_group, month_change] = this.get_week_squares_group(day, this.week_col);\n\t\t\tthis.data_groups.appendChild(data_group);\n\t\t\tthis.week_col += 1 + parseInt(this.discrete_domains && month_change);\n\t\t\tthis.month_weeks[this.current_month]++;\n\t\t\tif(month_change) {\n\t\t\t\tthis.current_month = (this.current_month + 1) % 12;\n\t\t\t\tthis.months.push(this.current_month + '');\n\t\t\t\tthis.month_weeks[this.current_month] = 1;\n\t\t\t}\n\t\t\taddDays(current_week_sunday, 7);\n\t\t}\n\t\tthis.render_month_labels();\n\t}\n\n\tget_week_squares_group(current_date, index) {\n\t\tconst no_of_weekdays = 7;\n\t\tconst square_side = 10;\n\t\tconst cell_padding = 2;\n\t\tconst step = 1;\n\t\tconst today_time = this.today.getTime();\n\n\t\tlet month_change = 0;\n\t\tlet week_col_change = 0;\n\n\t\tlet data_group = makeSVGGroup(this.data_groups, 'data-group');\n\n\t\tfor(var y = 0, i = 0; i < no_of_weekdays; i += step, y += (square_side + cell_padding)) {\n\t\t\tlet data_value = 0;\n\t\t\tlet color_index = 0;\n\n\t\t\tlet current_timestamp = current_date.getTime()/1000;\n\t\t\tlet timestamp = Math.floor(current_timestamp - (current_timestamp % 86400)).toFixed(1);\n\n\t\t\tif(this.data[timestamp]) {\n\t\t\t\tdata_value = this.data[timestamp];\n\t\t\t}\n\n\t\t\tif(this.data[Math.round(timestamp)]) {\n\t\t\t\tdata_value = this.data[Math.round(timestamp)];\n\t\t\t}\n\n\t\t\tif(data_value) {\n\t\t\t\tcolor_index = getMaxCheckpoint(data_value, this.distribution);\n\t\t\t}\n\n\t\t\tlet x = 13 + (index + week_col_change) * 12;\n\n\t\t\tlet dataAttr = {\n\t\t\t\t'data-date': getDdMmYyyy(current_date),\n\t\t\t\t'data-value': data_value,\n\t\t\t\t'data-day': current_date.getDay()\n\t\t\t};\n\t\t\tlet heatSquare = makeHeatSquare('day', x, y, square_side,\n\t\t\t\tthis.legend_colors[color_index], dataAttr);\n\n\t\t\tdata_group.appendChild(heatSquare);\n\n\t\t\tlet next_date = new Date(current_date);\n\t\t\taddDays(next_date, 1);\n\t\t\tif(next_date.getTime() > today_time) break;\n\n\n\t\t\tif(next_date.getMonth() - current_date.getMonth()) {\n\t\t\t\tmonth_change = 1;\n\t\t\t\tif(this.discrete_domains) {\n\t\t\t\t\tweek_col_change = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.month_start_points.push(13 + (index + week_col_change) * 12);\n\t\t\t}\n\t\t\tcurrent_date = next_date;\n\t\t}\n\n\t\treturn [data_group, month_change];\n\t}\n\n\trender_month_labels() {\n\t\t// this.first_month_label = 1;\n\t\t// if (this.first_week_start.getDate() > 8) {\n\t\t// \tthis.first_month_label = 0;\n\t\t// }\n\t\t// this.last_month_label = 1;\n\n\t\t// let first_month = this.months.shift();\n\t\t// let first_month_start = this.month_start_points.shift();\n\t\t// render first month if\n\n\t\t// let last_month = this.months.pop();\n\t\t// let last_month_start = this.month_start_points.pop();\n\t\t// render last month if\n\n\t\tthis.months.shift();\n\t\tthis.month_start_points.shift();\n\t\tthis.months.pop();\n\t\tthis.month_start_points.pop();\n\n\t\tthis.month_start_points.map((start, i) => {\n\t\t\tlet month_name =  this.month_names[this.months[i]].substring(0, 3);\n\t\t\tlet text = makeText('y-value-text', start+12, 10, month_name);\n\t\t\tthis.domain_label_group.appendChild(text);\n\t\t});\n\t}\n\n\tmake_graph_components() {\n\t\tArray.prototype.slice.call(\n\t\t\tthis.container.querySelectorAll('.graph-stats-container, .sub-title, .title')\n\t\t).map(d => {\n\t\t\td.style.display = 'None';\n\t\t});\n\t\tthis.chart_wrapper.style.marginTop = '0px';\n\t\tthis.chart_wrapper.style.paddingTop = '0px';\n\t}\n\n\tbind_tooltip() {\n\t\tArray.prototype.slice.call(\n\t\t\tdocument.querySelectorAll(\".data-group .day\")\n\t\t).map(el => {\n\t\t\tel.addEventListener('mouseenter', (e) => {\n\t\t\t\tlet count = e.target.getAttribute('data-value');\n\t\t\t\tlet date_parts = e.target.getAttribute('data-date').split('-');\n\n\t\t\t\tlet month = this.month_names[parseInt(date_parts[1])-1].substring(0, 3);\n\n\t\t\t\tlet g_off = this.chart_wrapper.getBoundingClientRect(), p_off = e.target.getBoundingClientRect();\n\n\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\tlet x = p_off.left - g_off.left + (width+2)/2;\n\t\t\t\tlet y = p_off.top - g_off.top - (width+2)/2;\n\t\t\t\tlet value = count + ' ' + this.count_label;\n\t\t\t\tlet name = ' on ' + month + ' ' + date_parts[0] + ', ' + date_parts[2];\n\n\t\t\t\tthis.tip.set_values(x, y, name, value, [], 1);\n\t\t\t\tthis.tip.show_tip();\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tthis.data = data;\n\t\tthis.setup_values();\n\t\tthis.bind_tooltip();\n\t}\n}\n"],"names":["expr","con","document","querySelector","offset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","getBarHeightAndYAttr","yTop","zeroLine","totalHeight","height","y","$","createSVG","tag","o","createElementNS","i","val","appendChild","ref","parentNode","insertBefore","keys","map","style","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","color","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","makePath","pathStr","makeGradient","lighter","gradientDef","opacities","makeHeatSquare","x","size","fill","data","args","key","makeText","content","makeXLine","textStartAt","point","labelClass","axisLineClass","xPos","line","text","xLine","makeYLine","startAt","textEndAt","yPos","darker","yLine","stroke","animateSVG","props","dur","easingType","type","undefined","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","getAttribute","value","animAttr","EASING","transform","webkitTransform","msTransform","mozTransform","oTransform","runSVGAnimation","elements","newElements","animElements","obj","unit","push","replaceChild","array","index","object","animSvg","normalize","isNaN","mantissa","exponent","sig","isFinite","Math","abs","exp","floor","log10","pow","getRangeIntervals","max","min","upperBound","ceil","lowerBound","range","noOfParts","partSize","intervals","getIntervals","maxValue","minValue","normalMaxValue","normalMinValue","toFixed","calcIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","d","pseudoMaxValue","pseudoMinValue","reverse","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","filter","length","floatTwo","arraysEqual","arr1","arr2","areEqual","getStringWidth","string","charWidth","limitColor","r","lightenDarkenColor","amt","col","getColor","usePound","slice","num","parseInt","b","g","toString","isValidColor","test","treatAsUtc","dateStr","result","Date","setMinutes","getMinutes","getTimezoneOffset","getDdMmYyyy","date","dd","getDate","mm","getMonth","getFullYear","join","getWeeksBetween","startDateStr","endDateStr","getDaysBetween","addDays","numberOfDays","setDate","getChartByType","chartType","options","chartTypes","LineChart","create","createElement","bind","event","callback","split","forEach","addEventListener","unbind","removeEventListener","fire","target","properties","evt","createEvent","initEvent","j","dispatchEvent","UnitRenderer","avgUnitWidth","prototype","datasetIndex","noOfDatasets","totalWidth","this","spaceWidth","currentX","radius","Animator","barObj","start","dotObj","cx","cy","pathComponents","animPath","path","regionPath","regStartPt","regEndPt","animRegion","SvgTip","colors","title_name","title_value","list_values","title_value_first","setup","make_tooltip","calc_position","container","hide_tip","title","data_point_list","innerHTML","set","_this2","li","offsetWidth","offsetHeight","max_left","pointer","pointer_offset","refresh","PRESET_COLOR_MAP","DEFAULT_COLORS","ALL_CHART_TYPES","COMPATIBLE_CHARTS","COLOR_COMPATIBLE_CHARTS","BaseChart","subtitle","summary","is_navigable","has_legend","raw_chart_args","arguments","specific_values","current_index","setColors","set_margins","includes","error","use_color","Chart","list","labels","datasets","base_height","translate_x","translate_y","validate_and_prepare_data","bind_window_events","_this","init","setup_base_values","set_width","setup_container","setup_components","setup_values","setup_utils","make_graph_components","show_custom_summary","show_summary","setup_navigation","special_values_width","str_width","base_width","chart_wrapper","stats_wrapper","make_chart_area","make_draw_area","svg","svg_defs","draw_area","tip","bind_tooltip","stats","make_overlay","bind_overlay","e","_this3","keyCode","on_left_arrow","on_right_arrow","on_up_arrow","on_down_arrow","on_enter_key","data_point","data_key","label","get_data_point","AxisChart","is_series","format_tooltip_y","format_tooltip_x","zero_line","setup_x","setup_y","set_avg_unit_width_and_x_offset","x_axis_positions","x_old_axis_positions","x_offset","avg_unit_width","y_axis_values","y_old_axis_values","get_all_y_values","y_sums","concat","y_pts","value_range","multiplier","old_multiplier","interval","interval_height","zero_index","indexOf","old_zero_line","setup_marker_components","setup_aggregation_components","setup_graph_components","y_axis_group","makeDrawAreaComponent","x_axis_group","specific_y_group","sum_group","average_group","svg_units_groups","make_y_axis","make_x_axis","draw_graph","make_y_specifics","animate","start_at","text_start_at","axis_line_class","x_axis_mode","make_anim_x_axis","allowed_space","allowed_letters","textContent","space_taken","_this4","skips","make_anim_y_axis","make_anim_y_specifics","get_y_axis_line_props","text_end_at","_this5","y_axis_mode","hasOwnProperty","svg_units","make_path","_this6","y_tops","make_new_units","calc_y_dependencies","draw_new_graph_and_animate","Array","_this7","update_values","make_new_units_for_dataset","x_values","y_values","dataset_index","no_of_datasets","units_group","units_array","unit_args","unit_renderer","data_unit","bind_units","_this9","toUpperCase","line_type","_this10","relX","pageX","pageY","map_tooltip_x_position_and_show","y_min_tops","titles","_this11","y_format","x_val","set_values","show_tip","updating","sum_units","_this12","old_specific_values","sum","average","indices_to_remove","auto","splice","new_y","new_x","elements_to_animate","old_x_values","old_y_axis_tops","old_y_values","no_of_extra_pts","animator","_this15","animate_graphs","run_animation","y_point","x_point","data_set","anim_svg","removeChild","_this16","_this17","calc_old_and_new_postions","old_x","old_y","animate_path","animate_units","newPathStr","_this18","last_old_x_pos","last_old_y_pos","last_new_x_pos","last_new_y_pos","filler_x","filler_y","old_pos","new_pos","old_vals","new_vals","last_line_pos","add_and_animate_line","substring","x_line","_this19","make_new_axis_anim_lines","_this20","add_and_animate_y_line","_this21","group","superimposed_positions","superimposed_values","no_of_extras","filler_vals","filler_pos","extra_values","extra_positions","specific","filler","new_props","old_props","axis_label_class","y_line","all_values","_this22","y_top","BarChart","update_current_data_point","overlay","update_overlay","svg_unit","attributes","attr","specified","name","nodeValue","show_dots","region_fill","Object","getPrototypeOf","dot_radius","heatline","setup_path_groups","paths_groups","x_positions","y_positions","points_str","gradient_id","fill_region_for_dataset","ScatterChart","PercentageChart","max_slices","max_legend_points","marginTop","marginBottom","paddingTop","chart_div","chart","percentage_bar","slice_totals","all_totals","total","totals","sort","a","sum_of_others","legend_totals","grand_total","reduce","slices","g_off","p_off","formatted_labels","percent","ANGLE_RATIO","PI","PieChart","hoverRadio","isAnimate","startAngle","clockWise","mouseMove","mouseLeave","centerX","centerY","startPosition","endPosition","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","getPositionByAngle","prevProperty","curStart","curEnd","curPath","makeArcPath","transition","property","position","angle","flag","calTranslateByAngle","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","sin","cos","domain","subdomain","discrete_domains","count_label","legend_colors","today","validate_colors","distribution_size","valid","warn","setFullYear","first_week_start","toDateString","last_week_start","getDay","no_of_cols","domain_label_group","data_groups","data_values","month_names","render_all_weeks_and_store_x_values","no_of_weeks","current_week_sunday","week_col","current_month","months","month_weeks","month_start_points","data_group","month_change","day","get_week_squares_group","render_month_labels","current_date","today_time","getTime","week_col_change","square_side","data_value","color_index","current_timestamp","timestamp","round","dataAttr","heatSquare","next_date","shift","pop","call","querySelectorAll","display","count","date_parts","month","Heatmap"],"mappings":"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"}
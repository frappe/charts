{"version":3,"file":"frappe-charts.min.iife.js","sources":["../src/js/utils/dom.js","../src/js/utils/helpers.js","../src/js/utils/draw-utils.js","../src/js/utils/draw.js","../src/js/utils/colors.js","../src/js/config.js","../src/js/utils/animate.js","../src/js/utils/animation.js","../src/js/objects/ChartComponents.js","../src/js/utils/date-utils.js","../src/js/utils/intervals.js","../src/js/utils/axis-chart-utils.js","../src/js/chart.js","../src/js/objects/SvgTip.js","../src/js/utils/constants.js","../src/js/charts/BaseChart.js","../src/js/charts/AggregationChart.js","../src/js/charts/PercentageChart.js","../src/js/charts/PieChart.js","../src/js/charts/Heatmap.js","../src/js/charts/AxisChart.js"],"sourcesContent":["export function $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function findNodeIndex(node)\n{\n\tvar i = 0;\n\twhile (node.previousSibling) {\n\t\tnode = node.previousSibling;\n\t\ti++;\n\t}\n\treturn i;\n}\n\n$.create = (tag, o) => {\n\tvar element = document.createElement(tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (i in element ) {\n\t\t\telement[i] = val;\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(i, val);\n\t\t}\n\t}\n\n\treturn element;\n};\n\nexport function getOffset(element) {\n\tlet rect = element.getBoundingClientRect();\n\treturn {\n\t\t// https://stackoverflow.com/a/7436602/6495043\n\t\t// rect.top varies with scroll, so we add whatever has been\n\t\t// scrolled to it to get absolute distance from actual page top\n\t\ttop: rect.top + (document.documentElement.scrollTop || document.body.scrollTop),\n\t\tleft: rect.left + (document.documentElement.scrollLeft || document.body.scrollLeft)\n\t};\n}\n\nexport function isElementInViewport(el) {\n\t// Although straightforward: https://stackoverflow.com/a/7557433/6495043\n\tvar rect = el.getBoundingClientRect();\n\n\treturn (\n\t\trect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n\t);\n}\n\nexport function getElementContentWidth(element) {\n\tvar styles = window.getComputedStyle(element);\n\tvar padding = parseFloat(styles.paddingLeft) +\n\t\tparseFloat(styles.paddingRight);\n\n\treturn element.clientWidth - padding;\n}\n\nexport function bind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function (event) {\n\t\t\t\telement.addEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function unbind(element, o){\n\tif (element) {\n\t\tfor (var event in o) {\n\t\t\tvar callback = o[event];\n\n\t\t\tevent.split(/\\s+/).forEach(function(event) {\n\t\t\t\telement.removeEventListener(event, callback);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function fire(target, type, properties) {\n\tvar evt = document.createEvent(\"HTMLEvents\");\n\n\tevt.initEvent(type, true, true );\n\n\tfor (var j in properties) {\n\t\tevt[j] = properties[j];\n\t}\n\n\treturn target.dispatchEvent(evt);\n}\n","import { ANGLE_RATIO } from './constants';\n\n/**\n * Returns the value of a number upto 2 decimal places.\n * @param {Number} d Any number\n */\nexport function floatTwo(d) {\n\treturn parseFloat(d.toFixed(2));\n}\n\n/**\n * Returns whether or not two given arrays are equal.\n * @param {Array} arr1 First array\n * @param {Array} arr2 Second array\n */\nexport function arraysEqual(arr1, arr2) {\n\tif(arr1.length !== arr2.length) return false;\n\tlet areEqual = true;\n\tarr1.map((d, i) => {\n\t\tif(arr2[i] !== d) areEqual = false;\n\t});\n\treturn areEqual;\n}\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} array An array containing the items.\n */\nexport function shuffle(array) {\n\t// Awesomeness: https://bost.ocks.org/mike/shuffle/\n\t// https://stackoverflow.com/a/2450976/6495043\n\t// https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array?noredirect=1&lq=1\n\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\n\treturn array;\n}\n\n/**\n * Fill an array with extra points\n * @param {Array} array Array\n * @param {Number} count number of filler elements\n * @param {Object} element element to fill with\n * @param {Boolean} start fill at start?\n */\nexport function fillArray(array, count, element, start=false) {\n\tif(!element) {\n\t\telement = start ? array[0] : array[array.length - 1];\n\t}\n\tlet fillerArray = new Array(Math.abs(count)).fill(element);\n\tarray = start ? fillerArray.concat(array) : array.concat(fillerArray);\n\treturn array;\n}\n\n/**\n * Returns pixel width of string.\n * @param {String} string\n * @param {Number} charWidth Width of single char in pixels\n */\nexport function getStringWidth(string, charWidth) {\n\treturn (string+\"\").length * charWidth;\n}\n\nexport function bindChange(obj, getFn, setFn) {\n\treturn new Proxy(obj, {\n\t\tset: function(target, prop, value) {\n\t\t\tsetFn();\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\tget: function(target, prop) {\n\t\t\tgetFn();\n\t\t\treturn Reflect.get(target, prop);\n\t\t}\n\t});\n}\n\nexport function getPositionByAngle(angle, radius) {\n\treturn {\n\t\tx:Math.sin(angle * ANGLE_RATIO) * radius,\n\t\ty:Math.cos(angle * ANGLE_RATIO) * radius,\n\t};\n}\n","import { fillArray } from './helpers';\n\nexport function getBarHeightAndYAttr(yTop, zeroLine) {\n\tlet height, y;\n\tif (yTop <= zeroLine) {\n\t\theight = zeroLine - yTop;\n\t\ty = yTop;\n\t} else {\n\t\theight = yTop - zeroLine;\n\t\ty = zeroLine;\n\t}\n\n\treturn [height, y];\n}\n\nexport function equilizeNoOfElements(array1, array2,\n\textraCount = array2.length - array1.length) {\n\n\t// Doesn't work if either has zero elements.\n\tif(extraCount > 0) {\n\t\tarray1 = fillArray(array1, extraCount);\n\t} else {\n\t\tarray2 = fillArray(array2, extraCount);\n\t}\n\treturn [array1, array2];\n}\n","import { getBarHeightAndYAttr } from './draw-utils';\nimport { getStringWidth } from './helpers';\nimport { DOT_OVERLAY_SIZE_INCR } from './constants';\n\nconst AXIS_TICK_LENGTH = 6;\nconst LABEL_MARGIN = 4;\nexport const FONT_SIZE = 10;\nconst BASE_LINE_COLOR = '#dadada';\n\nfunction $(expr, con) {\n\treturn typeof expr === \"string\"? (con || document).querySelector(expr) : expr || null;\n}\n\nexport function createSVG(tag, o) {\n\tvar element = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\n\n\tfor (var i in o) {\n\t\tvar val = o[i];\n\n\t\tif (i === \"inside\") {\n\t\t\t$(val).appendChild(element);\n\t\t}\n\t\telse if (i === \"around\") {\n\t\t\tvar ref = $(val);\n\t\t\tref.parentNode.insertBefore(element, ref);\n\t\t\telement.appendChild(ref);\n\n\t\t} else if (i === \"styles\") {\n\t\t\tif(typeof val === \"object\") {\n\t\t\t\tObject.keys(val).map(prop => {\n\t\t\t\t\telement.style[prop] = val[prop];\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif(i === \"className\") { i = \"class\"; }\n\t\t\tif(i === \"innerHTML\") {\n\t\t\t\telement['textContent'] = val;\n\t\t\t} else {\n\t\t\t\telement.setAttribute(i, val);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn element;\n}\n\nfunction renderVerticalGradient(svgDefElem, gradientId) {\n\treturn createSVG('linearGradient', {\n\t\tinside: svgDefElem,\n\t\tid: gradientId,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: 0,\n\t\ty2: 1\n\t});\n}\n\nfunction setGradientStop(gradElem, offset, color, opacity) {\n\treturn createSVG('stop', {\n\t\t'inside': gradElem,\n\t\t'style': `stop-color: ${color}`,\n\t\t'offset': offset,\n\t\t'stop-opacity': opacity\n\t});\n}\n\nexport function makeSVGContainer(parent, className, width, height) {\n\treturn createSVG('svg', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\twidth: width,\n\t\theight: height\n\t});\n}\n\nexport function makeSVGDefs(svgContainer) {\n\treturn createSVG('defs', {\n\t\tinside: svgContainer,\n\t});\n}\n\nexport function makeSVGGroup(parent, className, transform='') {\n\treturn createSVG('g', {\n\t\tclassName: className,\n\t\tinside: parent,\n\t\ttransform: transform\n\t});\n}\n\nexport function wrapInSVGGroup(elements, className='') {\n\tlet g = createSVG('g', {\n\t\tclassName: className\n\t});\n\telements.forEach(e => g.appendChild(e));\n\treturn g;\n}\n\nexport function makePath(pathStr, className='', stroke='none', fill='none') {\n\treturn createSVG('path', {\n\t\tclassName: className,\n\t\td: pathStr,\n\t\tstyles: {\n\t\t\tstroke: stroke,\n\t\t\tfill: fill\n\t\t}\n\t});\n}\n\nexport function makeArcPathStr(startPosition, endPosition, center, radius, clockWise=1){\n\tlet [arcStartX, arcStartY] = [center.x + startPosition.x, center.y + startPosition.y];\n\tlet [arcEndX, arcEndY] = [center.x + endPosition.x, center.y + endPosition.y];\n\n\treturn `M${center.x} ${center.y}\n\t\tL${arcStartX} ${arcStartY}\n\t\tA ${radius} ${radius} 0 0 ${clockWise ? 1 : 0}\n\t\t${arcEndX} ${arcEndY} z`;\n}\n\nexport function makeGradient(svgDefElem, color, lighter = false) {\n\tlet gradientId ='path-fill-gradient' + '-' + color + '-' +(lighter ? 'lighter' : 'default');\n\tlet gradientDef = renderVerticalGradient(svgDefElem, gradientId);\n\tlet opacities = [1, 0.6, 0.2];\n\tif(lighter) {\n\t\topacities = [0.4, 0.2, 0];\n\t}\n\n\tsetGradientStop(gradientDef, \"0%\", color, opacities[0]);\n\tsetGradientStop(gradientDef, \"50%\", color, opacities[1]);\n\tsetGradientStop(gradientDef, \"100%\", color, opacities[2]);\n\n\treturn gradientId;\n}\n\nexport function makeHeatSquare(className, x, y, size, fill='none', data={}) {\n\tlet args = {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: size,\n\t\theight: size,\n\t\tfill: fill\n\t};\n\n\tObject.keys(data).map(key => {\n\t\targs[key] = data[key];\n\t});\n\n\treturn createSVG(\"rect\", args);\n}\n\nexport function makeText(className, x, y, content) {\n\treturn createSVG('text', {\n\t\tclassName: className,\n\t\tx: x,\n\t\ty: y,\n\t\tdy: (FONT_SIZE / 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\tinnerHTML: content\n\t});\n}\n\nfunction makeVertLine(x, label, y1, y2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tlet l = createSVG('line', {\n\t\tclassName: 'line-vertical ' + options.className,\n\t\tx1: 0,\n\t\tx2: 0,\n\t\ty1: y1,\n\t\ty2: y2,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: 0,\n\t\ty: y1 > y2 ? y1 + LABEL_MARGIN : y1 - LABEL_MARGIN - FONT_SIZE,\n\t\tdy: FONT_SIZE + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'middle',\n\t\tinnerHTML: label + \"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(${ x }, 0)`\n\t});\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nfunction makeHoriLine(y, label, x1, x2, options={}) {\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.lineType) options.lineType = '';\n\tlet className = 'line-horizontal ' + options.className +\n\t\t(options.lineType === \"dashed\" ? \"dashed\": \"\");\n\n\tlet l = createSVG('line', {\n\t\tclassName: className,\n\t\tx1: x1,\n\t\tx2: x2,\n\t\ty1: 0,\n\t\ty2: 0,\n\t\tstyles: {\n\t\t\tstroke: options.stroke\n\t\t}\n\t});\n\n\tlet text = createSVG('text', {\n\t\tx: x1 < x2 ? x1 - LABEL_MARGIN : x1 + LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / 2 - 2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': x1 < x2 ? 'end' : 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = createSVG('g', {\n\t\ttransform: `translate(0, ${y})`,\n\t\t'stroke-opacity': 1\n\t});\n\n\tif(text === 0 || text === '0') {\n\t\tline.style.stroke = \"rgba(27, 31, 35, 0.6)\";\n\t}\n\n\tline.appendChild(l);\n\tline.appendChild(text);\n\n\treturn line;\n}\n\nexport function yLine(y, label, width, options={}) {\n\tif(!options.pos) options.pos = 'left';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\tlet x1 = -1 * AXIS_TICK_LENGTH;\n\tlet x2 = options.mode === 'span' ? width + AXIS_TICK_LENGTH : 0;\n\n\tif(options.mode === 'tick' && options.pos === 'right') {\n\t\tx1 = width + AXIS_TICK_LENGTH;\n\t\tx2 = width;\n\t}\n\n\t// let offset = options.pos === 'left' ? -1 * options.offset : options.offset;\n\n\tx1 += options.offset;\n\tx2 += options.offset;\n\n\treturn makeHoriLine(y, label, x1, x2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function xLine(x, label, height, options={}) {\n\tif(!options.pos) options.pos = 'bottom';\n\tif(!options.offset) options.offset = 0;\n\tif(!options.mode) options.mode = 'span';\n\tif(!options.stroke) options.stroke = BASE_LINE_COLOR;\n\tif(!options.className) options.className = '';\n\n\t// Draw X axis line in span/tick mode with optional label\n\t//                        \ty2(span)\n\t// \t\t\t\t\t\t|\n\t// \t\t\t\t\t\t|\n\t//\t\t\t\tx line\t|\n\t//\t\t\t\t\t\t|\n\t// \t\t\t\t\t   \t|\n\t// ---------------------+-- y2(tick)\n\t//\t\t\t\t\t\t|\n\t//\t\t\t\t\t\t\ty1\n\n\tlet y1 = height + AXIS_TICK_LENGTH;\n\tlet y2 = options.mode === 'span' ? -1 * AXIS_TICK_LENGTH : height;\n\n\tif(options.mode === 'tick' && options.pos === 'top') {\n\t\t// top axis ticks\n\t\ty1 = -1 * AXIS_TICK_LENGTH;\n\t\ty2 = 0;\n\t}\n\n\treturn makeVertLine(x, label, y1, y2, {\n\t\tstroke: options.stroke,\n\t\tclassName: options.className,\n\t\tlineType: options.lineType\n\t});\n}\n\nexport function yMarker(y, label, width, options={}) {\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label, 5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet line = makeHoriLine(y, '', 0, width, {\n\t\tstroke: options.stroke || BASE_LINE_COLOR,\n\t\tclassName: options.className || '',\n\t\tlineType: options.lineType\n\t});\n\n\tline.appendChild(labelSvg);\n\n\treturn line;\n}\n\nexport function yRegion(y1, y2, width, label) {\n\t// return a group\n\tlet height = y1 - y2;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`, // remove class\n\t\tstyles: {\n\t\t\tfill: `rgba(228, 234, 239, 0.49)`,\n\t\t\tstroke: BASE_LINE_COLOR,\n\t\t\t'stroke-dasharray': `${width}, ${height}`\n\t\t},\n\t\t// 'data-point-index': index,\n\t\tx: 0,\n\t\ty: 0,\n\t\twidth: width,\n\t\theight: height\n\t});\n\n\tlet labelSvg = createSVG('text', {\n\t\tclassName: 'chart-label',\n\t\tx: width - getStringWidth(label+\"\", 4.5) - LABEL_MARGIN,\n\t\ty: 0,\n\t\tdy: (FONT_SIZE / -2) + 'px',\n\t\t'font-size': FONT_SIZE + 'px',\n\t\t'text-anchor': 'start',\n\t\tinnerHTML: label+\"\"\n\t});\n\n\tlet region = createSVG('g', {\n\t\ttransform: `translate(0, ${y2})`\n\t});\n\n\tregion.appendChild(rect);\n\tregion.appendChild(labelSvg);\n\n\treturn region;\n}\n\nexport function datasetBar(x, yTop, width, color, label='', index=0, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\n\tlet rect = createSVG('rect', {\n\t\tclassName: `bar mini`,\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height || meta.minHeight // TODO: correct y for positive min height\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn rect;\n\t} else {\n\t\trect.setAttribute('y', 0);\n\t\trect.setAttribute('x', 0);\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: width/2,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(rect);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function datasetDot(x, y, radius, color, label='', index=0) {\n\tlet dot = createSVG('circle', {\n\t\tstyle: `fill: ${color}`,\n\t\t'data-point-index': index,\n\t\tcx: x,\n\t\tcy: y,\n\t\tr: radius\n\t});\n\n\tlabel += \"\";\n\n\tif(!label && !label.length) {\n\t\treturn dot;\n\t} else {\n\t\tdot.setAttribute('cy', 0);\n\t\tdot.setAttribute('cx', 0);\n\n\t\tlet text = createSVG('text', {\n\t\t\tclassName: 'data-point-value',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tdy: (FONT_SIZE / 2 * -1 - radius) + 'px',\n\t\t\t'font-size': FONT_SIZE + 'px',\n\t\t\t'text-anchor': 'middle',\n\t\t\tinnerHTML: label\n\t\t});\n\n\t\tlet group = createSVG('g', {\n\t\t\t'data-point-index': index,\n\t\t\ttransform: `translate(${x}, ${y})`\n\t\t});\n\t\tgroup.appendChild(dot);\n\t\tgroup.appendChild(text);\n\n\t\treturn group;\n\t}\n}\n\nexport function getPaths(xList, yList, color, options={}, meta={}) {\n\tlet pointsList = yList.map((y, i) => (xList[i] + ',' + y));\n\tlet pointsStr = pointsList.join(\"L\");\n\tlet path = makePath(\"M\"+pointsStr, 'line-graph-path', color);\n\n\t// HeatLine\n\tif(options.heatline) {\n\t\tlet gradient_id = makeGradient(meta.svgDefs, color);\n\t\tpath.style.stroke = `url(#${gradient_id})`;\n\t}\n\n\tlet paths = {\n\t\tpath: path\n\t};\n\n\t// Region\n\tif(options.regionFill) {\n\t\tlet gradient_id_region = makeGradient(meta.svgDefs, color, true);\n\n\t\t// TODO: use zeroLine OR minimum\n\t\tlet pathStr = \"M\" + `${xList[0]},${meta.zeroLine}L` + pointsStr + `L${xList.slice(-1)[0]},${meta.zeroLine}`;\n\t\tpaths.region = makePath(pathStr, `region-fill`, 'none', `url(#${gradient_id_region})`);\n\t}\n\n\treturn paths;\n}\n\nexport let makeOverlay = {\n\t'bar': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\toverlay.style.fill = '#000000';\n\t\toverlay.style.opacity = '0.4';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t},\n\n\t'dot': (unit) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet overlay = unit.cloneNode();\n\t\tlet radius = unit.getAttribute('r');\n\t\tlet fill = unit.getAttribute('fill');\n\t\toverlay.setAttribute('r', parseInt(radius) + DOT_OVERLAY_SIZE_INCR);\n\t\toverlay.setAttribute('fill', fill);\n\t\toverlay.style.opacity = '0.6';\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t\treturn overlay;\n\t}\n};\n\nexport let updateOverlay = {\n\t'bar': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'rect') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['x', 'y', 'width', 'height'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t},\n\n\t'dot': (unit, overlay) => {\n\t\tlet transformValue;\n\t\tif(unit.nodeName !== 'circle') {\n\t\t\ttransformValue = unit.getAttribute('transform');\n\t\t\tunit = unit.childNodes[0];\n\t\t}\n\t\tlet attributes = ['cx', 'cy'];\n\t\tObject.values(unit.attributes)\n\t\t\t.filter(attr => attributes.includes(attr.name) && attr.specified)\n\t\t\t.map(attr => {\n\t\t\t\toverlay.setAttribute(attr.name, attr.nodeValue);\n\t\t\t});\n\n\t\tif(transformValue) {\n\t\t\toverlay.setAttribute('transform', transformValue);\n\t\t}\n\t}\n};\n","const PRESET_COLOR_MAP = {\n\t'light-blue': '#7cd6fd',\n\t'blue': '#5e64ff',\n\t'violet': '#743ee2',\n\t'red': '#ff5858',\n\t'orange': '#ffa00a',\n\t'yellow': '#feef72',\n\t'green': '#28a745',\n\t'light-green': '#98d85b',\n\t'purple': '#b554ff',\n\t'magenta': '#ffa3ef',\n\t'black': '#36114C',\n\t'grey': '#bdd3e6',\n\t'light-grey': '#f0f4f7',\n\t'dark-grey': '#b8c2cc'\n};\n\nexport const DEFAULT_COLORS = ['light-blue', 'blue', 'violet', 'red', 'orange',\n\t'yellow', 'green', 'light-green', 'purple', 'magenta', 'light-grey', 'dark-grey'];\n\nfunction limitColor(r){\n\tif (r > 255) return 255;\n\telse if (r < 0) return 0;\n\treturn r;\n}\n\nexport function lightenDarkenColor(color, amt) {\n\tlet col = getColor(color);\n\tlet usePound = false;\n\tif (col[0] == \"#\") {\n\t\tcol = col.slice(1);\n\t\tusePound = true;\n\t}\n\tlet num = parseInt(col,16);\n\tlet r = limitColor((num >> 16) + amt);\n\tlet b = limitColor(((num >> 8) & 0x00FF) + amt);\n\tlet g = limitColor((num & 0x0000FF) + amt);\n\treturn (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isValidColor(string) {\n\t// https://stackoverflow.com/a/8027444/6495043\n\treturn /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n}\n\nexport const getColor = (color) => {\n\treturn PRESET_COLOR_MAP[color] || color;\n};\n","import Chart from './chart';\n\nconst ALL_CHART_TYPES = ['line', 'scatter', 'bar', 'percentage', 'heatmap', 'pie'];\n\nconst COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter', 'percentage', 'pie'],\n\tline: ['scatter', 'bar', 'percentage', 'pie'],\n\tpie: ['line', 'scatter', 'percentage', 'bar'],\n\tscatter: ['line', 'bar', 'percentage', 'pie'],\n\tpercentage: ['bar', 'line', 'scatter', 'pie'],\n\theatmap: []\n};\n\n// Needs structure as per only labels/datasets\nconst COLOR_COMPATIBLE_CHARTS = {\n\tbar: ['line', 'scatter'],\n\tline: ['scatter', 'bar'],\n\tpie: ['percentage'],\n\tscatter: ['line', 'bar'],\n\tpercentage: ['pie'],\n\theatmap: []\n};\n\nexport function getDifferentChart(type, current_type, parent, args) {\n\tif(type === current_type) return;\n\n\tif(!ALL_CHART_TYPES.includes(type)) {\n\t\tconsole.error(`'${type}' is not a valid chart type.`);\n\t}\n\n\tif(!COMPATIBLE_CHARTS[current_type].includes(type)) {\n\t\tconsole.error(`'${current_type}' chart cannot be converted to a '${type}' chart.`);\n\t}\n\n\t// whether the new chart can use the existing colors\n\tconst useColor = COLOR_COMPATIBLE_CHARTS[current_type].includes(type);\n\n\t// Okay, this is anticlimactic\n\t// this function will need to actually be 'changeChartType(type)'\n\t// that will update only the required elements, but for now ...\n\n\targs.type = type;\n\targs.colors = useColor ? args.colors : undefined;\n\n\treturn new Chart(parent, args);\n}","import { getBarHeightAndYAttr } from './draw-utils';\n\nexport const UNIT_ANIM_DUR = 350;\nexport const PATH_ANIM_DUR = 350;\nexport const MARKER_LINE_ANIM_DUR = UNIT_ANIM_DUR;\nexport const REPLACE_ALL_NEW_DUR = 250;\n\nexport const STD_EASING = 'easein';\n\nexport function translate(unit, oldCoord, newCoord, duration) {\n\tlet old = typeof oldCoord === 'string' ? oldCoord : oldCoord.join(', ');\n\treturn [\n\t\tunit,\n\t\t{transform: newCoord.join(', ')},\n\t\tduration,\n\t\tSTD_EASING,\n\t\t\"translate\",\n\t\t{transform: old}\n\t];\n}\n\nexport function translateVertLine(xLine, newX, oldX) {\n\treturn translate(xLine, [oldX, 0], [newX, 0], MARKER_LINE_ANIM_DUR);\n}\n\nexport function translateHoriLine(yLine, newY, oldY) {\n\treturn translate(yLine, [0, oldY], [0, newY], MARKER_LINE_ANIM_DUR);\n}\n\nexport function animateRegion(rectGroup, newY1, newY2, oldY2) {\n\tlet newHeight = newY1 - newY2;\n\tlet rect = rectGroup.childNodes[0];\n\tlet width = rect.getAttribute(\"width\");\n\tlet rectAnim = [\n\t\trect,\n\t\t{ height: newHeight, 'stroke-dasharray': `${width}, ${newHeight}` },\n\t\tMARKER_LINE_ANIM_DUR,\n\t\tSTD_EASING\n\t];\n\n\tlet groupAnim = translate(rectGroup, [0, oldY2], [0, newY2], MARKER_LINE_ANIM_DUR);\n\treturn [rectAnim, groupAnim];\n}\n\nexport function animateBar(bar, x, yTop, width, offset=0, meta={}) {\n\tlet [height, y] = getBarHeightAndYAttr(yTop, meta.zeroLine);\n\ty -= offset;\n\tif(bar.nodeName !== 'rect') {\n\t\tlet rect = bar.childNodes[0];\n\t\tlet rectAnim = [\n\t\t\trect,\n\t\t\t{width: width, height: height},\n\t\t\tUNIT_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\n\t\tlet oldCoordStr = bar.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(bar, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [rectAnim, groupAnim];\n\t} else {\n\t\treturn [[bar, {width: width, height: height, x: x, y: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// bar.animate({height: args.newHeight, y: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animateDot(dot, x, y) {\n\tif(dot.nodeName !== 'circle') {\n\t\tlet oldCoordStr = dot.getAttribute(\"transform\").split(\"(\")[1].slice(0, -1);\n\t\tlet groupAnim = translate(dot, oldCoordStr, [x, y], MARKER_LINE_ANIM_DUR);\n\t\treturn [groupAnim];\n\t} else {\n\t\treturn [[dot, {cx: x, cy: y}, UNIT_ANIM_DUR, STD_EASING]];\n\t}\n\t// dot.animate({cy: yTop}, UNIT_ANIM_DUR, mina.easein);\n}\n\nexport function animatePath(paths, newXList, newYList, zeroLine) {\n\tlet pathComponents = [];\n\n\tlet pointsStr = newYList.map((y, i) => (newXList[i] + ',' + y));\n\tlet pathStr = pointsStr.join(\"L\");\n\n\tconst animPath = [paths.path, {d:\"M\"+pathStr}, PATH_ANIM_DUR, STD_EASING];\n\tpathComponents.push(animPath);\n\n\tif(paths.region) {\n\t\tlet regStartPt = `${newXList[0]},${zeroLine}L`;\n\t\tlet regEndPt = `L${newXList.slice(-1)[0]}, ${zeroLine}`;\n\n\t\tconst animRegion = [\n\t\t\tpaths.region,\n\t\t\t{d:\"M\" + regStartPt + pathStr + regEndPt},\n\t\t\tPATH_ANIM_DUR,\n\t\t\tSTD_EASING\n\t\t];\n\t\tpathComponents.push(animRegion);\n\t}\n\n\treturn pathComponents;\n}\n\nexport function animatePathStr(oldPath, pathStr) {\n\treturn [oldPath, {d: pathStr}, UNIT_ANIM_DUR, STD_EASING];\n}\n\n","// Leveraging SMIL Animations\n\nimport { REPLACE_ALL_NEW_DUR } from './animate';\n\nconst EASING = {\n\tease: \"0.25 0.1 0.25 1\",\n\tlinear: \"0 0 1 1\",\n\t// easein: \"0.42 0 1 1\",\n\teasein: \"0.1 0.8 0.2 1\",\n\teaseout: \"0 0 0.58 1\",\n\teaseinout: \"0.42 0 0.58 1\"\n};\n\nfunction animateSVGElement(element, props, dur, easingType=\"linear\", type=undefined, oldValues={}) {\n\n\tlet animElement = element.cloneNode(true);\n\tlet newElement = element.cloneNode(true);\n\n\tfor(var attributeName in props) {\n\t\tlet animateElement;\n\t\tif(attributeName === 'transform') {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animateTransform\");\n\t\t} else {\n\t\t\tanimateElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"animate\");\n\t\t}\n\t\tlet currentValue = oldValues[attributeName] || element.getAttribute(attributeName);\n\t\tlet value = props[attributeName];\n\n\t\tlet animAttr = {\n\t\t\tattributeName: attributeName,\n\t\t\tfrom: currentValue,\n\t\t\tto: value,\n\t\t\tbegin: \"0s\",\n\t\t\tdur: dur/1000 + \"s\",\n\t\t\tvalues: currentValue + \";\" + value,\n\t\t\tkeySplines: EASING[easingType],\n\t\t\tkeyTimes: \"0;1\",\n\t\t\tcalcMode: \"spline\",\n\t\t\tfill: 'freeze'\n\t\t};\n\n\t\tif(type) {\n\t\t\tanimAttr[\"type\"] = type;\n\t\t}\n\n\t\tfor (var i in animAttr) {\n\t\t\tanimateElement.setAttribute(i, animAttr[i]);\n\t\t}\n\n\t\tanimElement.appendChild(animateElement);\n\n\t\tif(type) {\n\t\t\tnewElement.setAttribute(attributeName, `translate(${value})`);\n\t\t} else {\n\t\t\tnewElement.setAttribute(attributeName, value);\n\t\t}\n\t}\n\n\treturn [animElement, newElement];\n}\n\nexport function transform(element, style) { // eslint-disable-line no-unused-vars\n\telement.style.transform = style;\n\telement.style.webkitTransform = style;\n\telement.style.msTransform = style;\n\telement.style.mozTransform = style;\n\telement.style.oTransform = style;\n}\n\nfunction animateSVG(svgContainer, elements) {\n\tlet newElements = [];\n\tlet animElements = [];\n\n\telements.map(element => {\n\t\tlet unit = element[0];\n\t\tlet parent = unit.parentNode;\n\n\t\tlet animElement, newElement;\n\n\t\telement[0] = unit;\n\t\t[animElement, newElement] = animateSVGElement(...element);\n\n\t\tnewElements.push(newElement);\n\t\tanimElements.push([animElement, parent]);\n\n\t\tparent.replaceChild(animElement, unit);\n\t});\n\n\tlet animSvg = svgContainer.cloneNode(true);\n\n\tanimElements.map((animElement, i) => {\n\t\tanimElement[1].replaceChild(newElements[i], animElement[0]);\n\t\telements[i][0] = newElements[i];\n\t});\n\n\treturn animSvg;\n}\n\nexport function runSMILAnimation(parent, svgElement, elementsToAnimate) {\n\tif(elementsToAnimate.length === 0) return;\n\n\tlet animSvgElement = animateSVG(svgElement, elementsToAnimate);\n\tif(svgElement.parentNode == parent) {\n\t\tparent.removeChild(svgElement);\n\t\tparent.appendChild(animSvgElement);\n\n\t}\n\n\t// Replace the new svgElement (data has already been replaced)\n\tsetTimeout(() => {\n\t\tif(animSvgElement.parentNode == parent) {\n\t\t\tparent.removeChild(animSvgElement);\n\t\t\tparent.appendChild(svgElement);\n\t\t}\n\t}, REPLACE_ALL_NEW_DUR);\n}\n","import { makeSVGGroup } from '../utils/draw';\nimport { makePath, xLine, yLine, yMarker, yRegion, datasetBar, datasetDot, getPaths } from '../utils/draw';\nimport { equilizeNoOfElements } from '../utils/draw-utils';\nimport { translateHoriLine, translateVertLine, animateRegion, animateBar,\n\tanimateDot, animatePath, animatePathStr } from '../utils/animate';\n\nclass ChartComponent {\n\tconstructor({\n\t\tlayerClass = '',\n\t\tlayerTransform = '',\n\t\tconstants,\n\n\t\tgetData,\n\t\tmakeElements,\n\t\tanimateElements\n\t}) {\n\t\tthis.layerTransform = layerTransform;\n\t\tthis.constants = constants;\n\n\t\tthis.makeElements = makeElements;\n\t\tthis.getData = getData;\n\n\t\tthis.animateElements = animateElements;\n\n\t\tthis.store = [];\n\n\t\tthis.layerClass = layerClass;\n\t\tthis.layerClass = typeof(this.layerClass) === 'function'\n\t\t\t? this.layerClass() : this.layerClass;\n\n\t\tthis.refresh();\n\t}\n\n\trefresh(data) {\n\t\tthis.data = data || this.getData();\n\t}\n\n\tsetup(parent) {\n\t\tthis.layer = makeSVGGroup(parent, this.layerClass, this.layerTransform);\n\t}\n\n\tmake() {\n\t\tthis.render(this.data);\n\t\tthis.oldData = this.data;\n\t}\n\n\trender(data) {\n\t\tthis.store = this.makeElements(data);\n\n\t\tthis.layer.textContent = '';\n\t\tthis.store.forEach(element => {\n\t\t\tthis.layer.appendChild(element);\n\t\t});\n\t}\n\n\tupdate(animate = true) {\n\t\tthis.refresh();\n\t\tlet animateElements = [];\n\t\tif(animate) {\n\t\t\tanimateElements = this.animateElements(this.data);\n\t\t}\n\t\treturn animateElements;\n\t}\n}\n\nlet componentConfigs = {\n\tpieSlices: {\n\t\tlayerClass: 'pie-slices',\n\t\tmakeElements(data) {\n\t\t\treturn data.sliceStrings.map((s, i) =>{\n\t\t\t\tlet slice = makePath(s, 'pie-path', 'none', data.colors[i]);\n\t\t\t\tslice.style.transition = 'transform .3s;';\n\t\t\t\treturn slice;\n\t\t\t});\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\treturn this.store.map((slice, i) =>\n\t\t\t\tanimatePathStr(slice, newData.sliceStrings[i])\n\t\t\t);\n\t\t}\n\t},\n\tyAxis: {\n\t\tlayerClass: 'y axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\tyLine(position, data.labels[i], this.constants.width,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.labels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tlabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\txAxis: {\n\t\tlayerClass: 'x axis',\n\t\tmakeElements(data) {\n\t\t\treturn data.positions.map((position, i) =>\n\t\t\t\txLine(position, data.calcLabels[i], this.constants.height,\n\t\t\t\t\t{mode: this.constants.mode, pos: this.constants.pos})\n\t\t\t);\n\t\t},\n\n\t\tanimateElements(newData) {\n\t\t\tlet newPos = newData.positions;\n\t\t\tlet newLabels = newData.calcLabels;\n\t\t\tlet oldPos = this.oldData.positions;\n\t\t\tlet oldLabels = this.oldData.calcLabels;\n\n\t\t\t[oldPos, newPos] = equilizeNoOfElements(oldPos, newPos);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\tpositions: oldPos,\n\t\t\t\tcalcLabels: newLabels\n\t\t\t});\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateVertLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyMarkers: {\n\t\tlayerClass: 'y-markers',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(marker =>\n\t\t\t\tyMarker(marker.position, marker.label, this.constants.width,\n\t\t\t\t\t{pos:'right', mode: 'span', lineType: 'dashed'})\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.position);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.position);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tposition: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\treturn this.store.map((line, i) => {\n\t\t\t\treturn translateHoriLine(\n\t\t\t\t\tline, newPos[i], oldPos[i]\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t},\n\n\tyRegions: {\n\t\tlayerClass: 'y-regions',\n\t\tmakeElements(data) {\n\t\t\treturn data.map(region =>\n\t\t\t\tyRegion(region.startPos, region.endPos, this.constants.width,\n\t\t\t\t\tregion.label)\n\t\t\t);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\t[this.oldData, newData] = equilizeNoOfElements(this.oldData, newData);\n\n\t\t\tlet newPos = newData.map(d => d.endPos);\n\t\t\tlet newLabels = newData.map(d => d.label);\n\t\t\tlet newStarts = newData.map(d => d.startPos);\n\n\t\t\tlet oldPos = this.oldData.map(d => d.endPos);\n\t\t\tlet oldStarts = this.oldData.map(d => d.startPos);\n\n\t\t\tthis.render(oldPos.map((pos, i) => {\n\t\t\t\treturn {\n\t\t\t\t\tstartPos: oldStarts[i],\n\t\t\t\t\tendPos: oldPos[i],\n\t\t\t\t\tlabel: newLabels[i]\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((rectGroup, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateRegion(\n\t\t\t\t\trectGroup, newStarts[i], newPos[i], oldPos[i]\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tbarGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-bars dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'bar';\n\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\treturn datasetBar(\n\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\ty,\n\t\t\t\t\tdata.barWidth,\n\t\t\t\t\tc.color,\n\t\t\t\t\tdata.labels[j],\n\t\t\t\t\tj,\n\t\t\t\t\tdata.offsets[j],\n\t\t\t\t\t{\n\t\t\t\t\t\tzeroLine: data.zeroLine,\n\t\t\t\t\t\tbarsWidth: data.barsWidth,\n\t\t\t\t\t\tminHeight: c.minHeight\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t\treturn this.units;\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newOffsets = newData.offsets;\n\t\t\tlet newLabels = newData.labels;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldOffsets = this.oldData.offsets;\n\t\t\tlet oldLabels = this.oldData.labels;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldOffsets, newOffsets] = equilizeNoOfElements(oldOffsets, newOffsets);\n\t\t\t[oldLabels, newLabels] = equilizeNoOfElements(oldLabels, newLabels);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\toffsets: oldOffsets,\n\t\t\t\tlabels: newLabels,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tbarsWidth: this.oldData.barsWidth,\n\t\t\t\tbarWidth: this.oldData.barWidth,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tthis.store.map((bar, i) => {\n\t\t\t\tanimateElements = animateElements.concat(animateBar(\n\t\t\t\t\tbar, newXPos[i], newYPos[i], newData.barWidth, newOffsets[i],\n\t\t\t\t\t{zeroLine: newData.zeroLine}\n\t\t\t\t));\n\t\t\t});\n\n\t\t\treturn animateElements;\n\t\t}\n\t},\n\n\tlineGraph: {\n\t\tlayerClass: function() { return 'dataset-units dataset-line dataset-' + this.constants.index; },\n\t\tmakeElements(data) {\n\t\t\tlet c = this.constants;\n\t\t\tthis.unitType = 'dot';\n\t\t\tthis.paths = {};\n\t\t\tif(!c.hideLine) {\n\t\t\t\tthis.paths = getPaths(\n\t\t\t\t\tdata.xPositions,\n\t\t\t\t\tdata.yPositions,\n\t\t\t\t\tc.color,\n\t\t\t\t\t{\n\t\t\t\t\t\theatline: c.heatline,\n\t\t\t\t\t\tregionFill: c.regionFill\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsvgDefs: c.svgDefs,\n\t\t\t\t\t\tzeroLine: data.zeroLine\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.units = [];\n\t\t\tif(!c.hideDots) {\n\t\t\t\tthis.units = data.yPositions.map((y, j) => {\n\t\t\t\t\treturn datasetDot(\n\t\t\t\t\t\tdata.xPositions[j],\n\t\t\t\t\t\ty,\n\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\tc.color,\n\t\t\t\t\t\t(c.valuesOverPoints ? data.values[j] : ''),\n\t\t\t\t\t\tj\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Object.values(this.paths).concat(this.units);\n\t\t},\n\t\tanimateElements(newData) {\n\t\t\tlet newXPos = newData.xPositions;\n\t\t\tlet newYPos = newData.yPositions;\n\t\t\tlet newValues = newData.values;\n\n\t\t\tlet oldXPos = this.oldData.xPositions;\n\t\t\tlet oldYPos = this.oldData.yPositions;\n\t\t\tlet oldValues = this.oldData.values;\n\n\t\t\t[oldXPos, newXPos] = equilizeNoOfElements(oldXPos, newXPos);\n\t\t\t[oldYPos, newYPos] = equilizeNoOfElements(oldYPos, newYPos);\n\t\t\t[oldValues, newValues] = equilizeNoOfElements(oldValues, newValues);\n\n\t\t\tthis.render({\n\t\t\t\txPositions: oldXPos,\n\t\t\t\tyPositions: oldYPos,\n\t\t\t\tvalues: newValues,\n\n\t\t\t\tzeroLine: this.oldData.zeroLine,\n\t\t\t\tradius: this.oldData.radius,\n\t\t\t});\n\n\t\t\tlet animateElements = [];\n\n\t\t\tif(Object.keys(this.paths).length) {\n\t\t\t\tanimateElements = animateElements.concat(animatePath(\n\t\t\t\t\tthis.paths, newXPos, newYPos, newData.zeroLine));\n\t\t\t}\n\n\t\t\tif(this.units.length) {\n\t\t\t\tthis.units.map((dot, i) => {\n\t\t\t\t\tanimateElements = animateElements.concat(animateDot(\n\t\t\t\t\t\tdot, newXPos[i], newYPos[i]));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn animateElements;\n\t\t}\n\t}\n};\n\nexport function getComponent(name, constants, getData) {\n\tlet keys = Object.keys(componentConfigs).filter(k => name.includes(k));\n\tlet config = componentConfigs[keys[0]];\n\tObject.assign(config, {\n\t\tconstants: constants,\n\t\tgetData: getData\n\t});\n\treturn new ChartComponent(config);\n}\n","// Playing around with dates\n\n// https://stackoverflow.com/a/11252167/6495043\nfunction treatAsUtc(dateStr) {\n\tlet result = new Date(dateStr);\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset());\n\treturn result;\n}\n\nexport function getDdMmYyyy(date) {\n\tlet dd = date.getDate();\n\tlet mm = date.getMonth() + 1; // getMonth() is zero-based\n\treturn [\n\t\t(dd>9 ? '' : '0') + dd,\n\t\t(mm>9 ? '' : '0') + mm,\n\t\tdate.getFullYear()\n\t].join('-');\n}\n\nexport function getWeeksBetween(startDateStr, endDateStr) {\n\treturn Math.ceil(getDaysBetween(startDateStr, endDateStr) / 7);\n}\n\nexport function getDaysBetween(startDateStr, endDateStr) {\n\tlet millisecondsPerDay = 24 * 60 * 60 * 1000;\n\treturn (treatAsUtc(endDateStr) - treatAsUtc(startDateStr)) / millisecondsPerDay;\n}\n\n// mutates\nexport function addDays(date, numberOfDays) {\n\tdate.setDate(date.getDate() + numberOfDays);\n}\n\nexport function getMonthName(i) {\n\tlet monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t];\n\treturn monthNames[i];\n}\n","import { floatTwo } from './helpers';\n\nfunction normalize(x) {\n\t// Calculates mantissa and exponent of a number\n\t// Returns normalized number and exponent\n\t// https://stackoverflow.com/q/9383593/6495043\n\n\tif(x===0) {\n\t\treturn [0, 0];\n\t}\n\tif(isNaN(x)) {\n\t\treturn {mantissa: -6755399441055744, exponent: 972};\n\t}\n\tvar sig = x > 0 ? 1 : -1;\n\tif(!isFinite(x)) {\n\t\treturn {mantissa: sig * 4503599627370496, exponent: 972};\n\t}\n\n\tx = Math.abs(x);\n\tvar exp = Math.floor(Math.log10(x));\n\tvar man = x/Math.pow(10, exp);\n\n\treturn [sig * man, exp];\n}\n\nfunction getChartRangeIntervals(max, min=0) {\n\tlet upperBound = Math.ceil(max);\n\tlet lowerBound = Math.floor(min);\n\tlet range = upperBound - lowerBound;\n\n\tlet noOfParts = range;\n\tlet partSize = 1;\n\n\t// To avoid too many partitions\n\tif(range > 5) {\n\t\tif(range % 2 !== 0) {\n\t\t\tupperBound++;\n\t\t\t// Recalc range\n\t\t\trange = upperBound - lowerBound;\n\t\t}\n\t\tnoOfParts = range/2;\n\t\tpartSize = 2;\n\t}\n\n\t// Special case: 1 and 2\n\tif(range <= 2) {\n\t\tnoOfParts = 4;\n\t\tpartSize = range/noOfParts;\n\t}\n\n\t// Special case: 0\n\tif(range === 0) {\n\t\tnoOfParts = 5;\n\t\tpartSize = 1;\n\t}\n\n\tlet intervals = [];\n\tfor(var i = 0; i <= noOfParts; i++){\n\t\tintervals.push(lowerBound + partSize * i);\n\t}\n\treturn intervals;\n}\n\nfunction getChartIntervals(maxValue, minValue=0) {\n\tlet [normalMaxValue, exponent] = normalize(maxValue);\n\tlet normalMinValue = minValue ? minValue/Math.pow(10, exponent): 0;\n\n\t// Allow only 7 significant digits\n\tnormalMaxValue = normalMaxValue.toFixed(6);\n\n\tlet intervals = getChartRangeIntervals(normalMaxValue, normalMinValue);\n\tintervals = intervals.map(value => value * Math.pow(10, exponent));\n\treturn intervals;\n}\n\nexport function calcChartIntervals(values, withMinimum=false) {\n\t//*** Where the magic happens ***\n\n\t// Calculates best-fit y intervals from given values\n\t// and returns the interval array\n\n\tlet maxValue = Math.max(...values);\n\tlet minValue = Math.min(...values);\n\n\t// Exponent to be used for pretty print\n\tlet exponent = 0, intervals = []; // eslint-disable-line no-unused-vars\n\n\tfunction getPositiveFirstIntervals(maxValue, absMinValue) {\n\t\tlet intervals = getChartIntervals(maxValue);\n\n\t\tlet intervalSize = intervals[1] - intervals[0];\n\n\t\t// Then unshift the negative values\n\t\tlet value = 0;\n\t\tfor(var i = 1; value < absMinValue; i++) {\n\t\t\tvalue += intervalSize;\n\t\t\tintervals.unshift((-1) * value);\n\t\t}\n\t\treturn intervals;\n\t}\n\n\t// CASE I: Both non-negative\n\n\tif(maxValue >= 0 && minValue >= 0) {\n\t\texponent = normalize(maxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(maxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(maxValue, minValue);\n\t\t}\n\t}\n\n\t// CASE II: Only minValue negative\n\n\telse if(maxValue > 0 && minValue < 0) {\n\t\t// `withMinimum` irrelevant in this case,\n\t\t// We'll be handling both sides of zero separately\n\t\t// (both starting from zero)\n\t\t// Because ceil() and floor() behave differently\n\t\t// in those two regions\n\n\t\tlet absMinValue = Math.abs(minValue);\n\n\t\tif(maxValue >= absMinValue) {\n\t\t\texponent = normalize(maxValue)[1];\n\t\t\tintervals = getPositiveFirstIntervals(maxValue, absMinValue);\n\t\t} else {\n\t\t\t// Mirror: maxValue => absMinValue, then change sign\n\t\t\texponent = normalize(absMinValue)[1];\n\t\t\tlet posIntervals = getPositiveFirstIntervals(absMinValue, maxValue);\n\t\t\tintervals = posIntervals.map(d => d * (-1));\n\t\t}\n\n\t}\n\n\t// CASE III: Both non-positive\n\n\telse if(maxValue <= 0 && minValue <= 0) {\n\t\t// Mirrored Case I:\n\t\t// Work with positives, then reverse the sign and array\n\n\t\tlet pseudoMaxValue = Math.abs(minValue);\n\t\tlet pseudoMinValue = Math.abs(maxValue);\n\n\t\texponent = normalize(pseudoMaxValue)[1];\n\t\tif(!withMinimum) {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue);\n\t\t} else {\n\t\t\tintervals = getChartIntervals(pseudoMaxValue, pseudoMinValue);\n\t\t}\n\n\t\tintervals = intervals.reverse().map(d => d * (-1));\n\t}\n\n\treturn intervals;\n}\n\nexport function getZeroIndex(yPts) {\n\tlet zeroIndex;\n\tlet interval = getIntervalSize(yPts);\n\tif(yPts.indexOf(0) >= 0) {\n\t\t// the range has a given zero\n\t\t// zero-line on the chart\n\t\tzeroIndex = yPts.indexOf(0);\n\t} else if(yPts[0] > 0) {\n\t\t// Minimum value is positive\n\t\t// zero-line is off the chart: below\n\t\tlet min = yPts[0];\n\t\tzeroIndex = (-1) * min / interval;\n\t} else {\n\t\t// Maximum value is negative\n\t\t// zero-line is off the chart: above\n\t\tlet max = yPts[yPts.length - 1];\n\t\tzeroIndex = (-1) * max / interval + (yPts.length - 1);\n\t}\n\treturn zeroIndex;\n}\n\nexport function getRealIntervals(max, noOfIntervals, min = 0, asc = 1) {\n\tlet range = max - min;\n\tlet part = range * 1.0 / noOfIntervals;\n\tlet intervals = [];\n\n\tfor(var i = 0; i <= noOfIntervals; i++) {\n\t\tintervals.push(min + part * i);\n\t}\n\n\treturn asc ? intervals : intervals.reverse();\n}\n\nexport function getIntervalSize(orderedArray) {\n\treturn orderedArray[1] - orderedArray[0];\n}\n\nexport function getValueRange(orderedArray) {\n\treturn orderedArray[orderedArray.length-1] - orderedArray[0];\n}\n\nexport function scale(val, yAxis) {\n\treturn floatTwo(yAxis.zeroLine - val * yAxis.scaleMultiplier);\n}\n\nexport function calcDistribution(values, distributionSize) {\n\t// Assume non-negative values,\n\t// implying distribution minimum at zero\n\n\tlet dataMaxValue = Math.max(...values);\n\n\tlet distributionStep = 1 / (distributionSize - 1);\n\tlet distribution = [];\n\n\tfor(var i = 0; i < distributionSize; i++) {\n\t\tlet checkpoint = dataMaxValue * (distributionStep * i);\n\t\tdistribution.push(checkpoint);\n\t}\n\n\treturn distribution;\n}\n\nexport function getMaxCheckpoint(value, distribution) {\n\treturn distribution.filter(d => d < value).length;\n}\n","import { fillArray } from '../utils/helpers';\nimport { DEFAULT_AXIS_CHART_TYPE, AXIS_DATASET_CHART_TYPES, DEFAULT_CHAR_WIDTH } from '../utils/constants';\n\nexport function dataPrep(data, type) {\n\tdata.labels = data.labels || [];\n\n\tlet datasetLength = data.labels.length;\n\n\t// Datasets\n\tlet datasets = data.datasets;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\tif(!datasets) {\n\t\t// default\n\t\tdatasets = [{\n\t\t\tvalues: zeroArray\n\t\t}];\n\t}\n\n\tdatasets.map(d=> {\n\t\t// Set values\n\t\tif(!d.values) {\n\t\t\td.values = zeroArray;\n\t\t} else {\n\t\t\t// Check for non values\n\t\t\tlet vals = d.values;\n\t\t\tvals = vals.map(val => (!isNaN(val) ? val : 0));\n\n\t\t\t// Trim or extend\n\t\t\tif(vals.length > datasetLength) {\n\t\t\t\tvals = vals.slice(0, datasetLength);\n\t\t\t} else {\n\t\t\t\tvals = fillArray(vals, datasetLength - vals.length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Set labels\n\t\t//\n\n\t\t// Set type\n\t\tif(!d.chartType ) {\n\t\t\tif(!AXIS_DATASET_CHART_TYPES.includes(type)) type === DEFAULT_AXIS_CHART_TYPE;\n\t\t\td.chartType = type;\n\t\t}\n\n\t});\n\n\t// Markers\n\n\t// Regions\n\t// data.yRegions = data.yRegions || [];\n\tif(data.yRegions) {\n\t\tdata.yRegions.map(d => {\n\t\t\tif(d.end < d.start) {\n\t\t\t\t[d.start, d.end] = [d.end, d.start];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn data;\n}\n\nexport function zeroDataPrep(realData) {\n\tlet datasetLength = realData.labels.length;\n\tlet zeroArray = new Array(datasetLength).fill(0);\n\n\tlet zeroData = {\n\t\tlabels: realData.labels.slice(0, -1),\n\t\tdatasets: realData.datasets.map(d => {\n\t\t\treturn {\n\t\t\t\tname: '',\n\t\t\t\tvalues: zeroArray.slice(0, -1),\n\t\t\t\tchartType: d.chartType\n\t\t\t};\n\t\t}),\n\t};\n\n\tif(realData.yMarkers) {\n\t\tzeroData.yMarkers = [\n\t\t\t{\n\t\t\t\tvalue: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\tif(realData.yRegions) {\n\t\tzeroData.yRegions = [\n\t\t\t{\n\t\t\t\tstart: 0,\n\t\t\t\tend: 0,\n\t\t\t\tlabel: ''\n\t\t\t}\n\t\t];\n\t}\n\n\treturn zeroData;\n}\n\nexport function getShortenedLabels(chartWidth, labels=[], isSeries=true) {\n\tlet allowedSpace = chartWidth / labels.length;\n\tlet allowedLetters = allowedSpace / DEFAULT_CHAR_WIDTH;\n\n\tlet calcLabels = labels.map((label, i) => {\n\t\tlabel += \"\";\n\t\tif(label.length > allowedLetters) {\n\n\t\t\tif(!isSeries) {\n\t\t\t\tif(allowedLetters-3 > 0) {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters-3) + \" ...\";\n\t\t\t\t} else {\n\t\t\t\t\tlabel = label.slice(0, allowedLetters) + '..';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet multiple = Math.ceil(label.length/allowedLetters);\n\t\t\t\tif(i % multiple !== 0) {\n\t\t\t\t\tlabel = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn label;\n\t});\n\n\treturn calcLabels;\n}","import '../scss/charts.scss';\n\n// import MultiAxisChart from './charts/MultiAxisChart';\nimport PercentageChart from './charts/PercentageChart';\nimport PieChart from './charts/PieChart';\nimport Heatmap from './charts/Heatmap';\nimport AxisChart from './charts/AxisChart';\n\nconst chartTypes = {\n\t// multiaxis: MultiAxisChart,\n\tpercentage: PercentageChart,\n\theatmap: Heatmap,\n\tpie: PieChart\n};\n\nfunction getChartByType(chartType = 'line', parent, options) {\n\tif(chartType === 'line') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t} else if (chartType === 'bar') {\n\t\toptions.type = 'bar';\n\t\treturn new AxisChart(parent, options);\n\t} else if (chartType === 'axis-mixed') {\n\t\toptions.type = 'line';\n\t\treturn new AxisChart(parent, options);\n\t}\n\n\tif (!chartTypes[chartType]) {\n\t\tconsole.error(\"Undefined chart type: \" + chartType);\n\t\treturn;\n\t}\n\n\treturn new chartTypes[chartType](parent, options);\n}\n\nexport default class Chart {\n\tconstructor(parent, options) {\n\t\treturn getChartByType(options.type, parent, options);\n\t}\n}\n","import { $ } from '../utils/dom';\n\nexport default class SvgTip {\n\tconstructor({\n\t\tparent = null,\n\t\tcolors = []\n\t}) {\n\t\tthis.parent = parent;\n\t\tthis.colors = colors;\n\t\tthis.titleName = '';\n\t\tthis.titleValue = '';\n\t\tthis.listValues = [];\n\t\tthis.titleValueFirst = 0;\n\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\n\t\tthis.top = 0;\n\t\tthis.left = 0;\n\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tthis.makeTooltip();\n\t}\n\n\trefresh() {\n\t\tthis.fill();\n\t\tthis.calcPosition();\n\t\t// this.showTip();\n\t}\n\n\tmakeTooltip() {\n\t\tthis.container = $.create('div', {\n\t\t\tinside: this.parent,\n\t\t\tclassName: 'graph-svg-tip comparison',\n\t\t\tinnerHTML: `<span class=\"title\"></span>\n\t\t\t\t<ul class=\"data-point-list\"></ul>\n\t\t\t\t<div class=\"svg-pointer\"></div>`\n\t\t});\n\t\tthis.hideTip();\n\n\t\tthis.title = this.container.querySelector('.title');\n\t\tthis.dataPointList = this.container.querySelector('.data-point-list');\n\n\t\tthis.parent.addEventListener('mouseleave', () => {\n\t\t\tthis.hideTip();\n\t\t});\n\t}\n\n\tfill() {\n\t\tlet title;\n\t\tif(this.index) {\n\t\t\tthis.container.setAttribute('data-point-index', this.index);\n\t\t}\n\t\tif(this.titleValueFirst) {\n\t\t\ttitle = `<strong>${this.titleValue}</strong>${this.titleName}`;\n\t\t} else {\n\t\t\ttitle = `${this.titleName}<strong>${this.titleValue}</strong>`;\n\t\t}\n\t\tthis.title.innerHTML = title;\n\t\tthis.dataPointList.innerHTML = '';\n\n\t\tthis.listValues.map((set, i) => {\n\t\t\tconst color = this.colors[i] || 'black';\n\n\t\t\tlet li = $.create('li', {\n\t\t\t\tstyles: {\n\t\t\t\t\t'border-top': `3px solid ${color}`\n\t\t\t\t},\n\t\t\t\tinnerHTML: `<strong style=\"display: block;\">${ set.value === 0 || set.value ? set.value : '' }</strong>\n\t\t\t\t\t${set.title ? set.title : '' }`\n\t\t\t});\n\n\t\t\tthis.dataPointList.appendChild(li);\n\t\t});\n\t}\n\n\tcalcPosition() {\n\t\tlet width = this.container.offsetWidth;\n\n\t\tthis.top = this.y - this.container.offsetHeight;\n\t\tthis.left = this.x - width/2;\n\t\tlet maxLeft = this.parent.offsetWidth - width;\n\n\t\tlet pointer = this.container.querySelector('.svg-pointer');\n\n\t\tif(this.left < 0) {\n\t\t\tpointer.style.left = `calc(50% - ${-1 * this.left}px)`;\n\t\t\tthis.left = 0;\n\t\t} else if(this.left > maxLeft) {\n\t\t\tlet delta = this.left - maxLeft;\n\t\t\tlet pointerOffset = `calc(50% + ${delta}px)`;\n\t\t\tpointer.style.left = pointerOffset;\n\n\t\t\tthis.left = maxLeft;\n\t\t} else {\n\t\t\tpointer.style.left = `50%`;\n\t\t}\n\t}\n\n\tsetValues(x, y, title = {}, listValues = [], index = -1) {\n\t\tthis.titleName = title.name;\n\t\tthis.titleValue = title.value;\n\t\tthis.listValues = listValues;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.titleValueFirst = title.valueFirst || 0;\n\t\tthis.index = index;\n\t\tthis.refresh();\n\t}\n\n\thideTip() {\n\t\tthis.container.style.top = '0px';\n\t\tthis.container.style.left = '0px';\n\t\tthis.container.style.opacity = '0';\n\t}\n\n\tshowTip() {\n\t\tthis.container.style.top = this.top + 'px';\n\t\tthis.container.style.left = this.left + 'px';\n\t\tthis.container.style.opacity = '1';\n\t}\n}\n","export const VERT_SPACE_OUTSIDE_BASE_CHART = 50;\nexport const TRANSLATE_Y_BASE_CHART = 20;\nexport const LEFT_MARGIN_BASE_CHART = 60;\nexport const RIGHT_MARGIN_BASE_CHART = 40;\nexport const Y_AXIS_MARGIN = 60;\n\nexport const INIT_CHART_UPDATE_TIMEOUT = 700;\nexport const CHART_POST_ANIMATE_TIMEOUT = 400;\n\nexport const DEFAULT_AXIS_CHART_TYPE = 'line';\nexport const AXIS_DATASET_CHART_TYPES = ['line', 'bar'];\n\nexport const BAR_CHART_SPACE_RATIO = 0.5;\nexport const MIN_BAR_PERCENT_HEIGHT = 0.01;\n\nexport const LINE_CHART_DOT_SIZE = 4;\nexport const DOT_OVERLAY_SIZE_INCR = 4;\n\nexport const DEFAULT_CHAR_WIDTH = 7;\n\n// Universal constants\nexport const ANGLE_RATIO = Math.PI / 180;\nexport const FULL_ANGLE = 360;","import SvgTip from '../objects/SvgTip';\nimport { $, isElementInViewport, getElementContentWidth } from '../utils/dom';\nimport { makeSVGContainer, makeSVGDefs, makeSVGGroup } from '../utils/draw';\nimport { VERT_SPACE_OUTSIDE_BASE_CHART, TRANSLATE_Y_BASE_CHART, LEFT_MARGIN_BASE_CHART,\n\tRIGHT_MARGIN_BASE_CHART, INIT_CHART_UPDATE_TIMEOUT, CHART_POST_ANIMATE_TIMEOUT } from '../utils/constants';\nimport { getColor, DEFAULT_COLORS } from '../utils/colors';\nimport { getDifferentChart } from '../config';\nimport { runSMILAnimation } from '../utils/animation';\n\nexport default class BaseChart {\n\tconstructor(parent, options) {\n\t\tthis.rawChartArgs = options;\n\n\t\tthis.parent = typeof parent === 'string' ? document.querySelector(parent) : parent;\n\t\tif (!(this.parent instanceof HTMLElement)) {\n\t\t\tthrow new Error('No `parent` element to render on was provided.');\n\t\t}\n\n\t\tthis.title = options.title || '';\n\t\tthis.subtitle = options.subtitle || '';\n\t\tthis.argHeight = options.height || 240;\n\t\tthis.type = options.type || '';\n\n\t\tthis.realData = this.prepareData(options.data);\n\t\tthis.data = this.prepareFirstData(this.realData);\n\t\tthis.colors = [];\n\t\tthis.config = {\n\t\t\tshowTooltip: 1, // calculate\n\t\t\tshowLegend: options.showLegend || 1,\n\t\t\tisNavigable: options.isNavigable || 0,\n\t\t\tanimate: 1\n\t\t};\n\t\tthis.state = {};\n\t\tthis.options = {};\n\n\t\tthis.initTimeout = INIT_CHART_UPDATE_TIMEOUT;\n\n\t\tif(this.config.isNavigable) {\n\t\t\tthis.overlays = [];\n\t\t}\n\n\t\tthis.configure(options);\n\t}\n\n\tconfigure(args) {\n\t\tthis.setColors(args);\n\t\tthis.setMargins();\n\n\t\t// Bind window events\n\t\twindow.addEventListener('resize', () => this.draw(true));\n\t\twindow.addEventListener('orientationchange', () => this.draw(true));\n\t}\n\n\tsetColors() {\n\t\tlet args = this.rawChartArgs;\n\n\t\t// Needs structure as per only labels/datasets, from config\n\t\tconst list = args.type === 'percentage' || args.type === 'pie'\n\t\t\t? args.data.labels\n\t\t\t: args.data.datasets;\n\n\t\tif(!args.colors || (list && args.colors.length < list.length)) {\n\t\t\tthis.colors = DEFAULT_COLORS;\n\t\t} else {\n\t\t\tthis.colors = args.colors;\n\t\t}\n\n\t\tthis.colors = this.colors.map(color => getColor(color));\n\t}\n\n\tsetMargins() {\n\t\tlet height = this.argHeight;\n\t\tthis.baseHeight = height;\n\t\tthis.height = height - VERT_SPACE_OUTSIDE_BASE_CHART;\n\t\tthis.translateY = TRANSLATE_Y_BASE_CHART;\n\n\t\t// Horizontal margins\n\t\tthis.leftMargin = LEFT_MARGIN_BASE_CHART;\n\t\tthis.rightMargin = RIGHT_MARGIN_BASE_CHART;\n\t}\n\n\tvalidate() {\n\t\treturn true;\n\t}\n\n\tsetup() {\n\t\tif(this.validate()) {\n\t\t\tthis._setup();\n\t\t}\n\t}\n\n\t_setup() {\n\t\tthis.makeContainer();\n\t\tthis.makeTooltip();\n\n\t\tthis.draw(false, true);\n\t}\n\n\tsetupComponents() {\n\t\tthis.components = new Map();\n\t}\n\n\tmakeContainer() {\n\t\tthis.container = $.create('div', {\n\t\t\tclassName: 'chart-container',\n\t\t\tinnerHTML: `<h6 class=\"title\">${this.title}</h6>\n\t\t\t\t<h6 class=\"sub-title uppercase\">${this.subtitle}</h6>\n\t\t\t\t<div class=\"frappe-chart graphics\"></div>\n\t\t\t\t<div class=\"graph-stats-container\"></div>`\n\t\t});\n\n\t\t// Chart needs a dedicated parent element\n\t\tthis.parent.innerHTML = '';\n\t\tthis.parent.appendChild(this.container);\n\n\t\tthis.chartWrapper = this.container.querySelector('.frappe-chart');\n\t\tthis.statsWrapper = this.container.querySelector('.graph-stats-container');\n\t}\n\n\tmakeTooltip() {\n\t\tthis.tip = new SvgTip({\n\t\t\tparent: this.chartWrapper,\n\t\t\tcolors: this.colors\n\t\t});\n\t\tthis.bindTooltip();\n\t}\n\n\tbindTooltip() {}\n\n\tdraw(onlyWidthChange=false, init=false) {\n\t\tthis.calcWidth();\n\t\tthis.calc(onlyWidthChange);\n\t\tthis.makeChartArea();\n\t\tthis.setupComponents();\n\n\t\tthis.components.forEach(c => c.setup(this.drawArea));\n\t\t// this.components.forEach(c => c.make());\n\t\tthis.render(this.components, false);\n\n\t\tif(init) {\n\t\t\tthis.data = this.realData;\n\t\t\tsetTimeout(() => {this.update();}, this.initTimeout);\n\t\t}\n\n\t\tif(!onlyWidthChange) {\n\t\t\tthis.renderLegend();\n\t\t}\n\n\t\tthis.setupNavigation(init);\n\t}\n\n\tcalcWidth() {\n\t\tthis.baseWidth = getElementContentWidth(this.parent);\n\t\tthis.width = this.baseWidth - (this.leftMargin + this.rightMargin);\n\t}\n\n\tupdate(data=this.data) {\n\t\tthis.data = this.prepareData(data);\n\t\tthis.calc(); // builds state\n\t\tthis.render();\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn data;\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn data;\n\t}\n\n\tcalc() {} // builds state\n\n\trender(components=this.components, animate=true) {\n\t\tif(this.config.isNavigable) {\n\t\t\t// Remove all existing overlays\n\t\t\tthis.overlays.map(o => o.parentNode.removeChild(o));\n\t\t\t// ref.parentNode.insertBefore(element, ref);\n\t\t}\n\t\tlet elementsToAnimate = [];\n\t\t// Can decouple to this.refreshComponents() first to save animation timeout\n\t\tcomponents.forEach(c => {\n\t\t\telementsToAnimate = elementsToAnimate.concat(c.update(animate));\n\t\t});\n\t\tif(elementsToAnimate.length > 0) {\n\t\t\trunSMILAnimation(this.chartWrapper, this.svg, elementsToAnimate);\n\t\t\tsetTimeout(() => {\n\t\t\t\tcomponents.forEach(c => c.make());\n\t\t\t\tthis.updateNav();\n\t\t\t}, CHART_POST_ANIMATE_TIMEOUT);\n\t\t} else {\n\t\t\tcomponents.forEach(c => c.make());\n\t\t\tthis.updateNav();\n\t\t}\n\t}\n\n\tupdateNav() {\n\t\tif(this.config.isNavigable) {\n\t\t\t// if(!this.overlayGuides){\n\t\t\tthis.makeOverlay();\n\t\t\tthis.bindUnits();\n\t\t\t// } else {\n\t\t\t// \tthis.updateOverlay();\n\t\t\t// }\n\t\t}\n\t}\n\n\tmakeChartArea() {\n\t\tif(this.svg) {\n\t\t\tthis.chartWrapper.removeChild(this.svg);\n\t\t}\n\t\tthis.svg = makeSVGContainer(\n\t\t\tthis.chartWrapper,\n\t\t\t'chart',\n\t\t\tthis.baseWidth,\n\t\t\tthis.baseHeight\n\t\t);\n\t\tthis.svgDefs = makeSVGDefs(this.svg);\n\n\t\t// I WISH !!!\n\t\t// this.svg = makeSVGGroup(\n\t\t// \tsvgContainer,\n\t\t// \t'flipped-coord-system',\n\t\t// \t`translate(0, ${this.baseHeight}) scale(1, -1)`\n\t\t// );\n\n\t\tthis.drawArea = makeSVGGroup(\n\t\t\tthis.svg,\n\t\t\tthis.type + '-chart',\n\t\t\t`translate(${this.leftMargin}, ${this.translateY})`\n\t\t);\n\t}\n\n\trenderLegend() {}\n\n\tsetupNavigation(init=false) {\n\t\tif(!this.config.isNavigable) return;\n\n\t\tif(init) {\n\t\t\tthis.bindOverlay();\n\n\t\t\tthis.keyActions = {\n\t\t\t\t'13': this.onEnterKey.bind(this),\n\t\t\t\t'37': this.onLeftArrow.bind(this),\n\t\t\t\t'38': this.onUpArrow.bind(this),\n\t\t\t\t'39': this.onRightArrow.bind(this),\n\t\t\t\t'40': this.onDownArrow.bind(this),\n\t\t\t};\n\n\t\t\tdocument.addEventListener('keydown', (e) => {\n\t\t\t\tif(isElementInViewport(this.chartWrapper)) {\n\t\t\t\t\te = e || window.event;\n\t\t\t\t\tif(this.keyActions[e.keyCode]) {\n\t\t\t\t\t\tthis.keyActions[e.keyCode]();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {}\n\tupdateOverlay() {}\n\tbindOverlay() {}\n\tbindUnits() {}\n\n\tonLeftArrow() {}\n\tonRightArrow() {}\n\tonUpArrow() {}\n\tonDownArrow() {}\n\tonEnterKey() {}\n\n\taddDataPoint() {}\n\tremoveDataPoint() {}\n\n\tgetDataPoint() {}\n\tsetCurrentDataPoint() {}\n\n\tupdateDataset() {}\n\n\tgetDifferentChart(type) {\n\t\treturn getDifferentChart(type, this.type, this.parent, this.rawChartArgs);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { $ } from '../utils/dom';\n\nexport default class AggregationChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\n\t\tthis.config.maxSlices = args.maxSlices || 20;\n\t\tthis.config.maxLegendPoints = args.maxLegendPoints || 20;\n\t}\n\n\tcalc() {\n\t\tlet s = this.state;\n\t\tlet maxSlices = this.config.maxSlices;\n\t\ts.sliceTotals = [];\n\n\t\tlet allTotals = this.data.labels.map((label, i) => {\n\t\t\tlet total = 0;\n\t\t\tthis.data.datasets.map(e => {\n\t\t\t\ttotal += e.values[i];\n\t\t\t});\n\t\t\treturn [total, label];\n\t\t}).filter(d => { return d[0] > 0; }); // keep only positive results\n\n\t\tlet totals = allTotals;\n\t\tif(allTotals.length > maxSlices) {\n\t\t\t// Prune and keep a grey area for rest as per maxSlices\n\t\t\tallTotals.sort((a, b) => { return b[0] - a[0]; });\n\n\t\t\ttotals = allTotals.slice(0, maxSlices-1);\n\t\t\tlet remaining = allTotals.slice(maxSlices-1);\n\n\t\t\tlet sumOfRemaining = 0;\n\t\t\tremaining.map(d => {sumOfRemaining += d[0];});\n\t\t\ttotals.push([sumOfRemaining, 'Rest']);\n\t\t\tthis.colors[maxSlices-1] = 'grey';\n\t\t}\n\n\t\ts.labels = [];\n\t\ttotals.map(d => {\n\t\t\ts.sliceTotals.push(d[0]);\n\t\t\ts.labels.push(d[1]);\n\t\t});\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.state;\n\n\t\tthis.statsWrapper.textContent = '';\n\n\t\tthis.legendTotals = s.sliceTotals.slice(0, this.config.maxLegendPoints);\n\n\t\tlet xValues = s.labels;\n\t\tthis.legendTotals.map((d, i) => {\n\t\t\tif(d) {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.statsWrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background: ${this.colors[i]}\"></i>\n\t\t\t\t\t<span class=\"text-muted\">${xValues[i]}:</span>\n\t\t\t\t\t${d}\n\t\t\t\t</span>`;\n\t\t\t}\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { $, getOffset } from '../utils/dom';\n\nexport default class PercentageChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'percentage';\n\n\t\tthis.setup();\n\t}\n\n\tmakeChartArea() {\n\t\tthis.chartWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.chartWrapper.style.marginTop = '45px';\n\n\t\tthis.statsWrapper.className += ' ' + 'graph-focus-margin';\n\t\tthis.statsWrapper.style.marginBottom = '30px';\n\t\tthis.statsWrapper.style.paddingTop = '0px';\n\n\t\tthis.svg = $.create('div', {\n\t\t\tclassName: 'div',\n\t\t\tinside: this.chartWrapper\n\t\t});\n\n\t\tthis.chart = $.create('div', {\n\t\t\tclassName: 'progress-chart',\n\t\t\tinside: this.svg\n\t\t});\n\n\t\tthis.percentageBar = $.create('div', {\n\t\t\tclassName: 'progress',\n\t\t\tinside: this.chart\n\t\t});\n\t}\n\n\trender() {\n\t\tlet s = this.state;\n\t\tthis.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\t\ts.slices = [];\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tlet slice = $.create('div', {\n\t\t\t\tclassName: `progress-bar`,\n\t\t\t\t'data-index': i,\n\t\t\t\tinside: this.percentageBar,\n\t\t\t\tstyles: {\n\t\t\t\t\tbackground: this.colors[i],\n\t\t\t\t\twidth: total*100/this.grandTotal + \"%\"\n\t\t\t\t}\n\t\t\t});\n\t\t\ts.slices.push(slice);\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\tlet s = this.state;\n\n\t\tthis.chartWrapper.addEventListener('mousemove', (e) => {\n\t\t\tlet slice = e.target;\n\t\t\tif(slice.classList.contains('progress-bar')) {\n\n\t\t\t\tlet i = slice.getAttribute('data-index');\n\t\t\t\tlet gOff = getOffset(this.chartWrapper), pOff = getOffset(slice);\n\n\t\t\t\tlet x = pOff.left - gOff.left + slice.offsetWidth/2;\n\t\t\t\tlet y = pOff.top - gOff.top - 6;\n\t\t\t\tlet title = (this.formattedLabels && this.formattedLabels.length>0\n\t\t\t\t\t? this.formattedLabels[i] : this.state.labels[i]) + ': ';\n\t\t\t\tlet percent = (s.sliceTotals[i]*100/this.grandTotal).toFixed(1);\n\n\t\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\t\tthis.tip.showTip();\n\t\t\t}\n\t\t});\n\t}\n}\n","import AggregationChart from './AggregationChart';\nimport { getComponent } from '../objects/ChartComponents';\nimport { getOffset } from '../utils/dom';\nimport { getPositionByAngle } from '../utils/helpers';\nimport { makeArcPathStr } from '../utils/draw';\nimport { lightenDarkenColor } from '../utils/colors';\nimport { transform } from '../utils/animation';\nimport { FULL_ANGLE } from '../utils/constants';\n\nexport default class PieChart extends AggregationChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\t\tthis.type = 'pie';\n\t\tthis.initTimeout = 0;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure(args);\n\t\tthis.mouseMove = this.mouseMove.bind(this);\n\t\tthis.mouseLeave = this.mouseLeave.bind(this);\n\n\t\tthis.hoverRadio = args.hoverRadio || 0.1;\n\t\tthis.config.startAngle = args.startAngle || 0;\n\n\t\tthis.clockWise = args.clockWise || false;\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\tthis.init = 1;\n\t\treturn data;\n\t}\n\n\tcalc() {\n\t\tsuper.calc();\n\t\tlet s = this.state;\n\n\t\tthis.center = {\n\t\t\tx: this.width / 2,\n\t\t\ty: this.height / 2\n\t\t};\n\t\tthis.radius = (this.height > this.width ? this.center.x : this.center.y);\n\n\t\ts.grandTotal = s.sliceTotals.reduce((a, b) => a + b, 0);\n\n\t\tthis.calcSlices();\n\t}\n\n\tcalcSlices() {\n\t\tlet s = this.state;\n\t\tconst { radius, clockWise } = this;\n\n\t\tconst prevSlicesProperties = s.slicesProperties || [];\n\t\ts.sliceStrings = [];\n\t\ts.slicesProperties = [];\n\t\tlet curAngle = 180 - this.config.startAngle;\n\n\t\ts.sliceTotals.map((total, i) => {\n\t\t\tconst startAngle = curAngle;\n\t\t\tconst originDiffAngle = (total / s.grandTotal) * FULL_ANGLE;\n\t\t\tconst diffAngle = clockWise ? -originDiffAngle : originDiffAngle;\n\t\t\tconst endAngle = curAngle = curAngle + diffAngle;\n\t\t\tconst startPosition = getPositionByAngle(startAngle, radius);\n\t\t\tconst endPosition = getPositionByAngle(endAngle, radius);\n\n\t\t\tconst prevProperty = this.init && prevSlicesProperties[i];\n\n\t\t\tlet curStart,curEnd;\n\t\t\tif(this.init) {\n\t\t\t\tcurStart = prevProperty ? prevProperty.startPosition : startPosition;\n\t\t\t\tcurEnd = prevProperty ? prevProperty.endPosition : startPosition;\n\t\t\t} else {\n\t\t\t\tcurStart = startPosition;\n\t\t\t\tcurEnd = endPosition;\n\t\t\t}\n\t\t\tconst curPath = makeArcPathStr(curStart, curEnd, this.center, this.radius, this.clockWise);\n\n\t\t\ts.sliceStrings.push(curPath);\n\t\t\ts.slicesProperties.push({\n\t\t\t\tstartPosition,\n\t\t\t\tendPosition,\n\t\t\t\tvalue: total,\n\t\t\t\ttotal: s.grandTotal,\n\t\t\t\tstartAngle,\n\t\t\t\tendAngle,\n\t\t\t\tangle: diffAngle\n\t\t\t});\n\n\t\t});\n\t\tthis.init = 0;\n\t}\n\n\tsetupComponents() {\n\t\tlet s = this.state;\n\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'pieSlices',\n\t\t\t\t{ },\n\t\t\t\tfunction() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsliceStrings: s.sliceStrings,\n\t\t\t\t\t\tcolors: this.colors\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tcalTranslateByAngle(property){\n\t\tconst{radius,hoverRadio} = this;\n\t\tconst position = getPositionByAngle(property.startAngle+(property.angle / 2),radius);\n\t\treturn `translate3d(${(position.x) * hoverRadio}px,${(position.y) * hoverRadio}px,0)`;\n\t}\n\n\thoverSlice(path,i,flag,e){\n\t\tif(!path) return;\n\t\tconst color = this.colors[i];\n\t\tif(flag) {\n\t\t\ttransform(path, this.calTranslateByAngle(this.state.slicesProperties[i]));\n\t\t\tpath.style.fill = lightenDarkenColor(color, 50);\n\t\t\tlet g_off = getOffset(this.svg);\n\t\t\tlet x = e.pageX - g_off.left + 10;\n\t\t\tlet y = e.pageY - g_off.top - 10;\n\t\t\tlet title = (this.formatted_labels && this.formatted_labels.length > 0\n\t\t\t\t? this.formatted_labels[i] : this.state.labels[i]) + ': ';\n\t\t\tlet percent = (this.state.sliceTotals[i] * 100 / this.state.grandTotal).toFixed(1);\n\t\t\tthis.tip.setValues(x, y, {name: title, value: percent + \"%\"});\n\t\t\tthis.tip.showTip();\n\t\t} else {\n\t\t\ttransform(path,'translate3d(0,0,0)');\n\t\t\tthis.tip.hideTip();\n\t\t\tpath.style.fill = color;\n\t\t}\n\t}\n\n\tbindTooltip() {\n\t\tthis.chartWrapper.addEventListener('mousemove', this.mouseMove);\n\t\tthis.chartWrapper.addEventListener('mouseleave', this.mouseLeave);\n\t}\n\n\tmouseMove(e){\n\t\tconst target = e.target;\n\t\tlet slices = this.components.get('pieSlices').store;\n\t\tlet prevIndex = this.curActiveSliceIndex;\n\t\tlet prevAcitve = this.curActiveSlice;\n\t\tif(slices.includes(target)) {\n\t\t\tlet i = slices.indexOf(target);\n\t\t\tthis.hoverSlice(prevAcitve, prevIndex,false);\n\t\t\tthis.curActiveSlice = target;\n\t\t\tthis.curActiveSliceIndex = i;\n\t\t\tthis.hoverSlice(target, i, true, e);\n\t\t} else {\n\t\t\tthis.mouseLeave();\n\t\t}\n\t}\n\n\tmouseLeave(){\n\t\tthis.hoverSlice(this.curActiveSlice,this.curActiveSliceIndex,false);\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { makeSVGGroup, makeHeatSquare, makeText } from '../utils/draw';\nimport { addDays, getDdMmYyyy, getWeeksBetween } from '../utils/date-utils';\nimport { calcDistribution, getMaxCheckpoint } from '../utils/intervals';\nimport { isValidColor } from '../utils/colors';\n\nexport default class Heatmap extends BaseChart {\n\tconstructor(parent, options) {\n\t\tsuper(parent, options);\n\n\t\tthis.type = 'heatmap';\n\n\t\tthis.domain = options.domain || '';\n\t\tthis.subdomain = options.subdomain || '';\n\t\tthis.data = options.data || {};\n\t\tthis.discreteDomains = options.discreteDomains === 0 ? 0 : 1;\n\t\tthis.countLabel = options.countLabel || '';\n\n\t\tlet today = new Date();\n\t\tthis.start = options.start || addDays(today, 365);\n\n\t\tlet legendColors = (options.legendColors || []).slice(0, 5);\n\t\tthis.legendColors = this.validate_colors(legendColors)\n\t\t\t? legendColors\n\t\t\t: ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'];\n\n\t\t// Fixed 5-color theme,\n\t\t// More colors are difficult to parse visually\n\t\tthis.distribution_size = 5;\n\n\t\tthis.translateX = 0;\n\t\tthis.setup();\n\t}\n\n\tsetMargins() {\n\t\tsuper.setMargins();\n\t\tthis.leftMargin = 10;\n\t\tthis.translateY = 10;\n\t}\n\n\tvalidate_colors(colors) {\n\t\tif(colors.length < 5) return 0;\n\n\t\tlet valid = 1;\n\t\tcolors.forEach(function(string) {\n\t\t\tif(!isValidColor(string)) {\n\t\t\t\tvalid = 0;\n\t\t\t\tconsole.warn('\"' + string + '\" is not a valid color.');\n\t\t\t}\n\t\t}, this);\n\n\t\treturn valid;\n\t}\n\n\tconfigure() {\n\t\tsuper.configure();\n\t\tthis.today = new Date();\n\n\t\tif(!this.start) {\n\t\t\tthis.start = new Date();\n\t\t\tthis.start.setFullYear( this.start.getFullYear() - 1 );\n\t\t}\n\t\tthis.firstWeekStart = new Date(this.start.toDateString());\n\t\tthis.lastWeekStart = new Date(this.today.toDateString());\n\t\tif(this.firstWeekStart.getDay() !== 7) {\n\t\t\taddDays(this.firstWeekStart, (-1) * this.firstWeekStart.getDay());\n\t\t}\n\t\tif(this.lastWeekStart.getDay() !== 7) {\n\t\t\taddDays(this.lastWeekStart, (-1) * this.lastWeekStart.getDay());\n\t\t}\n\t\tthis.no_of_cols = getWeeksBetween(this.firstWeekStart + '', this.lastWeekStart + '') + 1;\n\t}\n\n\tcalcWidth() {\n\t\tthis.baseWidth = (this.no_of_cols + 3) * 12 ;\n\n\t\tif(this.discreteDomains) {\n\t\t\tthis.baseWidth += (12 * 12);\n\t\t}\n\t}\n\n\tmakeChartArea() {\n\t\tsuper.makeChartArea();\n\t\tthis.domainLabelGroup = makeSVGGroup(this.drawArea,\n\t\t\t'domain-label-group chart-label');\n\n\t\tthis.dataGroups = makeSVGGroup(this.drawArea,\n\t\t\t'data-groups',\n\t\t\t`translate(0, 20)`\n\t\t);\n\n\t\tthis.container.querySelector('.title').style.display = 'None';\n\t\tthis.container.querySelector('.sub-title').style.display = 'None';\n\t\tthis.container.querySelector('.graph-stats-container').style.display = 'None';\n\t\tthis.chartWrapper.style.marginTop = '0px';\n\t\tthis.chartWrapper.style.paddingTop = '0px';\n\t}\n\n\tcalc() {\n\n\t\tlet dataValues = Object.keys(this.data).map(key => this.data[key]);\n\t\tthis.distribution = calcDistribution(dataValues, this.distribution_size);\n\n\t\tthis.monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t\t];\n\t}\n\n\trender() {\n\t\tthis.renderAllWeeksAndStoreXValues(this.no_of_cols);\n\t}\n\n\trenderAllWeeksAndStoreXValues(no_of_weeks) {\n\t\t// renderAllWeeksAndStoreXValues\n\t\tthis.domainLabelGroup.textContent = '';\n\t\tthis.dataGroups.textContent = '';\n\n\t\tlet currentWeekSunday = new Date(this.firstWeekStart);\n\t\tthis.weekCol = 0;\n\t\tthis.currentMonth = currentWeekSunday.getMonth();\n\n\t\tthis.months = [this.currentMonth + ''];\n\t\tthis.monthWeeks = {}, this.monthStartPoints = [];\n\t\tthis.monthWeeks[this.currentMonth] = 0;\n\t\tthis.monthStartPoints.push(13);\n\n\t\tfor(var i = 0; i < no_of_weeks; i++) {\n\t\t\tlet dataGroup, monthChange = 0;\n\t\t\tlet day = new Date(currentWeekSunday);\n\n\t\t\t[dataGroup, monthChange] = this.get_week_squares_group(day, this.weekCol);\n\t\t\tthis.dataGroups.appendChild(dataGroup);\n\t\t\tthis.weekCol += 1 + parseInt(this.discreteDomains && monthChange);\n\t\t\tthis.monthWeeks[this.currentMonth]++;\n\t\t\tif(monthChange) {\n\t\t\t\tthis.currentMonth = (this.currentMonth + 1) % 12;\n\t\t\t\tthis.months.push(this.currentMonth + '');\n\t\t\t\tthis.monthWeeks[this.currentMonth] = 1;\n\t\t\t}\n\t\t\taddDays(currentWeekSunday, 7);\n\t\t}\n\t\tthis.render_month_labels();\n\t}\n\n\tget_week_squares_group(currentDate, index) {\n\t\tconst noOfWeekdays = 7;\n\t\tconst squareSide = 10;\n\t\tconst cellPadding = 2;\n\t\tconst step = 1;\n\t\tconst todayTime = this.today.getTime();\n\n\t\tlet monthChange = 0;\n\t\tlet weekColChange = 0;\n\n\t\tlet dataGroup = makeSVGGroup(this.dataGroups, 'data-group');\n\n\t\tfor(var y = 0, i = 0; i < noOfWeekdays; i += step, y += (squareSide + cellPadding)) {\n\t\t\tlet dataValue = 0;\n\t\t\tlet colorIndex = 0;\n\n\t\t\tlet currentTimestamp = currentDate.getTime()/1000;\n\t\t\tlet timestamp = Math.floor(currentTimestamp - (currentTimestamp % 86400)).toFixed(1);\n\n\t\t\tif(this.data[timestamp]) {\n\t\t\t\tdataValue = this.data[timestamp];\n\t\t\t}\n\n\t\t\tif(this.data[Math.round(timestamp)]) {\n\t\t\t\tdataValue = this.data[Math.round(timestamp)];\n\t\t\t}\n\n\t\t\tif(dataValue) {\n\t\t\t\tcolorIndex = getMaxCheckpoint(dataValue, this.distribution);\n\t\t\t}\n\n\t\t\tlet x = 13 + (index + weekColChange) * 12;\n\n\t\t\tlet dataAttr = {\n\t\t\t\t'data-date': getDdMmYyyy(currentDate),\n\t\t\t\t'data-value': dataValue,\n\t\t\t\t'data-day': currentDate.getDay()\n\t\t\t};\n\n\t\t\tlet heatSquare = makeHeatSquare('day', x, y, squareSide,\n\t\t\t\tthis.legendColors[colorIndex], dataAttr);\n\n\t\t\tdataGroup.appendChild(heatSquare);\n\n\t\t\tlet nextDate = new Date(currentDate);\n\t\t\taddDays(nextDate, 1);\n\t\t\tif(nextDate.getTime() > todayTime) break;\n\n\n\t\t\tif(nextDate.getMonth() - currentDate.getMonth()) {\n\t\t\t\tmonthChange = 1;\n\t\t\t\tif(this.discreteDomains) {\n\t\t\t\t\tweekColChange = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.monthStartPoints.push(13 + (index + weekColChange) * 12);\n\t\t\t}\n\t\t\tcurrentDate = nextDate;\n\t\t}\n\n\t\treturn [dataGroup, monthChange];\n\t}\n\n\trender_month_labels() {\n\t\t// this.first_month_label = 1;\n\t\t// if (this.firstWeekStart.getDate() > 8) {\n\t\t// \tthis.first_month_label = 0;\n\t\t// }\n\t\t// this.last_month_label = 1;\n\n\t\t// let first_month = this.months.shift();\n\t\t// let first_month_start = this.monthStartPoints.shift();\n\t\t// render first month if\n\n\t\t// let last_month = this.months.pop();\n\t\t// let last_month_start = this.monthStartPoints.pop();\n\t\t// render last month if\n\n\t\tthis.months.shift();\n\t\tthis.monthStartPoints.shift();\n\t\tthis.months.pop();\n\t\tthis.monthStartPoints.pop();\n\n\t\tthis.monthStartPoints.map((start, i) => {\n\t\t\tlet month_name =  this.monthNames[this.months[i]].substring(0, 3);\n\t\t\tlet text = makeText('y-value-text', start+12, 10, month_name);\n\t\t\tthis.domainLabelGroup.appendChild(text);\n\t\t});\n\t}\n\n\tbindTooltip() {\n\t\tArray.prototype.slice.call(\n\t\t\tdocument.querySelectorAll(\".data-group .day\")\n\t\t).map(el => {\n\t\t\tel.addEventListener('mouseenter', (e) => {\n\t\t\t\tlet count = e.target.getAttribute('data-value');\n\t\t\t\tlet dateParts = e.target.getAttribute('data-date').split('-');\n\n\t\t\t\tlet month = this.monthNames[parseInt(dateParts[1])-1].substring(0, 3);\n\n\t\t\t\tlet gOff = this.chartWrapper.getBoundingClientRect(), pOff = e.target.getBoundingClientRect();\n\n\t\t\t\tlet width = parseInt(e.target.getAttribute('width'));\n\t\t\t\tlet x = pOff.left - gOff.left + (width+2)/2;\n\t\t\t\tlet y = pOff.top - gOff.top - (width+2)/2;\n\t\t\t\tlet value = count + ' ' + this.countLabel;\n\t\t\t\tlet name = ' on ' + month + ' ' + dateParts[0] + ', ' + dateParts[2];\n\n\t\t\t\tthis.tip.setValues(x, y, {name: name, value: value, valueFirst: 1}, []);\n\t\t\t\tthis.tip.showTip();\n\t\t\t});\n\t\t});\n\t}\n\n\tupdate(data) {\n\t\tsuper.update(data);\n\t\tthis.bindTooltip();\n\t}\n}\n","import BaseChart from './BaseChart';\nimport { dataPrep, zeroDataPrep, getShortenedLabels } from '../utils/axis-chart-utils';\nimport { Y_AXIS_MARGIN } from '../utils/constants';\nimport { getComponent } from '../objects/ChartComponents';\nimport { $, getOffset, fire } from '../utils/dom';\nimport { calcChartIntervals, getIntervalSize, getValueRange, getZeroIndex, scale } from '../utils/intervals';\nimport { floatTwo } from '../utils/helpers';\nimport { makeOverlay, updateOverlay } from '../utils/draw';\nimport { MIN_BAR_PERCENT_HEIGHT, BAR_CHART_SPACE_RATIO, LINE_CHART_DOT_SIZE } from '../utils/constants';\n\nexport default class AxisChart extends BaseChart {\n\tconstructor(parent, args) {\n\t\tsuper(parent, args);\n\n\t\tthis.barOptions = args.barOptions || {};\n\t\tthis.lineOptions = args.lineOptions || {};\n\n\t\tthis.type = args.type || 'line';\n\t\tthis.init = 1;\n\n\t\tthis.setup();\n\t}\n\n\tconfigure(args) {\n\t\tsuper.configure();\n\n\t\targs.axisOptions = args.axisOptions || {};\n\t\targs.tooltipOptions = args.tooltipOptions || {};\n\n\t\tthis.config.xAxisMode = args.axisOptions.xAxisMode || 'span';\n\t\tthis.config.yAxisMode = args.axisOptions.yAxisMode || 'span';\n\t\tthis.config.xIsSeries = args.axisOptions.xIsSeries || 0;\n\n\t\tthis.config.formatTooltipX = args.tooltipOptions.formatTooltipX;\n\t\tthis.config.formatTooltipY = args.tooltipOptions.formatTooltipY;\n\n\t\tthis.config.valuesOverPoints = args.valuesOverPoints;\n\t}\n\n\tsetMargins() {\n\t\tsuper.setMargins();\n\t\tthis.leftMargin = Y_AXIS_MARGIN;\n\t\tthis.rightMargin = Y_AXIS_MARGIN;\n\t}\n\n\tprepareData(data=this.data) {\n\t\treturn dataPrep(data, this.type);\n\t}\n\n\tprepareFirstData(data=this.data) {\n\t\treturn zeroDataPrep(data);\n\t}\n\n\tcalc(onlyWidthChange = false) {\n\t\tthis.calcXPositions();\n\t\tif(onlyWidthChange) return;\n\t\tthis.calcYAxisParameters(this.getAllYValues(), this.type === 'line');\n\t}\n\n\tcalcXPositions() {\n\t\tlet s = this.state;\n\t\tlet labels = this.data.labels;\n\t\ts.datasetLength = labels.length;\n\n\t\ts.unitWidth = this.width/(s.datasetLength);\n\t\t// Default, as per bar, and mixed. Only line will be a special case\n\t\ts.xOffset = s.unitWidth/2;\n\n\t\t// // For a pure Line Chart\n\t\t// s.unitWidth = this.width/(s.datasetLength - 1);\n\t\t// s.xOffset = 0;\n\n\t\ts.xAxis = {\n\t\t\tlabels: labels,\n\t\t\tpositions: labels.map((d, i) =>\n\t\t\t\tfloatTwo(s.xOffset + i * s.unitWidth)\n\t\t\t)\n\t\t};\n\t}\n\n\tcalcYAxisParameters(dataValues, withMinimum = 'false') {\n\t\tconst yPts = calcChartIntervals(dataValues, withMinimum);\n\t\tconst scaleMultiplier = this.height / getValueRange(yPts);\n\t\tconst intervalHeight = getIntervalSize(yPts) * scaleMultiplier;\n\t\tconst zeroLine = this.height - (getZeroIndex(yPts) * intervalHeight);\n\n\t\tthis.state.yAxis = {\n\t\t\tlabels: yPts,\n\t\t\tpositions: yPts.map(d => zeroLine - d * scaleMultiplier),\n\t\t\tscaleMultiplier: scaleMultiplier,\n\t\t\tzeroLine: zeroLine,\n\t\t};\n\n\t\t// Dependent if above changes\n\t\tthis.calcDatasetPoints();\n\t\tthis.calcYExtremes();\n\t\tthis.calcYRegions();\n\t}\n\n\tcalcDatasetPoints() {\n\t\tlet s = this.state;\n\t\tlet scaleAll = values => values.map(val => scale(val, s.yAxis));\n\n\t\ts.datasets = this.data.datasets.map((d, i) => {\n\t\t\tlet values = d.values;\n\t\t\tlet cumulativeYs = d.cumulativeYs || [];\n\t\t\treturn {\n\t\t\t\tname: d.name,\n\t\t\t\tindex: i,\n\t\t\t\tchartType: d.chartType,\n\n\t\t\t\tvalues: values,\n\t\t\t\tyPositions: scaleAll(values),\n\n\t\t\t\tcumulativeYs: cumulativeYs,\n\t\t\t\tcumulativeYPos: scaleAll(cumulativeYs),\n\t\t\t};\n\t\t});\n\t}\n\n\tcalcYExtremes() {\n\t\tlet s = this.state;\n\t\tif(this.barOptions.stacked) {\n\t\t\ts.yExtremes = s.datasets[s.datasets.length - 1].cumulativeYPos;\n\t\t\treturn;\n\t\t}\n\t\ts.yExtremes = new Array(s.datasetLength).fill(9999);\n\t\ts.datasets.map(d => {\n\t\t\td.yPositions.map((pos, j) => {\n\t\t\t\tif(pos < s.yExtremes[j]) {\n\t\t\t\t\ts.yExtremes[j] = pos;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcalcYRegions() {\n\t\tlet s = this.state;\n\t\tif(this.data.yMarkers) {\n\t\t\tthis.state.yMarkers = this.data.yMarkers.map(d => {\n\t\t\t\td.position = scale(d.value, s.yAxis);\n\t\t\t\t// if(!d.label.includes(':')) {\n\t\t\t\t// \td.label += ': ' + d.value;\n\t\t\t\t// }\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.state.yRegions = this.data.yRegions.map(d => {\n\t\t\t\td.startPos = scale(d.start, s.yAxis);\n\t\t\t\td.endPos = scale(d.end, s.yAxis);\n\t\t\t\treturn d;\n\t\t\t});\n\t\t}\n\t}\n\n\tgetAllYValues() {\n\t\t// TODO: yMarkers, regions, sums, every Y value ever\n\t\tlet key = 'values';\n\n\t\tif(this.barOptions.stacked) {\n\t\t\tkey = 'cumulativeYs';\n\t\t\tlet cumulative = new Array(this.state.datasetLength).fill(0);\n\t\t\tthis.data.datasets.map((d, i) => {\n\t\t\t\tlet values = this.data.datasets[i].values;\n\t\t\t\td[key] = cumulative = cumulative.map((c, i) => c + values[i]);\n\t\t\t});\n\t\t}\n\n\t\tlet allValueLists = this.data.datasets.map(d => d[key]);\n\t\tif(this.data.yMarkers) {\n\t\t\tallValueLists.push(this.data.yMarkers.map(d => d.value));\n\t\t}\n\t\tif(this.data.yRegions) {\n\t\t\tthis.data.yRegions.map(d => {\n\t\t\t\tallValueLists.push([d.end, d.start]);\n\t\t\t});\n\t\t}\n\n\t\treturn [].concat(...allValueLists);\n\t}\n\n\tsetupComponents() {\n\t\tlet componentConfigs = [\n\t\t\t[\n\t\t\t\t'yAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.yAxisMode,\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'xAxis',\n\t\t\t\t{\n\t\t\t\t\tmode: this.config.xAxisMode,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\t// pos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\ts.xAxis.calcLabels = getShortenedLabels(this.width,\n\t\t\t\t\t\ts.xAxis.labels, this.config.xIsSeries);\n\n\t\t\t\t\treturn s.xAxis;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\n\t\t\t[\n\t\t\t\t'yRegions',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yRegions;\n\t\t\t\t}.bind(this)\n\t\t\t],\n\t\t];\n\n\t\tlet barDatasets = this.state.datasets.filter(d => d.chartType === 'bar');\n\t\tlet lineDatasets = this.state.datasets.filter(d => d.chartType === 'line');\n\n\t\tlet barsConfigs = barDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'barGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tstacked: this.barOptions.stacked,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t\tminHeight: this.height * MIN_BAR_PERCENT_HEIGHT,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\t\t\t\t\tlet stacked = this.barOptions.stacked;\n\n\t\t\t\t\tlet spaceRatio = this.barOptions.spaceRatio || BAR_CHART_SPACE_RATIO;\n\t\t\t\t\tlet barsWidth = s.unitWidth * (1 - spaceRatio);\n\t\t\t\t\tlet barWidth = barsWidth/(stacked ? 1 : barDatasets.length);\n\n\t\t\t\t\tlet xPositions = s.xAxis.positions.map(x => x - barsWidth/2);\n\t\t\t\t\tif(!stacked) {\n\t\t\t\t\t\txPositions = xPositions.map(p => p + barWidth * index);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet labels = new Array(s.datasetLength).fill('');\n\t\t\t\t\tif(this.config.valuesOverPoints) {\n\t\t\t\t\t\tif(stacked && d.index === s.datasets.length - 1) {\n\t\t\t\t\t\t\tlabels = d.cumulativeYs;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlabels = d.values;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offsets = new Array(s.datasetLength).fill(0);\n\t\t\t\t\tif(stacked) {\n\t\t\t\t\t\toffsets = d.yPositions.map((y, j) => y - d.cumulativeYPos[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: xPositions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\t\t\t\t\t\toffsets: offsets,\n\t\t\t\t\t\t// values: d.values,\n\t\t\t\t\t\tlabels: labels,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tbarsWidth: barsWidth,\n\t\t\t\t\t\tbarWidth: barWidth,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet lineConfigs = lineDatasets.map(d => {\n\t\t\tlet index = d.index;\n\t\t\treturn [\n\t\t\t\t'lineGraph' + '-' + d.index,\n\t\t\t\t{\n\t\t\t\t\tindex: index,\n\t\t\t\t\tcolor: this.colors[index],\n\t\t\t\t\tsvgDefs: this.svgDefs,\n\t\t\t\t\theatline: this.lineOptions.heatline,\n\t\t\t\t\tregionFill: this.lineOptions.regionFill,\n\t\t\t\t\thideDots: this.lineOptions.hideDots,\n\t\t\t\t\thideLine: this.lineOptions.hideLine,\n\n\t\t\t\t\t// same for all datasets\n\t\t\t\t\tvaluesOverPoints: this.config.valuesOverPoints,\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tlet s = this.state;\n\t\t\t\t\tlet d = s.datasets[index];\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\txPositions: s.xAxis.positions,\n\t\t\t\t\t\tyPositions: d.yPositions,\n\n\t\t\t\t\t\tvalues: d.values,\n\n\t\t\t\t\t\tzeroLine: s.yAxis.zeroLine,\n\t\t\t\t\t\tradius: this.lineOptions.dotSize || LINE_CHART_DOT_SIZE,\n\t\t\t\t\t};\n\t\t\t\t}.bind(this)\n\t\t\t];\n\t\t});\n\n\t\tlet markerConfigs = [\n\t\t\t[\n\t\t\t\t'yMarkers',\n\t\t\t\t{\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\tpos: 'right'\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\treturn this.state.yMarkers;\n\t\t\t\t}.bind(this)\n\t\t\t]\n\t\t];\n\n\t\tcomponentConfigs = componentConfigs.concat(barsConfigs, lineConfigs, markerConfigs);\n\n\t\tlet optionals = ['yMarkers', 'yRegions'];\n\t\tthis.dataUnitComponents = [];\n\n\t\tthis.components = new Map(componentConfigs\n\t\t\t.filter(args => !optionals.includes(args[0]) || this.state[args[0]])\n\t\t\t.map(args => {\n\t\t\t\tlet component = getComponent(...args);\n\t\t\t\tif(args[0].includes('lineGraph') || args[0].includes('barGraph')) {\n\t\t\t\t\tthis.dataUnitComponents.push(component);\n\t\t\t\t}\n\t\t\t\treturn [args[0], component];\n\t\t\t}));\n\t}\n\n\tbindTooltip() {\n\t\t// NOTE: could be in tooltip itself, as it is a given functionality for its parent\n\t\tthis.chartWrapper.addEventListener('mousemove', (e) => {\n\t\t\tlet o = getOffset(this.chartWrapper);\n\t\t\tlet relX = e.pageX - o.left - this.leftMargin;\n\t\t\tlet relY = e.pageY - o.top - this.translateY;\n\n\t\t\tif(relY < this.height + this.translateY * 2) {\n\t\t\t\tthis.mapTooltipXPosition(relX);\n\t\t\t} else {\n\t\t\t\tthis.tip.hideTip();\n\t\t\t}\n\t\t});\n\t}\n\n\tmapTooltipXPosition(relX) {\n\t\tlet s = this.state;\n\t\tif(!s.yExtremes) return;\n\n\t\tlet formatY = this.config.formatTooltipY;\n\t\tlet formatX = this.config.formatTooltipX;\n\n\t\tlet titles = s.xAxis.labels;\n\t\tif(formatX && formatX(titles[0])) {\n\t\t\ttitles = titles.map(d=>formatX(d));\n\t\t}\n\n\t\tformatY = formatY && formatY(s.yAxis.labels[0]) ? formatY : 0;\n\n\t\tfor(var i=s.datasetLength - 1; i >= 0 ; i--) {\n\t\t\tlet xVal = s.xAxis.positions[i];\n\t\t\t// let delta = i === 0 ? s.unitWidth : xVal - s.xAxis.positions[i-1];\n\t\t\tif(relX > xVal - s.unitWidth/2) {\n\t\t\t\tlet x = xVal + this.leftMargin;\n\t\t\t\tlet y = s.yExtremes[i] + this.translateY;\n\n\t\t\t\tlet values = this.data.datasets.map((set, j) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: set.name,\n\t\t\t\t\t\tvalue: formatY ? formatY(set.values[i]) : set.values[i],\n\t\t\t\t\t\tcolor: this.colors[j],\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tthis.tip.setValues(x, y, {name: titles[i], value: ''}, values, i);\n\t\t\t\tthis.tip.showTip();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\trenderLegend() {\n\t\tlet s = this.data;\n\t\tthis.statsWrapper.textContent = '';\n\n\t\tif(s.datasets.length > 1) {\n\t\t\ts.datasets.map((d, i) => {\n\t\t\t\tlet stats = $.create('div', {\n\t\t\t\t\tclassName: 'stats',\n\t\t\t\t\tinside: this.statsWrapper\n\t\t\t\t});\n\t\t\t\tstats.innerHTML = `<span class=\"indicator\">\n\t\t\t\t\t<i style=\"background: ${this.colors[i]}\"></i>\n\t\t\t\t\t${d.name}\n\t\t\t\t</span>`;\n\t\t\t});\n\t\t}\n\t}\n\n\tmakeOverlay() {\n\t\tif(this.init) {\n\t\t\tthis.init = 0;\n\t\t\treturn;\n\t\t}\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\n\t\tthis.overlayGuides = this.dataUnitComponents.map(c => {\n\t\t\treturn {\n\t\t\t\ttype: c.unitType,\n\t\t\t\toverlay: undefined,\n\t\t\t\tunits: c.units,\n\t\t\t};\n\t\t});\n\n\t\tif(this.state.currentIndex === undefined) {\n\t\t\tthis.state.currentIndex = this.state.datasetLength - 1;\n\t\t}\n\n\t\t// Render overlays\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\n\t\t\td.overlay = makeOverlay[d.type](currentUnit);\n\t\t\tthis.drawArea.appendChild(d.overlay);\n\t\t});\n\t}\n\n\tupdateOverlayGuides() {\n\t\tif(this.overlayGuides) {\n\t\t\tthis.overlayGuides.forEach(g => {\n\t\t\t\tlet o = g.overlay;\n\t\t\t\to.parentNode.removeChild(o);\n\t\t\t});\n\t\t}\n\t}\n\n\tbindOverlay() {\n\t\tthis.parent.addEventListener('data-select', () => {\n\t\t\tthis.updateOverlay();\n\t\t});\n\t}\n\n\tbindUnits() {\n\t\tthis.dataUnitComponents.map(c => {\n\t\t\tc.units.map(unit => {\n\t\t\t\tunit.addEventListener('click', () => {\n\t\t\t\t\tlet index = unit.getAttribute('data-point-index');\n\t\t\t\t\tthis.setCurrentDataPoint(index);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// Note: Doesn't work as tooltip is absolutely positioned\n\t\tthis.tip.container.addEventListener('click', () => {\n\t\t\tlet index = this.tip.container.getAttribute('data-point-index');\n\t\t\tthis.setCurrentDataPoint(index);\n\t\t});\n\t}\n\n\tupdateOverlay() {\n\t\tthis.overlayGuides.map(d => {\n\t\t\tlet currentUnit = d.units[this.state.currentIndex];\n\t\t\tupdateOverlay[d.type](currentUnit, d.overlay);\n\t\t});\n\t}\n\n\tonLeftArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex - 1);\n\t}\n\n\tonRightArrow() {\n\t\tthis.setCurrentDataPoint(this.state.currentIndex + 1);\n\t}\n\n\tgetDataPoint(index=this.state.currentIndex) {\n\t\tlet s = this.state;\n\t\tlet data_point = {\n\t\t\tindex: index,\n\t\t\tlabel: s.xAxis.labels[index],\n\t\t\tvalues: s.datasets.map(d => d.values[index])\n\t\t};\n\t\treturn data_point;\n\t}\n\n\tsetCurrentDataPoint(index) {\n\t\tlet s = this.state;\n\t\tindex = parseInt(index);\n\t\tif(index < 0) index = 0;\n\t\tif(index >= s.xAxis.labels.length) index = s.xAxis.labels.length - 1;\n\t\tif(index === s.currentIndex) return;\n\t\ts.currentIndex = index;\n\t\tfire(this.parent, \"data-select\", this.getDataPoint());\n\t}\n\n\t// API\n\taddDataPoint(label, datasetValues, index=this.state.datasetLength) {\n\t\tsuper.addDataPoint(label, datasetValues, index);\n\t\tthis.data.labels.splice(index, 0, label);\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\td.values.splice(index, 0, datasetValues[i]);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tremoveDataPoint(index = this.state.datasetLength-1) {\n\t\tif (this.data.labels.length <= 1) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.removeDataPoint(index);\n\t\tthis.data.labels.splice(index, 1);\n\t\tthis.data.datasets.map(d => {\n\t\t\td.values.splice(index, 1);\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\tupdateDataset(datasetValues, index=0) {\n\t\tthis.data.datasets[index].values = datasetValues;\n\t\tthis.update(this.data);\n\t}\n\t// addDataset(dataset, index) {}\n\t// removeDataset(index = 0) {}\n\n\tupdateDatasets(datasets) {\n\t\tthis.data.datasets.map((d, i) => {\n\t\t\tif(datasets[i]) {\n\t\t\t\td.values = datasets[i];\n\t\t\t}\n\t\t});\n\t\tthis.update(this.data);\n\t}\n\n\t// updateDataPoint(dataPoint, index = 0) {}\n\t// addDataPoint(dataPoint, index = 0) {}\n\t// removeDataPoint(index = 0) {}\n}\n"],"names":["$","expr","con","document","querySelector","getOffset","element","rect","getBoundingClientRect","top","documentElement","scrollTop","body","left","scrollLeft","isElementInViewport","el","bottom","window","innerHeight","clientHeight","right","innerWidth","clientWidth","getElementContentWidth","styles","getComputedStyle","padding","parseFloat","paddingLeft","paddingRight","fire","target","type","properties","evt","createEvent","initEvent","j","dispatchEvent","floatTwo","d","toFixed","fillArray","array","count","start","length","fillerArray","Array","Math","abs","fill","concat","getStringWidth","string","charWidth","getPositionByAngle","angle","radius","sin","ANGLE_RATIO","cos","getBarHeightAndYAttr","yTop","zeroLine","height","y","equilizeNoOfElements","array1","array2","extraCount","createSVG","tag","o","createElementNS","i","val","appendChild","ref","parentNode","insertBefore","keys","map","style","prop","setAttribute","renderVerticalGradient","svgDefElem","gradientId","setGradientStop","gradElem","offset","color","opacity","makeSVGContainer","parent","className","width","makeSVGDefs","svgContainer","makeSVGGroup","makePath","pathStr","makeArcPathStr","startPosition","endPosition","center","clockWise","arcStartX","x","arcStartY","arcEndX","arcEndY","makeGradient","lighter","gradientDef","opacities","makeHeatSquare","size","data","args","key","makeText","content","FONT_SIZE","makeVertLine","label","y1","y2","options","stroke","BASE_LINE_COLOR","l","text","LABEL_MARGIN","line","makeHoriLine","x1","x2","lineType","yLine","pos","mode","AXIS_TICK_LENGTH","xLine","yMarker","labelSvg","yRegion","region","datasetBar","index","meta","minHeight","group","datasetDot","dot","getPaths","xList","yList","pointsStr","join","path","heatline","gradient_id","svgDefs","paths","regionFill","gradient_id_region","slice","limitColor","r","lightenDarkenColor","amt","col","getColor","usePound","num","parseInt","b","g","toString","isValidColor","test","getDifferentChart","current_type","ALL_CHART_TYPES","includes","error","COMPATIBLE_CHARTS","useColor","COLOR_COMPATIBLE_CHARTS","colors","undefined","Chart","translate","unit","oldCoord","newCoord","duration","old","transform","STD_EASING","translateVertLine","newX","oldX","MARKER_LINE_ANIM_DUR","translateHoriLine","newY","oldY","animateRegion","rectGroup","newY1","newY2","oldY2","newHeight","childNodes","stroke-dasharray","getAttribute","animateBar","bar","nodeName","UNIT_ANIM_DUR","split","animateDot","cx","cy","animatePath","newXList","newYList","pathComponents","animPath","PATH_ANIM_DUR","push","regStartPt","regEndPt","animRegion","animatePathStr","oldPath","animateSVGElement","props","dur","easingType","oldValues","animElement","cloneNode","newElement","attributeName","animateElement","currentValue","value","animAttr","EASING","webkitTransform","msTransform","mozTransform","oTransform","animateSVG","elements","newElements","animElements","replaceChild","animSvg","runSMILAnimation","svgElement","elementsToAnimate","animSvgElement","removeChild","REPLACE_ALL_NEW_DUR","getComponent","name","constants","getData","Object","componentConfigs","filter","k","config","assign","ChartComponent","treatAsUtc","dateStr","result","Date","setMinutes","getMinutes","getTimezoneOffset","getDdMmYyyy","date","dd","getDate","mm","getMonth","getFullYear","getWeeksBetween","startDateStr","endDateStr","ceil","getDaysBetween","addDays","numberOfDays","setDate","normalize","isNaN","mantissa","exponent","sig","isFinite","exp","floor","log10","pow","getChartRangeIntervals","max","min","upperBound","lowerBound","range","noOfParts","partSize","intervals","getChartIntervals","maxValue","minValue","normalMaxValue","normalMinValue","calcChartIntervals","values","getPositiveFirstIntervals","absMinValue","intervalSize","unshift","withMinimum","pseudoMaxValue","pseudoMinValue","reverse","getZeroIndex","yPts","interval","getIntervalSize","indexOf","orderedArray","getValueRange","scale","yAxis","scaleMultiplier","calcDistribution","distributionSize","dataMaxValue","distributionStep","distribution","checkpoint","getMaxCheckpoint","dataPrep","labels","datasetLength","datasets","zeroArray","vals","chartType","AXIS_DATASET_CHART_TYPES","yRegions","end","zeroDataPrep","realData","zeroData","yMarkers","getShortenedLabels","chartWidth","isSeries","allowedLetters","DEFAULT_CHAR_WIDTH","getChartByType","AxisChart","chartTypes","create","createElement","SvgTip","titleName","titleValue","listValues","titleValueFirst","setup","makeTooltip","calcPosition","container","this","hideTip","title","dataPointList","addEventListener","innerHTML","set","_this2","li","offsetWidth","offsetHeight","maxLeft","pointer","pointerOffset","valueFirst","refresh","INIT_CHART_UPDATE_TIMEOUT","PI","makeOverlay","transformValue","overlay","updateOverlay","attributes","attr","specified","nodeValue","PRESET_COLOR_MAP","DEFAULT_COLORS","BaseChart","rawChartArgs","HTMLElement","Error","subtitle","argHeight","prepareData","prepareFirstData","showLegend","isNavigable","state","initTimeout","overlays","configure","setColors","setMargins","_this","draw","list","baseHeight","translateY","leftMargin","rightMargin","validate","_setup","makeContainer","components","Map","chartWrapper","statsWrapper","tip","bindTooltip","onlyWidthChange","init","calcWidth","calc","makeChartArea","setupComponents","forEach","c","drawArea","render","update","renderLegend","setupNavigation","baseWidth","animate","svg","make","updateNav","bindUnits","bindOverlay","keyActions","onEnterKey","bind","onLeftArrow","onUpArrow","onRightArrow","onDownArrow","e","_this4","event","keyCode","AggregationChart","maxSlices","maxLegendPoints","s","sliceTotals","allTotals","total","totals","sort","a","sumOfRemaining","textContent","legendTotals","xValues","_this3","PercentageChart","marginTop","marginBottom","paddingTop","chart","percentageBar","grandTotal","reduce","slices","classList","contains","gOff","pOff","formattedLabels","percent","setValues","showTip","layerClass","layerTransform","makeElements","animateElements","store","layer","oldData","sliceStrings","transition","newData","positions","position","newPos","newLabels","oldPos","oldLabels","calcLabels","marker","startPos","endPos","_this5","newStarts","oldStarts","unitType","units","yPositions","xPositions","barWidth","offsets","barsWidth","newXPos","newYPos","newOffsets","oldXPos","oldYPos","oldOffsets","hideLine","hideDots","valuesOverPoints","newValues","PieChart","mouseMove","mouseLeave","hoverRadio","startAngle","calcSlices","prevSlicesProperties","slicesProperties","curAngle","originDiffAngle","diffAngle","endAngle","prevProperty","curStart","curEnd","curPath","component","property","flag","calTranslateByAngle","g_off","pageX","pageY","formatted_labels","get","prevIndex","curActiveSliceIndex","prevAcitve","curActiveSlice","hoverSlice","Heatmap","domain","subdomain","discreteDomains","countLabel","today","legendColors","validate_colors","distribution_size","translateX","valid","warn","setFullYear","firstWeekStart","toDateString","lastWeekStart","getDay","no_of_cols","domainLabelGroup","dataGroups","display","dataValues","monthNames","renderAllWeeksAndStoreXValues","no_of_weeks","currentWeekSunday","weekCol","currentMonth","months","monthWeeks","monthStartPoints","dataGroup","monthChange","day","get_week_squares_group","render_month_labels","currentDate","todayTime","getTime","weekColChange","squareSide","dataValue","colorIndex","currentTimestamp","timestamp","round","dataAttr","heatSquare","nextDate","shift","pop","substring","prototype","call","querySelectorAll","dateParts","month","barOptions","lineOptions","axisOptions","tooltipOptions","xAxisMode","yAxisMode","xIsSeries","formatTooltipX","formatTooltipY","calcXPositions","calcYAxisParameters","getAllYValues","unitWidth","xOffset","xAxis","intervalHeight","calcDatasetPoints","calcYExtremes","calcYRegions","scaleAll","cumulativeYs","stacked","yExtremes","cumulativeYPos","cumulative","allValueLists","barDatasets","lineDatasets","barsConfigs","spaceRatio","p","lineConfigs","dotSize","markerConfigs","optionals","dataUnitComponents","relX","mapTooltipXPosition","formatY","formatX","titles","xVal","_this6","overlayGuides","currentIndex","currentUnit","_this7","setCurrentDataPoint","_this9","_this10","getDataPoint","datasetValues","splice"],"mappings":"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"}